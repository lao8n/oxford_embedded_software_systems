
ess_skeleton.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004324  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003f4  080044b8  080044b8  000144b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080048ac  080048ac  000201dc  2**0
                  CONTENTS
  4 .ARM          00000008  080048ac  080048ac  000148ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080048b4  080048b4  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080048b4  080048b4  000148b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080048b8  080048b8  000148b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  080048bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000003c  200001dc  08004a98  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000218  08004a98  00020218  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006070  00000000  00000000  0002020c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001668  00000000  00000000  0002627c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000450  00000000  00000000  000278e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000678  00000000  00000000  00027d38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00021915  00000000  00000000  000283b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00006c3a  00000000  00000000  00049cc5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000ccf42  00000000  00000000  000508ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0011d841  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001a1c  00000000  00000000  0011d894  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loc    000018b6  00000000  00000000  0011f2b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001dc 	.word	0x200001dc
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0800449c 	.word	0x0800449c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001e0 	.word	0x200001e0
 80001cc:	0800449c 	.word	0x0800449c

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_uldivmod>:
 8000ba8:	b953      	cbnz	r3, 8000bc0 <__aeabi_uldivmod+0x18>
 8000baa:	b94a      	cbnz	r2, 8000bc0 <__aeabi_uldivmod+0x18>
 8000bac:	2900      	cmp	r1, #0
 8000bae:	bf08      	it	eq
 8000bb0:	2800      	cmpeq	r0, #0
 8000bb2:	bf1c      	itt	ne
 8000bb4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000bb8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000bbc:	f000 b96e 	b.w	8000e9c <__aeabi_idiv0>
 8000bc0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bc4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bc8:	f000 f806 	bl	8000bd8 <__udivmoddi4>
 8000bcc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bd0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bd4:	b004      	add	sp, #16
 8000bd6:	4770      	bx	lr

08000bd8 <__udivmoddi4>:
 8000bd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bdc:	9d08      	ldr	r5, [sp, #32]
 8000bde:	4604      	mov	r4, r0
 8000be0:	468c      	mov	ip, r1
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	f040 8083 	bne.w	8000cee <__udivmoddi4+0x116>
 8000be8:	428a      	cmp	r2, r1
 8000bea:	4617      	mov	r7, r2
 8000bec:	d947      	bls.n	8000c7e <__udivmoddi4+0xa6>
 8000bee:	fab2 f282 	clz	r2, r2
 8000bf2:	b142      	cbz	r2, 8000c06 <__udivmoddi4+0x2e>
 8000bf4:	f1c2 0020 	rsb	r0, r2, #32
 8000bf8:	fa24 f000 	lsr.w	r0, r4, r0
 8000bfc:	4091      	lsls	r1, r2
 8000bfe:	4097      	lsls	r7, r2
 8000c00:	ea40 0c01 	orr.w	ip, r0, r1
 8000c04:	4094      	lsls	r4, r2
 8000c06:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000c0a:	0c23      	lsrs	r3, r4, #16
 8000c0c:	fbbc f6f8 	udiv	r6, ip, r8
 8000c10:	fa1f fe87 	uxth.w	lr, r7
 8000c14:	fb08 c116 	mls	r1, r8, r6, ip
 8000c18:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c1c:	fb06 f10e 	mul.w	r1, r6, lr
 8000c20:	4299      	cmp	r1, r3
 8000c22:	d909      	bls.n	8000c38 <__udivmoddi4+0x60>
 8000c24:	18fb      	adds	r3, r7, r3
 8000c26:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000c2a:	f080 8119 	bcs.w	8000e60 <__udivmoddi4+0x288>
 8000c2e:	4299      	cmp	r1, r3
 8000c30:	f240 8116 	bls.w	8000e60 <__udivmoddi4+0x288>
 8000c34:	3e02      	subs	r6, #2
 8000c36:	443b      	add	r3, r7
 8000c38:	1a5b      	subs	r3, r3, r1
 8000c3a:	b2a4      	uxth	r4, r4
 8000c3c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c40:	fb08 3310 	mls	r3, r8, r0, r3
 8000c44:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c48:	fb00 fe0e 	mul.w	lr, r0, lr
 8000c4c:	45a6      	cmp	lr, r4
 8000c4e:	d909      	bls.n	8000c64 <__udivmoddi4+0x8c>
 8000c50:	193c      	adds	r4, r7, r4
 8000c52:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000c56:	f080 8105 	bcs.w	8000e64 <__udivmoddi4+0x28c>
 8000c5a:	45a6      	cmp	lr, r4
 8000c5c:	f240 8102 	bls.w	8000e64 <__udivmoddi4+0x28c>
 8000c60:	3802      	subs	r0, #2
 8000c62:	443c      	add	r4, r7
 8000c64:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c68:	eba4 040e 	sub.w	r4, r4, lr
 8000c6c:	2600      	movs	r6, #0
 8000c6e:	b11d      	cbz	r5, 8000c78 <__udivmoddi4+0xa0>
 8000c70:	40d4      	lsrs	r4, r2
 8000c72:	2300      	movs	r3, #0
 8000c74:	e9c5 4300 	strd	r4, r3, [r5]
 8000c78:	4631      	mov	r1, r6
 8000c7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c7e:	b902      	cbnz	r2, 8000c82 <__udivmoddi4+0xaa>
 8000c80:	deff      	udf	#255	; 0xff
 8000c82:	fab2 f282 	clz	r2, r2
 8000c86:	2a00      	cmp	r2, #0
 8000c88:	d150      	bne.n	8000d2c <__udivmoddi4+0x154>
 8000c8a:	1bcb      	subs	r3, r1, r7
 8000c8c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000c90:	fa1f f887 	uxth.w	r8, r7
 8000c94:	2601      	movs	r6, #1
 8000c96:	fbb3 fcfe 	udiv	ip, r3, lr
 8000c9a:	0c21      	lsrs	r1, r4, #16
 8000c9c:	fb0e 331c 	mls	r3, lr, ip, r3
 8000ca0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ca4:	fb08 f30c 	mul.w	r3, r8, ip
 8000ca8:	428b      	cmp	r3, r1
 8000caa:	d907      	bls.n	8000cbc <__udivmoddi4+0xe4>
 8000cac:	1879      	adds	r1, r7, r1
 8000cae:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8000cb2:	d202      	bcs.n	8000cba <__udivmoddi4+0xe2>
 8000cb4:	428b      	cmp	r3, r1
 8000cb6:	f200 80e9 	bhi.w	8000e8c <__udivmoddi4+0x2b4>
 8000cba:	4684      	mov	ip, r0
 8000cbc:	1ac9      	subs	r1, r1, r3
 8000cbe:	b2a3      	uxth	r3, r4
 8000cc0:	fbb1 f0fe 	udiv	r0, r1, lr
 8000cc4:	fb0e 1110 	mls	r1, lr, r0, r1
 8000cc8:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000ccc:	fb08 f800 	mul.w	r8, r8, r0
 8000cd0:	45a0      	cmp	r8, r4
 8000cd2:	d907      	bls.n	8000ce4 <__udivmoddi4+0x10c>
 8000cd4:	193c      	adds	r4, r7, r4
 8000cd6:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000cda:	d202      	bcs.n	8000ce2 <__udivmoddi4+0x10a>
 8000cdc:	45a0      	cmp	r8, r4
 8000cde:	f200 80d9 	bhi.w	8000e94 <__udivmoddi4+0x2bc>
 8000ce2:	4618      	mov	r0, r3
 8000ce4:	eba4 0408 	sub.w	r4, r4, r8
 8000ce8:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000cec:	e7bf      	b.n	8000c6e <__udivmoddi4+0x96>
 8000cee:	428b      	cmp	r3, r1
 8000cf0:	d909      	bls.n	8000d06 <__udivmoddi4+0x12e>
 8000cf2:	2d00      	cmp	r5, #0
 8000cf4:	f000 80b1 	beq.w	8000e5a <__udivmoddi4+0x282>
 8000cf8:	2600      	movs	r6, #0
 8000cfa:	e9c5 0100 	strd	r0, r1, [r5]
 8000cfe:	4630      	mov	r0, r6
 8000d00:	4631      	mov	r1, r6
 8000d02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d06:	fab3 f683 	clz	r6, r3
 8000d0a:	2e00      	cmp	r6, #0
 8000d0c:	d14a      	bne.n	8000da4 <__udivmoddi4+0x1cc>
 8000d0e:	428b      	cmp	r3, r1
 8000d10:	d302      	bcc.n	8000d18 <__udivmoddi4+0x140>
 8000d12:	4282      	cmp	r2, r0
 8000d14:	f200 80b8 	bhi.w	8000e88 <__udivmoddi4+0x2b0>
 8000d18:	1a84      	subs	r4, r0, r2
 8000d1a:	eb61 0103 	sbc.w	r1, r1, r3
 8000d1e:	2001      	movs	r0, #1
 8000d20:	468c      	mov	ip, r1
 8000d22:	2d00      	cmp	r5, #0
 8000d24:	d0a8      	beq.n	8000c78 <__udivmoddi4+0xa0>
 8000d26:	e9c5 4c00 	strd	r4, ip, [r5]
 8000d2a:	e7a5      	b.n	8000c78 <__udivmoddi4+0xa0>
 8000d2c:	f1c2 0320 	rsb	r3, r2, #32
 8000d30:	fa20 f603 	lsr.w	r6, r0, r3
 8000d34:	4097      	lsls	r7, r2
 8000d36:	fa01 f002 	lsl.w	r0, r1, r2
 8000d3a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d3e:	40d9      	lsrs	r1, r3
 8000d40:	4330      	orrs	r0, r6
 8000d42:	0c03      	lsrs	r3, r0, #16
 8000d44:	fbb1 f6fe 	udiv	r6, r1, lr
 8000d48:	fa1f f887 	uxth.w	r8, r7
 8000d4c:	fb0e 1116 	mls	r1, lr, r6, r1
 8000d50:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d54:	fb06 f108 	mul.w	r1, r6, r8
 8000d58:	4299      	cmp	r1, r3
 8000d5a:	fa04 f402 	lsl.w	r4, r4, r2
 8000d5e:	d909      	bls.n	8000d74 <__udivmoddi4+0x19c>
 8000d60:	18fb      	adds	r3, r7, r3
 8000d62:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
 8000d66:	f080 808d 	bcs.w	8000e84 <__udivmoddi4+0x2ac>
 8000d6a:	4299      	cmp	r1, r3
 8000d6c:	f240 808a 	bls.w	8000e84 <__udivmoddi4+0x2ac>
 8000d70:	3e02      	subs	r6, #2
 8000d72:	443b      	add	r3, r7
 8000d74:	1a5b      	subs	r3, r3, r1
 8000d76:	b281      	uxth	r1, r0
 8000d78:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d7c:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d80:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d84:	fb00 f308 	mul.w	r3, r0, r8
 8000d88:	428b      	cmp	r3, r1
 8000d8a:	d907      	bls.n	8000d9c <__udivmoddi4+0x1c4>
 8000d8c:	1879      	adds	r1, r7, r1
 8000d8e:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8000d92:	d273      	bcs.n	8000e7c <__udivmoddi4+0x2a4>
 8000d94:	428b      	cmp	r3, r1
 8000d96:	d971      	bls.n	8000e7c <__udivmoddi4+0x2a4>
 8000d98:	3802      	subs	r0, #2
 8000d9a:	4439      	add	r1, r7
 8000d9c:	1acb      	subs	r3, r1, r3
 8000d9e:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000da2:	e778      	b.n	8000c96 <__udivmoddi4+0xbe>
 8000da4:	f1c6 0c20 	rsb	ip, r6, #32
 8000da8:	fa03 f406 	lsl.w	r4, r3, r6
 8000dac:	fa22 f30c 	lsr.w	r3, r2, ip
 8000db0:	431c      	orrs	r4, r3
 8000db2:	fa20 f70c 	lsr.w	r7, r0, ip
 8000db6:	fa01 f306 	lsl.w	r3, r1, r6
 8000dba:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000dbe:	fa21 f10c 	lsr.w	r1, r1, ip
 8000dc2:	431f      	orrs	r7, r3
 8000dc4:	0c3b      	lsrs	r3, r7, #16
 8000dc6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000dca:	fa1f f884 	uxth.w	r8, r4
 8000dce:	fb0e 1119 	mls	r1, lr, r9, r1
 8000dd2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000dd6:	fb09 fa08 	mul.w	sl, r9, r8
 8000dda:	458a      	cmp	sl, r1
 8000ddc:	fa02 f206 	lsl.w	r2, r2, r6
 8000de0:	fa00 f306 	lsl.w	r3, r0, r6
 8000de4:	d908      	bls.n	8000df8 <__udivmoddi4+0x220>
 8000de6:	1861      	adds	r1, r4, r1
 8000de8:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8000dec:	d248      	bcs.n	8000e80 <__udivmoddi4+0x2a8>
 8000dee:	458a      	cmp	sl, r1
 8000df0:	d946      	bls.n	8000e80 <__udivmoddi4+0x2a8>
 8000df2:	f1a9 0902 	sub.w	r9, r9, #2
 8000df6:	4421      	add	r1, r4
 8000df8:	eba1 010a 	sub.w	r1, r1, sl
 8000dfc:	b2bf      	uxth	r7, r7
 8000dfe:	fbb1 f0fe 	udiv	r0, r1, lr
 8000e02:	fb0e 1110 	mls	r1, lr, r0, r1
 8000e06:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000e0a:	fb00 f808 	mul.w	r8, r0, r8
 8000e0e:	45b8      	cmp	r8, r7
 8000e10:	d907      	bls.n	8000e22 <__udivmoddi4+0x24a>
 8000e12:	19e7      	adds	r7, r4, r7
 8000e14:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000e18:	d22e      	bcs.n	8000e78 <__udivmoddi4+0x2a0>
 8000e1a:	45b8      	cmp	r8, r7
 8000e1c:	d92c      	bls.n	8000e78 <__udivmoddi4+0x2a0>
 8000e1e:	3802      	subs	r0, #2
 8000e20:	4427      	add	r7, r4
 8000e22:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e26:	eba7 0708 	sub.w	r7, r7, r8
 8000e2a:	fba0 8902 	umull	r8, r9, r0, r2
 8000e2e:	454f      	cmp	r7, r9
 8000e30:	46c6      	mov	lr, r8
 8000e32:	4649      	mov	r1, r9
 8000e34:	d31a      	bcc.n	8000e6c <__udivmoddi4+0x294>
 8000e36:	d017      	beq.n	8000e68 <__udivmoddi4+0x290>
 8000e38:	b15d      	cbz	r5, 8000e52 <__udivmoddi4+0x27a>
 8000e3a:	ebb3 020e 	subs.w	r2, r3, lr
 8000e3e:	eb67 0701 	sbc.w	r7, r7, r1
 8000e42:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000e46:	40f2      	lsrs	r2, r6
 8000e48:	ea4c 0202 	orr.w	r2, ip, r2
 8000e4c:	40f7      	lsrs	r7, r6
 8000e4e:	e9c5 2700 	strd	r2, r7, [r5]
 8000e52:	2600      	movs	r6, #0
 8000e54:	4631      	mov	r1, r6
 8000e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e5a:	462e      	mov	r6, r5
 8000e5c:	4628      	mov	r0, r5
 8000e5e:	e70b      	b.n	8000c78 <__udivmoddi4+0xa0>
 8000e60:	4606      	mov	r6, r0
 8000e62:	e6e9      	b.n	8000c38 <__udivmoddi4+0x60>
 8000e64:	4618      	mov	r0, r3
 8000e66:	e6fd      	b.n	8000c64 <__udivmoddi4+0x8c>
 8000e68:	4543      	cmp	r3, r8
 8000e6a:	d2e5      	bcs.n	8000e38 <__udivmoddi4+0x260>
 8000e6c:	ebb8 0e02 	subs.w	lr, r8, r2
 8000e70:	eb69 0104 	sbc.w	r1, r9, r4
 8000e74:	3801      	subs	r0, #1
 8000e76:	e7df      	b.n	8000e38 <__udivmoddi4+0x260>
 8000e78:	4608      	mov	r0, r1
 8000e7a:	e7d2      	b.n	8000e22 <__udivmoddi4+0x24a>
 8000e7c:	4660      	mov	r0, ip
 8000e7e:	e78d      	b.n	8000d9c <__udivmoddi4+0x1c4>
 8000e80:	4681      	mov	r9, r0
 8000e82:	e7b9      	b.n	8000df8 <__udivmoddi4+0x220>
 8000e84:	4666      	mov	r6, ip
 8000e86:	e775      	b.n	8000d74 <__udivmoddi4+0x19c>
 8000e88:	4630      	mov	r0, r6
 8000e8a:	e74a      	b.n	8000d22 <__udivmoddi4+0x14a>
 8000e8c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000e90:	4439      	add	r1, r7
 8000e92:	e713      	b.n	8000cbc <__udivmoddi4+0xe4>
 8000e94:	3802      	subs	r0, #2
 8000e96:	443c      	add	r4, r7
 8000e98:	e724      	b.n	8000ce4 <__udivmoddi4+0x10c>
 8000e9a:	bf00      	nop

08000e9c <__aeabi_idiv0>:
 8000e9c:	4770      	bx	lr
 8000e9e:	bf00      	nop

08000ea0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ea0:	b570      	push	{r4, r5, r6, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ea2:	2400      	movs	r4, #0
{
 8000ea4:	b094      	sub	sp, #80	; 0x50
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ea6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000eaa:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000eae:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8000eb2:	e9cd 4406 	strd	r4, r4, [sp, #24]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000eb6:	4a1d      	ldr	r2, [pc, #116]	; (8000f2c <SystemClock_Config+0x8c>)
 8000eb8:	9401      	str	r4, [sp, #4]
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000eba:	940d      	str	r4, [sp, #52]	; 0x34
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ebc:	9403      	str	r4, [sp, #12]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ebe:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ec0:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <SystemClock_Config+0x90>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ec2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000ec6:	6411      	str	r1, [r2, #64]	; 0x40
 8000ec8:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000eca:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ece:	9201      	str	r2, [sp, #4]
 8000ed0:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ed2:	9402      	str	r4, [sp, #8]
 8000ed4:	681a      	ldr	r2, [r3, #0]
 8000ed6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000eda:	601a      	str	r2, [r3, #0]
 8000edc:	681b      	ldr	r3, [r3, #0]
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000ede:	940f      	str	r4, [sp, #60]	; 0x3c
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ee0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000ee4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000ee6:	2201      	movs	r2, #1
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ee8:	2310      	movs	r3, #16
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000eea:	2502      	movs	r5, #2
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000eec:	9802      	ldr	r0, [sp, #8]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000eee:	920b      	str	r2, [sp, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000ef0:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000ef2:	22a8      	movs	r2, #168	; 0xa8
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ef4:	930c      	str	r3, [sp, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 4;
  HAL_RCC_OscConfig(&RCC_OscInitStruct);
 8000ef6:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000ef8:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000efa:	9110      	str	r1, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000efc:	9211      	str	r2, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8000efe:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000f00:	9508      	str	r5, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000f02:	950e      	str	r5, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000f04:	9512      	str	r5, [sp, #72]	; 0x48
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f06:	260f      	movs	r6, #15
  HAL_RCC_OscConfig(&RCC_OscInitStruct);
 8000f08:	f000 fb12 	bl	8001530 <HAL_RCC_OscConfig>
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000f0c:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000f10:	f44f 5380 	mov.w	r3, #4096	; 0x1000

  HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5);
 8000f14:	a803      	add	r0, sp, #12
 8000f16:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000f18:	e9cd 2306 	strd	r2, r3, [sp, #24]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f1c:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f1e:	9405      	str	r4, [sp, #20]
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f20:	9603      	str	r6, [sp, #12]
  HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5);
 8000f22:	f000 fd1b 	bl	800195c <HAL_RCC_ClockConfig>
}
 8000f26:	b014      	add	sp, #80	; 0x50
 8000f28:	bd70      	pop	{r4, r5, r6, pc}
 8000f2a:	bf00      	nop
 8000f2c:	40023800 	.word	0x40023800
 8000f30:	40007000 	.word	0x40007000

08000f34 <_init_leds>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
void _init_leds(void)
{
 8000f34:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f36:	2400      	movs	r4, #0
{
 8000f38:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f3a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8000f3e:	e9cd 4403 	strd	r4, r4, [sp, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f42:	4b0f      	ldr	r3, [pc, #60]	; (8000f80 <_init_leds+0x4c>)
 8000f44:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f46:	9405      	str	r4, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f48:	6b1a      	ldr	r2, [r3, #48]	; 0x30

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 8000f4a:	480e      	ldr	r0, [pc, #56]	; (8000f84 <_init_leds+0x50>)
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f4c:	f042 0208 	orr.w	r2, r2, #8
 8000f50:	631a      	str	r2, [r3, #48]	; 0x30
 8000f52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f54:	f003 0308 	and.w	r3, r3, #8
 8000f58:	9300      	str	r3, [sp, #0]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 8000f5a:	4622      	mov	r2, r4
 8000f5c:	f44f 4170 	mov.w	r1, #61440	; 0xf000
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f60:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15, GPIO_PIN_RESET);
 8000f62:	f000 fae1 	bl	8001528 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PD12 PD13 PD14 PD15 */
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 8000f66:	f44f 4270 	mov.w	r2, #61440	; 0xf000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f6a:	2301      	movs	r3, #1
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000f6c:	4805      	ldr	r0, [pc, #20]	; (8000f84 <_init_leds+0x50>)
 8000f6e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f70:	e9cd 4403 	strd	r4, r4, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f74:	e9cd 2301 	strd	r2, r3, [sp, #4]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000f78:	f000 f9b2 	bl	80012e0 <HAL_GPIO_Init>

}
 8000f7c:	b006      	add	sp, #24
 8000f7e:	bd10      	pop	{r4, pc}
 8000f80:	40023800 	.word	0x40023800
 8000f84:	40020c00 	.word	0x40020c00

08000f88 <_init_button>:


void _init_button() {
 8000f88:	b510      	push	{r4, lr}
 8000f8a:	b086      	sub	sp, #24
	GPIO_InitTypeDef GPIO_InitStruct;
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	4a0b      	ldr	r2, [pc, #44]	; (8000fbc <_init_button+0x34>)
 8000f90:	9300      	str	r3, [sp, #0]
 8000f92:	6b11      	ldr	r1, [r2, #48]	; 0x30
	GPIO_InitStruct.Pin = GPIO_PIN_0;
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
	GPIO_InitStruct.Pull = GPIO_NOPULL;
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
	/* Initialize pin */
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f94:	480a      	ldr	r0, [pc, #40]	; (8000fc0 <_init_button+0x38>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f96:	f041 0101 	orr.w	r1, r1, #1
 8000f9a:	6311      	str	r1, [r2, #48]	; 0x30
 8000f9c:	6b12      	ldr	r2, [r2, #48]	; 0x30
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000f9e:	9302      	str	r3, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000fa0:	f002 0201 	and.w	r2, r2, #1
 8000fa4:	9200      	str	r2, [sp, #0]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000fa6:	a901      	add	r1, sp, #4
	GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000fa8:	2201      	movs	r2, #1
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000faa:	e9cd 3303 	strd	r3, r3, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000fae:	9c00      	ldr	r4, [sp, #0]
	GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000fb0:	9201      	str	r2, [sp, #4]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000fb2:	f000 f995 	bl	80012e0 <HAL_GPIO_Init>
}
 8000fb6:	b006      	add	sp, #24
 8000fb8:	bd10      	pop	{r4, pc}
 8000fba:	bf00      	nop
 8000fbc:	40023800 	.word	0x40023800
 8000fc0:	40020000 	.word	0x40020000

08000fc4 <ess_helper_init>:



void ess_helper_init() {
 8000fc4:	b508      	push	{r3, lr}
	  SystemClock_Config();
 8000fc6:	f7ff ff6b 	bl	8000ea0 <SystemClock_Config>
	  _init_leds();
 8000fca:	f7ff ffb3 	bl	8000f34 <_init_leds>
	  _init_button();
}
 8000fce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	  _init_button();
 8000fd2:	f7ff bfd9 	b.w	8000f88 <_init_button>
 8000fd6:	bf00      	nop

08000fd8 <main>:
/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "ess_helper.h"

int main(void)
{
 8000fd8:	b508      	push	{r3, lr}
	/* Initialize system */
	HAL_Init();
 8000fda:	f000 f8ef 	bl	80011bc <HAL_Init>
	/* Initialize peripherals on board */
	ess_helper_init();
 8000fde:	f7ff fff1 	bl	8000fc4 <ess_helper_init>
	// Set all the LEDs to on.
	*(uint32_t*)0x40020C14 = 0x1000;
 8000fe2:	4b02      	ldr	r3, [pc, #8]	; (8000fec <main+0x14>)
 8000fe4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000fe8:	601a      	str	r2, [r3, #0]
    while(1){
 8000fea:	e7fe      	b.n	8000fea <main+0x12>
 8000fec:	40020c14 	.word	0x40020c14

08000ff0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000ff0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000ff2:	4b0c      	ldr	r3, [pc, #48]	; (8001024 <HAL_MspInit+0x34>)
 8000ff4:	2100      	movs	r1, #0
 8000ff6:	9100      	str	r1, [sp, #0]
 8000ff8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000ffa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000ffe:	645a      	str	r2, [r3, #68]	; 0x44
 8001000:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001002:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8001006:	9200      	str	r2, [sp, #0]
 8001008:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800100a:	9101      	str	r1, [sp, #4]
 800100c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800100e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001012:	641a      	str	r2, [r3, #64]	; 0x40
 8001014:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001016:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800101a:	9301      	str	r3, [sp, #4]
 800101c:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800101e:	b002      	add	sp, #8
 8001020:	4770      	bx	lr
 8001022:	bf00      	nop
 8001024:	40023800 	.word	0x40023800

08001028 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001028:	e7fe      	b.n	8001028 <NMI_Handler>
 800102a:	bf00      	nop

0800102c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800102c:	e7fe      	b.n	800102c <HardFault_Handler>
 800102e:	bf00      	nop

08001030 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001030:	e7fe      	b.n	8001030 <MemManage_Handler>
 8001032:	bf00      	nop

08001034 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001034:	e7fe      	b.n	8001034 <BusFault_Handler>
 8001036:	bf00      	nop

08001038 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001038:	e7fe      	b.n	8001038 <UsageFault_Handler>
 800103a:	bf00      	nop

0800103c <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800103c:	4770      	bx	lr
 800103e:	bf00      	nop

08001040 <DebugMon_Handler>:
 8001040:	4770      	bx	lr
 8001042:	bf00      	nop

08001044 <PendSV_Handler>:
 8001044:	4770      	bx	lr
 8001046:	bf00      	nop

08001048 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001048:	f000 b8d2 	b.w	80011f0 <HAL_IncTick>

0800104c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800104c:	2001      	movs	r0, #1
 800104e:	4770      	bx	lr

08001050 <_kill>:

int _kill(int pid, int sig)
{
 8001050:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001052:	f000 fd21 	bl	8001a98 <__errno>
 8001056:	2316      	movs	r3, #22
 8001058:	6003      	str	r3, [r0, #0]
	return -1;
}
 800105a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800105e:	bd08      	pop	{r3, pc}

08001060 <_exit>:

void _exit (int status)
{
 8001060:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001062:	f000 fd19 	bl	8001a98 <__errno>
 8001066:	2316      	movs	r3, #22
 8001068:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800106a:	e7fe      	b.n	800106a <_exit+0xa>

0800106c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800106c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800106e:	1e16      	subs	r6, r2, #0
 8001070:	dd07      	ble.n	8001082 <_read+0x16>
 8001072:	460c      	mov	r4, r1
 8001074:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001076:	f3af 8000 	nop.w
 800107a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800107e:	42a5      	cmp	r5, r4
 8001080:	d1f9      	bne.n	8001076 <_read+0xa>
	}

return len;
}
 8001082:	4630      	mov	r0, r6
 8001084:	bd70      	pop	{r4, r5, r6, pc}
 8001086:	bf00      	nop

08001088 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001088:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800108a:	1e16      	subs	r6, r2, #0
 800108c:	dd07      	ble.n	800109e <_write+0x16>
 800108e:	460c      	mov	r4, r1
 8001090:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001092:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001096:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800109a:	42a5      	cmp	r5, r4
 800109c:	d1f9      	bne.n	8001092 <_write+0xa>
	}
	return len;
}
 800109e:	4630      	mov	r0, r6
 80010a0:	bd70      	pop	{r4, r5, r6, pc}
 80010a2:	bf00      	nop

080010a4 <_close>:

int _close(int file)
{
	return -1;
}
 80010a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010a8:	4770      	bx	lr
 80010aa:	bf00      	nop

080010ac <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80010ac:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80010b0:	604b      	str	r3, [r1, #4]
	return 0;
}
 80010b2:	2000      	movs	r0, #0
 80010b4:	4770      	bx	lr
 80010b6:	bf00      	nop

080010b8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80010b8:	2001      	movs	r0, #1
 80010ba:	4770      	bx	lr

080010bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80010bc:	2000      	movs	r0, #0
 80010be:	4770      	bx	lr

080010c0 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80010c0:	490c      	ldr	r1, [pc, #48]	; (80010f4 <_sbrk+0x34>)
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80010c2:	4a0d      	ldr	r2, [pc, #52]	; (80010f8 <_sbrk+0x38>)
  if (NULL == __sbrk_heap_end)
 80010c4:	680b      	ldr	r3, [r1, #0]
{
 80010c6:	b510      	push	{r4, lr}
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80010c8:	4c0c      	ldr	r4, [pc, #48]	; (80010fc <_sbrk+0x3c>)
 80010ca:	1b12      	subs	r2, r2, r4
  if (NULL == __sbrk_heap_end)
 80010cc:	b12b      	cbz	r3, 80010da <_sbrk+0x1a>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80010ce:	4418      	add	r0, r3
 80010d0:	4290      	cmp	r0, r2
 80010d2:	d807      	bhi.n	80010e4 <_sbrk+0x24>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 80010d4:	6008      	str	r0, [r1, #0]

  return (void *)prev_heap_end;
}
 80010d6:	4618      	mov	r0, r3
 80010d8:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 80010da:	4b09      	ldr	r3, [pc, #36]	; (8001100 <_sbrk+0x40>)
 80010dc:	600b      	str	r3, [r1, #0]
  if (__sbrk_heap_end + incr > max_heap)
 80010de:	4418      	add	r0, r3
 80010e0:	4290      	cmp	r0, r2
 80010e2:	d9f7      	bls.n	80010d4 <_sbrk+0x14>
    errno = ENOMEM;
 80010e4:	f000 fcd8 	bl	8001a98 <__errno>
 80010e8:	230c      	movs	r3, #12
 80010ea:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80010ec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80010f0:	4618      	mov	r0, r3
 80010f2:	bd10      	pop	{r4, pc}
 80010f4:	200001f8 	.word	0x200001f8
 80010f8:	20020000 	.word	0x20020000
 80010fc:	00000400 	.word	0x00000400
 8001100:	20000218 	.word	0x20000218

08001104 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001104:	4b05      	ldr	r3, [pc, #20]	; (800111c <SystemInit+0x18>)
 8001106:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800110a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800110e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8001112:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001116:	6099      	str	r1, [r3, #8]
#endif
}
 8001118:	4770      	bx	lr
 800111a:	bf00      	nop
 800111c:	e000ed00 	.word	0xe000ed00

08001120 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001120:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001158 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001124:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001126:	e003      	b.n	8001130 <LoopCopyDataInit>

08001128 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001128:	4b0c      	ldr	r3, [pc, #48]	; (800115c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800112a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800112c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800112e:	3104      	adds	r1, #4

08001130 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001130:	480b      	ldr	r0, [pc, #44]	; (8001160 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8001132:	4b0c      	ldr	r3, [pc, #48]	; (8001164 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001134:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001136:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001138:	d3f6      	bcc.n	8001128 <CopyDataInit>
  ldr  r2, =_sbss
 800113a:	4a0b      	ldr	r2, [pc, #44]	; (8001168 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800113c:	e002      	b.n	8001144 <LoopFillZerobss>

0800113e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800113e:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001140:	f842 3b04 	str.w	r3, [r2], #4

08001144 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001144:	4b09      	ldr	r3, [pc, #36]	; (800116c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001146:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001148:	d3f9      	bcc.n	800113e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800114a:	f7ff ffdb 	bl	8001104 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800114e:	f000 fca9 	bl	8001aa4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001152:	f7ff ff41 	bl	8000fd8 <main>
  bx  lr    
 8001156:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001158:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 800115c:	080048bc 	.word	0x080048bc
  ldr  r0, =_sdata
 8001160:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001164:	200001dc 	.word	0x200001dc
  ldr  r2, =_sbss
 8001168:	200001dc 	.word	0x200001dc
  ldr  r3, = _ebss
 800116c:	20000218 	.word	0x20000218

08001170 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001170:	e7fe      	b.n	8001170 <ADC_IRQHandler>
	...

08001174 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001174:	b538      	push	{r3, r4, r5, lr}
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001176:	4a0e      	ldr	r2, [pc, #56]	; (80011b0 <HAL_InitTick+0x3c>)
 8001178:	4b0e      	ldr	r3, [pc, #56]	; (80011b4 <HAL_InitTick+0x40>)
 800117a:	7812      	ldrb	r2, [r2, #0]
 800117c:	681b      	ldr	r3, [r3, #0]
{
 800117e:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001180:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001184:	fbb0 f0f2 	udiv	r0, r0, r2
 8001188:	fbb3 f0f0 	udiv	r0, r3, r0
 800118c:	f000 f88e 	bl	80012ac <HAL_SYSTICK_Config>
 8001190:	b908      	cbnz	r0, 8001196 <HAL_InitTick+0x22>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001192:	2d0f      	cmp	r5, #15
 8001194:	d901      	bls.n	800119a <HAL_InitTick+0x26>
    return HAL_ERROR;
 8001196:	2001      	movs	r0, #1
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
 8001198:	bd38      	pop	{r3, r4, r5, pc}
 800119a:	4604      	mov	r4, r0
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800119c:	4602      	mov	r2, r0
 800119e:	4629      	mov	r1, r5
 80011a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011a4:	f000 f84a 	bl	800123c <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80011a8:	4b03      	ldr	r3, [pc, #12]	; (80011b8 <HAL_InitTick+0x44>)
 80011aa:	4620      	mov	r0, r4
 80011ac:	601d      	str	r5, [r3, #0]
}
 80011ae:	bd38      	pop	{r3, r4, r5, pc}
 80011b0:	20000004 	.word	0x20000004
 80011b4:	20000000 	.word	0x20000000
 80011b8:	20000008 	.word	0x20000008

080011bc <HAL_Init>:
{
 80011bc:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80011be:	4b0b      	ldr	r3, [pc, #44]	; (80011ec <HAL_Init+0x30>)
 80011c0:	681a      	ldr	r2, [r3, #0]
 80011c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80011c6:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80011c8:	681a      	ldr	r2, [r3, #0]
 80011ca:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80011ce:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80011d0:	681a      	ldr	r2, [r3, #0]
 80011d2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80011d6:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80011d8:	2003      	movs	r0, #3
 80011da:	f000 f81b 	bl	8001214 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 80011de:	2000      	movs	r0, #0
 80011e0:	f7ff ffc8 	bl	8001174 <HAL_InitTick>
  HAL_MspInit();
 80011e4:	f7ff ff04 	bl	8000ff0 <HAL_MspInit>
}
 80011e8:	2000      	movs	r0, #0
 80011ea:	bd08      	pop	{r3, pc}
 80011ec:	40023c00 	.word	0x40023c00

080011f0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80011f0:	4a03      	ldr	r2, [pc, #12]	; (8001200 <HAL_IncTick+0x10>)
 80011f2:	4b04      	ldr	r3, [pc, #16]	; (8001204 <HAL_IncTick+0x14>)
 80011f4:	6811      	ldr	r1, [r2, #0]
 80011f6:	781b      	ldrb	r3, [r3, #0]
 80011f8:	440b      	add	r3, r1
 80011fa:	6013      	str	r3, [r2, #0]
}
 80011fc:	4770      	bx	lr
 80011fe:	bf00      	nop
 8001200:	20000204 	.word	0x20000204
 8001204:	20000004 	.word	0x20000004

08001208 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001208:	4b01      	ldr	r3, [pc, #4]	; (8001210 <HAL_GetTick+0x8>)
 800120a:	6818      	ldr	r0, [r3, #0]
}
 800120c:	4770      	bx	lr
 800120e:	bf00      	nop
 8001210:	20000204 	.word	0x20000204

08001214 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001214:	4908      	ldr	r1, [pc, #32]	; (8001238 <HAL_NVIC_SetPriorityGrouping+0x24>)
 8001216:	68ca      	ldr	r2, [r1, #12]
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001218:	b410      	push	{r4}
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800121a:	0200      	lsls	r0, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800121c:	f64f 04ff 	movw	r4, #63743	; 0xf8ff
 8001220:	4022      	ands	r2, r4
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001222:	f400 63e0 	and.w	r3, r0, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001226:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001228:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800122c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8001230:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->AIRCR =  reg_value;
 8001234:	60cb      	str	r3, [r1, #12]
 8001236:	4770      	bx	lr
 8001238:	e000ed00 	.word	0xe000ed00

0800123c <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800123c:	4b19      	ldr	r3, [pc, #100]	; (80012a4 <HAL_NVIC_SetPriority+0x68>)
 800123e:	68db      	ldr	r3, [r3, #12]
 8001240:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001244:	b430      	push	{r4, r5}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001246:	f1c3 0507 	rsb	r5, r3, #7
 800124a:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800124c:	f103 0404 	add.w	r4, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001250:	bf28      	it	cs
 8001252:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001254:	2c06      	cmp	r4, #6
 8001256:	d919      	bls.n	800128c <HAL_NVIC_SetPriority+0x50>
 8001258:	3b03      	subs	r3, #3
 800125a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800125e:	409c      	lsls	r4, r3
 8001260:	ea22 0204 	bic.w	r2, r2, r4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001264:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8001268:	40ac      	lsls	r4, r5
 800126a:	ea21 0104 	bic.w	r1, r1, r4
 800126e:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8001270:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001272:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8001276:	db0c      	blt.n	8001292 <HAL_NVIC_SetPriority+0x56>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001278:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800127c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8001280:	0109      	lsls	r1, r1, #4
 8001282:	b2c9      	uxtb	r1, r1
 8001284:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001288:	bc30      	pop	{r4, r5}
 800128a:	4770      	bx	lr
 800128c:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800128e:	4613      	mov	r3, r2
 8001290:	e7e8      	b.n	8001264 <HAL_NVIC_SetPriority+0x28>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001292:	4b05      	ldr	r3, [pc, #20]	; (80012a8 <HAL_NVIC_SetPriority+0x6c>)
 8001294:	f000 000f 	and.w	r0, r0, #15
 8001298:	0109      	lsls	r1, r1, #4
 800129a:	4403      	add	r3, r0
 800129c:	b2c9      	uxtb	r1, r1
 800129e:	7619      	strb	r1, [r3, #24]
 80012a0:	bc30      	pop	{r4, r5}
 80012a2:	4770      	bx	lr
 80012a4:	e000ed00 	.word	0xe000ed00
 80012a8:	e000ecfc 	.word	0xe000ecfc

080012ac <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80012ac:	3801      	subs	r0, #1
 80012ae:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80012b2:	d20e      	bcs.n	80012d2 <HAL_SYSTICK_Config+0x26>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80012b4:	4b08      	ldr	r3, [pc, #32]	; (80012d8 <HAL_SYSTICK_Config+0x2c>)
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80012b6:	b410      	push	{r4}
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80012b8:	4c08      	ldr	r4, [pc, #32]	; (80012dc <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80012ba:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80012bc:	20f0      	movs	r0, #240	; 0xf0
 80012be:	f884 0023 	strb.w	r0, [r4, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80012c2:	2200      	movs	r2, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80012c4:	2107      	movs	r1, #7
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80012c6:	4610      	mov	r0, r2
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80012c8:	609a      	str	r2, [r3, #8]
   return SysTick_Config(TicksNumb);
}
 80012ca:	f85d 4b04 	ldr.w	r4, [sp], #4
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80012ce:	6019      	str	r1, [r3, #0]
 80012d0:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80012d2:	2001      	movs	r0, #1
 80012d4:	4770      	bx	lr
 80012d6:	bf00      	nop
 80012d8:	e000e010 	.word	0xe000e010
 80012dc:	e000ed00 	.word	0xe000ed00

080012e0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80012e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80012e4:	f8df c234 	ldr.w	ip, [pc, #564]	; 800151c <HAL_GPIO_Init+0x23c>
 80012e8:	680d      	ldr	r5, [r1, #0]
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80012ea:	f8df b234 	ldr.w	fp, [pc, #564]	; 8001520 <HAL_GPIO_Init+0x240>
{
 80012ee:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80012f0:	2300      	movs	r3, #0
 80012f2:	e003      	b.n	80012fc <HAL_GPIO_Init+0x1c>
 80012f4:	3301      	adds	r3, #1
 80012f6:	2b10      	cmp	r3, #16
 80012f8:	f000 809c 	beq.w	8001434 <HAL_GPIO_Init+0x154>
    ioposition = 0x01U << position;
 80012fc:	2201      	movs	r2, #1
 80012fe:	409a      	lsls	r2, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001300:	ea02 0a05 	and.w	sl, r2, r5
    if(iocurrent == ioposition)
 8001304:	43aa      	bics	r2, r5
 8001306:	d1f5      	bne.n	80012f4 <HAL_GPIO_Init+0x14>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8001308:	684c      	ldr	r4, [r1, #4]
 800130a:	f024 0e10 	bic.w	lr, r4, #16
 800130e:	f10e 32ff 	add.w	r2, lr, #4294967295	; 0xffffffff
 8001312:	2a01      	cmp	r2, #1
 8001314:	ea4f 0643 	mov.w	r6, r3, lsl #1
 8001318:	f240 808f 	bls.w	800143a <HAL_GPIO_Init+0x15a>
      temp = GPIOx->PUPDR;
 800131c:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800131e:	2203      	movs	r2, #3
 8001320:	40b2      	lsls	r2, r6
 8001322:	ea27 0e02 	bic.w	lr, r7, r2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001326:	688f      	ldr	r7, [r1, #8]
 8001328:	40b7      	lsls	r7, r6
 800132a:	ea47 070e 	orr.w	r7, r7, lr
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800132e:	43d2      	mvns	r2, r2
 8001330:	9201      	str	r2, [sp, #4]
      GPIOx->PUPDR = temp;
 8001332:	60c7      	str	r7, [r0, #12]
      temp = GPIOx->MODER;
 8001334:	f8d0 e000 	ldr.w	lr, [r0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001338:	9a01      	ldr	r2, [sp, #4]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800133a:	f004 0703 	and.w	r7, r4, #3
 800133e:	fa07 f606 	lsl.w	r6, r7, r6
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001342:	ea0e 0e02 	and.w	lr, lr, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001346:	ea46 060e 	orr.w	r6, r6, lr
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800134a:	00e7      	lsls	r7, r4, #3
      GPIOx->MODER = temp;
 800134c:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800134e:	d5d1      	bpl.n	80012f4 <HAL_GPIO_Init+0x14>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001350:	2200      	movs	r2, #0
 8001352:	9203      	str	r2, [sp, #12]
 8001354:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
 8001358:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800135c:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
 8001360:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
 8001364:	f023 0603 	bic.w	r6, r3, #3
 8001368:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800136c:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8001370:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
 8001374:	9203      	str	r2, [sp, #12]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001376:	f003 0703 	and.w	r7, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800137a:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800137c:	f8d6 e008 	ldr.w	lr, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001380:	00bf      	lsls	r7, r7, #2
 8001382:	220f      	movs	r2, #15
 8001384:	40ba      	lsls	r2, r7
 8001386:	ea2e 0802 	bic.w	r8, lr, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800138a:	4a5e      	ldr	r2, [pc, #376]	; (8001504 <HAL_GPIO_Init+0x224>)
 800138c:	4290      	cmp	r0, r2
 800138e:	d024      	beq.n	80013da <HAL_GPIO_Init+0xfa>
 8001390:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001394:	4290      	cmp	r0, r2
 8001396:	f000 808a 	beq.w	80014ae <HAL_GPIO_Init+0x1ce>
 800139a:	4a5b      	ldr	r2, [pc, #364]	; (8001508 <HAL_GPIO_Init+0x228>)
 800139c:	4290      	cmp	r0, r2
 800139e:	f000 808d 	beq.w	80014bc <HAL_GPIO_Init+0x1dc>
 80013a2:	4a5a      	ldr	r2, [pc, #360]	; (800150c <HAL_GPIO_Init+0x22c>)
 80013a4:	4290      	cmp	r0, r2
 80013a6:	f000 8090 	beq.w	80014ca <HAL_GPIO_Init+0x1ea>
 80013aa:	4a59      	ldr	r2, [pc, #356]	; (8001510 <HAL_GPIO_Init+0x230>)
 80013ac:	4290      	cmp	r0, r2
 80013ae:	f000 8093 	beq.w	80014d8 <HAL_GPIO_Init+0x1f8>
 80013b2:	4a58      	ldr	r2, [pc, #352]	; (8001514 <HAL_GPIO_Init+0x234>)
 80013b4:	4290      	cmp	r0, r2
 80013b6:	f000 8096 	beq.w	80014e6 <HAL_GPIO_Init+0x206>
 80013ba:	4a57      	ldr	r2, [pc, #348]	; (8001518 <HAL_GPIO_Init+0x238>)
 80013bc:	4290      	cmp	r0, r2
 80013be:	f000 8099 	beq.w	80014f4 <HAL_GPIO_Init+0x214>
 80013c2:	f8df e160 	ldr.w	lr, [pc, #352]	; 8001524 <HAL_GPIO_Init+0x244>
 80013c6:	4570      	cmp	r0, lr
 80013c8:	bf0c      	ite	eq
 80013ca:	f04f 0e07 	moveq.w	lr, #7
 80013ce:	f04f 0e08 	movne.w	lr, #8
 80013d2:	fa0e f707 	lsl.w	r7, lr, r7
 80013d6:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80013da:	f8c6 8008 	str.w	r8, [r6, #8]
        temp = EXTI->IMR;
 80013de:	f8dc 2000 	ldr.w	r2, [ip]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80013e2:	03e6      	lsls	r6, r4, #15
        temp &= ~((uint32_t)iocurrent);
 80013e4:	ea6f 070a 	mvn.w	r7, sl
 80013e8:	bf54      	ite	pl
 80013ea:	403a      	andpl	r2, r7
        {
          temp |= iocurrent;
 80013ec:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->IMR = temp;
 80013f0:	f8cc 2000 	str.w	r2, [ip]

        temp = EXTI->EMR;
 80013f4:	f8dc 6004 	ldr.w	r6, [ip, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80013f8:	03a2      	lsls	r2, r4, #14
        temp &= ~((uint32_t)iocurrent);
 80013fa:	bf54      	ite	pl
 80013fc:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 80013fe:	ea4a 0606 	orrmi.w	r6, sl, r6
        }
        EXTI->EMR = temp;
 8001402:	f8cc 6004 	str.w	r6, [ip, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001406:	f8dc 6008 	ldr.w	r6, [ip, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800140a:	02e2      	lsls	r2, r4, #11
        temp &= ~((uint32_t)iocurrent);
 800140c:	bf54      	ite	pl
 800140e:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 8001410:	ea4a 0606 	orrmi.w	r6, sl, r6
        }
        EXTI->RTSR = temp;
 8001414:	f8cc 6008 	str.w	r6, [ip, #8]

        temp = EXTI->FTSR;
 8001418:	f8dc 200c 	ldr.w	r2, [ip, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800141c:	02a4      	lsls	r4, r4, #10
  for(position = 0U; position < GPIO_NUMBER; position++)
 800141e:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8001422:	bf54      	ite	pl
 8001424:	403a      	andpl	r2, r7
        {
          temp |= iocurrent;
 8001426:	ea4a 0202 	orrmi.w	r2, sl, r2
  for(position = 0U; position < GPIO_NUMBER; position++)
 800142a:	2b10      	cmp	r3, #16
        }
        EXTI->FTSR = temp;
 800142c:	f8cc 200c 	str.w	r2, [ip, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001430:	f47f af64 	bne.w	80012fc <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001434:	b005      	add	sp, #20
 8001436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp = GPIOx->OSPEEDR; 
 800143a:	6887      	ldr	r7, [r0, #8]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800143c:	688a      	ldr	r2, [r1, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800143e:	f04f 0803 	mov.w	r8, #3
 8001442:	fa08 f806 	lsl.w	r8, r8, r6
 8001446:	ea27 0908 	bic.w	r9, r7, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800144a:	68cf      	ldr	r7, [r1, #12]
 800144c:	40b7      	lsls	r7, r6
 800144e:	ea47 0709 	orr.w	r7, r7, r9
        GPIOx->OSPEEDR = temp;
 8001452:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8001454:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8001458:	f3c4 1700 	ubfx	r7, r4, #4, #1
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800145c:	ea29 090a 	bic.w	r9, r9, sl
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8001460:	409f      	lsls	r7, r3
 8001462:	ea47 0709 	orr.w	r7, r7, r9
        GPIOx->OTYPER = temp;
 8001466:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8001468:	68c7      	ldr	r7, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800146a:	40b2      	lsls	r2, r6
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800146c:	ea27 0708 	bic.w	r7, r7, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001470:	4317      	orrs	r7, r2
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8001472:	f1be 0f02 	cmp.w	lr, #2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8001476:	ea6f 0208 	mvn.w	r2, r8
 800147a:	9201      	str	r2, [sp, #4]
      GPIOx->PUPDR = temp;
 800147c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800147e:	f47f af59 	bne.w	8001334 <HAL_GPIO_Init+0x54>
        temp = GPIOx->AFR[position >> 3U];
 8001482:	ea4f 08d3 	mov.w	r8, r3, lsr #3
 8001486:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800148a:	f003 0707 	and.w	r7, r3, #7
 800148e:	00ba      	lsls	r2, r7, #2
        temp = GPIOx->AFR[position >> 3U];
 8001490:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001494:	690f      	ldr	r7, [r1, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001496:	f04f 0e0f 	mov.w	lr, #15
 800149a:	fa0e fe02 	lsl.w	lr, lr, r2
 800149e:	ea29 0e0e 	bic.w	lr, r9, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80014a2:	4097      	lsls	r7, r2
 80014a4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80014a8:	f8c8 7020 	str.w	r7, [r8, #32]
 80014ac:	e742      	b.n	8001334 <HAL_GPIO_Init+0x54>
 80014ae:	f04f 0e01 	mov.w	lr, #1
 80014b2:	fa0e f707 	lsl.w	r7, lr, r7
 80014b6:	ea48 0807 	orr.w	r8, r8, r7
 80014ba:	e78e      	b.n	80013da <HAL_GPIO_Init+0xfa>
 80014bc:	f04f 0e02 	mov.w	lr, #2
 80014c0:	fa0e f707 	lsl.w	r7, lr, r7
 80014c4:	ea48 0807 	orr.w	r8, r8, r7
 80014c8:	e787      	b.n	80013da <HAL_GPIO_Init+0xfa>
 80014ca:	f04f 0e03 	mov.w	lr, #3
 80014ce:	fa0e f707 	lsl.w	r7, lr, r7
 80014d2:	ea48 0807 	orr.w	r8, r8, r7
 80014d6:	e780      	b.n	80013da <HAL_GPIO_Init+0xfa>
 80014d8:	f04f 0e04 	mov.w	lr, #4
 80014dc:	fa0e f707 	lsl.w	r7, lr, r7
 80014e0:	ea48 0807 	orr.w	r8, r8, r7
 80014e4:	e779      	b.n	80013da <HAL_GPIO_Init+0xfa>
 80014e6:	f04f 0e05 	mov.w	lr, #5
 80014ea:	fa0e f707 	lsl.w	r7, lr, r7
 80014ee:	ea48 0807 	orr.w	r8, r8, r7
 80014f2:	e772      	b.n	80013da <HAL_GPIO_Init+0xfa>
 80014f4:	f04f 0e06 	mov.w	lr, #6
 80014f8:	fa0e f707 	lsl.w	r7, lr, r7
 80014fc:	ea48 0807 	orr.w	r8, r8, r7
 8001500:	e76b      	b.n	80013da <HAL_GPIO_Init+0xfa>
 8001502:	bf00      	nop
 8001504:	40020000 	.word	0x40020000
 8001508:	40020800 	.word	0x40020800
 800150c:	40020c00 	.word	0x40020c00
 8001510:	40021000 	.word	0x40021000
 8001514:	40021400 	.word	0x40021400
 8001518:	40021800 	.word	0x40021800
 800151c:	40013c00 	.word	0x40013c00
 8001520:	40023800 	.word	0x40023800
 8001524:	40021c00 	.word	0x40021c00

08001528 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8001528:	b902      	cbnz	r2, 800152c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800152a:	0409      	lsls	r1, r1, #16
 800152c:	6181      	str	r1, [r0, #24]
  }
}
 800152e:	4770      	bx	lr

08001530 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8001530:	2800      	cmp	r0, #0
 8001532:	f000 819f 	beq.w	8001874 <HAL_RCC_OscConfig+0x344>
{
 8001536:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800153a:	6803      	ldr	r3, [r0, #0]
 800153c:	07dd      	lsls	r5, r3, #31
{
 800153e:	b082      	sub	sp, #8
 8001540:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001542:	d52f      	bpl.n	80015a4 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001544:	49ac      	ldr	r1, [pc, #688]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 8001546:	688a      	ldr	r2, [r1, #8]
 8001548:	f002 020c 	and.w	r2, r2, #12
 800154c:	2a04      	cmp	r2, #4
 800154e:	f000 80ec 	beq.w	800172a <HAL_RCC_OscConfig+0x1fa>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001552:	688a      	ldr	r2, [r1, #8]
 8001554:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8001558:	2a08      	cmp	r2, #8
 800155a:	f000 80e2 	beq.w	8001722 <HAL_RCC_OscConfig+0x1f2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800155e:	6863      	ldr	r3, [r4, #4]
 8001560:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001564:	f000 80eb 	beq.w	800173e <HAL_RCC_OscConfig+0x20e>
 8001568:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800156c:	f000 8172 	beq.w	8001854 <HAL_RCC_OscConfig+0x324>
 8001570:	4da1      	ldr	r5, [pc, #644]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 8001572:	682a      	ldr	r2, [r5, #0]
 8001574:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001578:	602a      	str	r2, [r5, #0]
 800157a:	682a      	ldr	r2, [r5, #0]
 800157c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001580:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001582:	2b00      	cmp	r3, #0
 8001584:	f040 80e0 	bne.w	8001748 <HAL_RCC_OscConfig+0x218>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001588:	f7ff fe3e 	bl	8001208 <HAL_GetTick>
 800158c:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800158e:	e005      	b.n	800159c <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001590:	f7ff fe3a 	bl	8001208 <HAL_GetTick>
 8001594:	1b80      	subs	r0, r0, r6
 8001596:	2864      	cmp	r0, #100	; 0x64
 8001598:	f200 8100 	bhi.w	800179c <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800159c:	682b      	ldr	r3, [r5, #0]
 800159e:	039b      	lsls	r3, r3, #14
 80015a0:	d4f6      	bmi.n	8001590 <HAL_RCC_OscConfig+0x60>
 80015a2:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80015a4:	079f      	lsls	r7, r3, #30
 80015a6:	d528      	bpl.n	80015fa <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80015a8:	4a93      	ldr	r2, [pc, #588]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 80015aa:	6891      	ldr	r1, [r2, #8]
 80015ac:	f011 0f0c 	tst.w	r1, #12
 80015b0:	f000 8090 	beq.w	80016d4 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80015b4:	6891      	ldr	r1, [r2, #8]
 80015b6:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80015ba:	2908      	cmp	r1, #8
 80015bc:	f000 8086 	beq.w	80016cc <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80015c0:	68e3      	ldr	r3, [r4, #12]
 80015c2:	2b00      	cmp	r3, #0
 80015c4:	f000 8106 	beq.w	80017d4 <HAL_RCC_OscConfig+0x2a4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80015c8:	4b8c      	ldr	r3, [pc, #560]	; (80017fc <HAL_RCC_OscConfig+0x2cc>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80015ca:	4e8b      	ldr	r6, [pc, #556]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
        __HAL_RCC_HSI_ENABLE();
 80015cc:	2201      	movs	r2, #1
 80015ce:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80015d0:	f7ff fe1a 	bl	8001208 <HAL_GetTick>
 80015d4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80015d6:	e005      	b.n	80015e4 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80015d8:	f7ff fe16 	bl	8001208 <HAL_GetTick>
 80015dc:	1b40      	subs	r0, r0, r5
 80015de:	2802      	cmp	r0, #2
 80015e0:	f200 80dc 	bhi.w	800179c <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80015e4:	6833      	ldr	r3, [r6, #0]
 80015e6:	0798      	lsls	r0, r3, #30
 80015e8:	d5f6      	bpl.n	80015d8 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80015ea:	6833      	ldr	r3, [r6, #0]
 80015ec:	6922      	ldr	r2, [r4, #16]
 80015ee:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80015f2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80015f6:	6033      	str	r3, [r6, #0]
 80015f8:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80015fa:	071a      	lsls	r2, r3, #28
 80015fc:	d452      	bmi.n	80016a4 <HAL_RCC_OscConfig+0x174>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80015fe:	0758      	lsls	r0, r3, #29
 8001600:	d52f      	bpl.n	8001662 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001602:	4a7d      	ldr	r2, [pc, #500]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 8001604:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001606:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800160a:	d07e      	beq.n	800170a <HAL_RCC_OscConfig+0x1da>
    FlagStatus       pwrclkchanged = RESET;
 800160c:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800160e:	4e7c      	ldr	r6, [pc, #496]	; (8001800 <HAL_RCC_OscConfig+0x2d0>)
 8001610:	6833      	ldr	r3, [r6, #0]
 8001612:	05d9      	lsls	r1, r3, #23
 8001614:	f140 80b2 	bpl.w	800177c <HAL_RCC_OscConfig+0x24c>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001618:	68a3      	ldr	r3, [r4, #8]
 800161a:	2b01      	cmp	r3, #1
 800161c:	f000 80c2 	beq.w	80017a4 <HAL_RCC_OscConfig+0x274>
 8001620:	2b05      	cmp	r3, #5
 8001622:	f000 8129 	beq.w	8001878 <HAL_RCC_OscConfig+0x348>
 8001626:	4e74      	ldr	r6, [pc, #464]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 8001628:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800162a:	f022 0201 	bic.w	r2, r2, #1
 800162e:	6732      	str	r2, [r6, #112]	; 0x70
 8001630:	6f32      	ldr	r2, [r6, #112]	; 0x70
 8001632:	f022 0204 	bic.w	r2, r2, #4
 8001636:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8001638:	2b00      	cmp	r3, #0
 800163a:	f040 80b8 	bne.w	80017ae <HAL_RCC_OscConfig+0x27e>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800163e:	f7ff fde3 	bl	8001208 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8001642:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8001646:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001648:	e005      	b.n	8001656 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800164a:	f7ff fddd 	bl	8001208 <HAL_GetTick>
 800164e:	1bc0      	subs	r0, r0, r7
 8001650:	4540      	cmp	r0, r8
 8001652:	f200 80a3 	bhi.w	800179c <HAL_RCC_OscConfig+0x26c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001656:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8001658:	0798      	lsls	r0, r3, #30
 800165a:	d4f6      	bmi.n	800164a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800165c:	2d00      	cmp	r5, #0
 800165e:	f040 8103 	bne.w	8001868 <HAL_RCC_OscConfig+0x338>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001662:	69a0      	ldr	r0, [r4, #24]
 8001664:	b1d0      	cbz	r0, 800169c <HAL_RCC_OscConfig+0x16c>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8001666:	4d64      	ldr	r5, [pc, #400]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 8001668:	68ab      	ldr	r3, [r5, #8]
 800166a:	f003 030c 	and.w	r3, r3, #12
 800166e:	2b08      	cmp	r3, #8
 8001670:	f000 80cc 	beq.w	800180c <HAL_RCC_OscConfig+0x2dc>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001674:	4b63      	ldr	r3, [pc, #396]	; (8001804 <HAL_RCC_OscConfig+0x2d4>)
 8001676:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001678:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800167a:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800167c:	f000 8106 	beq.w	800188c <HAL_RCC_OscConfig+0x35c>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001680:	f7ff fdc2 	bl	8001208 <HAL_GetTick>

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001684:	462c      	mov	r4, r5
        tickstart = HAL_GetTick();
 8001686:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001688:	e005      	b.n	8001696 <HAL_RCC_OscConfig+0x166>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800168a:	f7ff fdbd 	bl	8001208 <HAL_GetTick>
 800168e:	1b40      	subs	r0, r0, r5
 8001690:	2802      	cmp	r0, #2
 8001692:	f200 8083 	bhi.w	800179c <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001696:	6823      	ldr	r3, [r4, #0]
 8001698:	019b      	lsls	r3, r3, #6
 800169a:	d4f6      	bmi.n	800168a <HAL_RCC_OscConfig+0x15a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800169c:	2000      	movs	r0, #0
}
 800169e:	b002      	add	sp, #8
 80016a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80016a4:	6963      	ldr	r3, [r4, #20]
 80016a6:	b303      	cbz	r3, 80016ea <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 80016a8:	4b57      	ldr	r3, [pc, #348]	; (8001808 <HAL_RCC_OscConfig+0x2d8>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80016aa:	4e53      	ldr	r6, [pc, #332]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
      __HAL_RCC_LSI_ENABLE();
 80016ac:	2201      	movs	r2, #1
 80016ae:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80016b0:	f7ff fdaa 	bl	8001208 <HAL_GetTick>
 80016b4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80016b6:	e004      	b.n	80016c2 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80016b8:	f7ff fda6 	bl	8001208 <HAL_GetTick>
 80016bc:	1b40      	subs	r0, r0, r5
 80016be:	2802      	cmp	r0, #2
 80016c0:	d86c      	bhi.n	800179c <HAL_RCC_OscConfig+0x26c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80016c2:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80016c4:	079b      	lsls	r3, r3, #30
 80016c6:	d5f7      	bpl.n	80016b8 <HAL_RCC_OscConfig+0x188>
 80016c8:	6823      	ldr	r3, [r4, #0]
 80016ca:	e798      	b.n	80015fe <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80016cc:	6852      	ldr	r2, [r2, #4]
 80016ce:	0256      	lsls	r6, r2, #9
 80016d0:	f53f af76 	bmi.w	80015c0 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80016d4:	4a48      	ldr	r2, [pc, #288]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 80016d6:	6812      	ldr	r2, [r2, #0]
 80016d8:	0795      	lsls	r5, r2, #30
 80016da:	d543      	bpl.n	8001764 <HAL_RCC_OscConfig+0x234>
 80016dc:	68e2      	ldr	r2, [r4, #12]
 80016de:	2a01      	cmp	r2, #1
 80016e0:	d040      	beq.n	8001764 <HAL_RCC_OscConfig+0x234>
        return HAL_ERROR;
 80016e2:	2001      	movs	r0, #1
}
 80016e4:	b002      	add	sp, #8
 80016e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 80016ea:	4a47      	ldr	r2, [pc, #284]	; (8001808 <HAL_RCC_OscConfig+0x2d8>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80016ec:	4e42      	ldr	r6, [pc, #264]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
      __HAL_RCC_LSI_DISABLE();
 80016ee:	6013      	str	r3, [r2, #0]
      tickstart = HAL_GetTick();
 80016f0:	f7ff fd8a 	bl	8001208 <HAL_GetTick>
 80016f4:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80016f6:	e004      	b.n	8001702 <HAL_RCC_OscConfig+0x1d2>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80016f8:	f7ff fd86 	bl	8001208 <HAL_GetTick>
 80016fc:	1b40      	subs	r0, r0, r5
 80016fe:	2802      	cmp	r0, #2
 8001700:	d84c      	bhi.n	800179c <HAL_RCC_OscConfig+0x26c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001702:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8001704:	079f      	lsls	r7, r3, #30
 8001706:	d4f7      	bmi.n	80016f8 <HAL_RCC_OscConfig+0x1c8>
 8001708:	e7de      	b.n	80016c8 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800170a:	9301      	str	r3, [sp, #4]
 800170c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800170e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001712:	6413      	str	r3, [r2, #64]	; 0x40
 8001714:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001716:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800171a:	9301      	str	r3, [sp, #4]
 800171c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800171e:	2501      	movs	r5, #1
 8001720:	e775      	b.n	800160e <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8001722:	684a      	ldr	r2, [r1, #4]
 8001724:	0250      	lsls	r0, r2, #9
 8001726:	f57f af1a 	bpl.w	800155e <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800172a:	4a33      	ldr	r2, [pc, #204]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 800172c:	6812      	ldr	r2, [r2, #0]
 800172e:	0391      	lsls	r1, r2, #14
 8001730:	f57f af38 	bpl.w	80015a4 <HAL_RCC_OscConfig+0x74>
 8001734:	6862      	ldr	r2, [r4, #4]
 8001736:	2a00      	cmp	r2, #0
 8001738:	f47f af34 	bne.w	80015a4 <HAL_RCC_OscConfig+0x74>
 800173c:	e7d1      	b.n	80016e2 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800173e:	4a2e      	ldr	r2, [pc, #184]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 8001740:	6813      	ldr	r3, [r2, #0]
 8001742:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001746:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 8001748:	f7ff fd5e 	bl	8001208 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800174c:	4e2a      	ldr	r6, [pc, #168]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
        tickstart = HAL_GetTick();
 800174e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001750:	e004      	b.n	800175c <HAL_RCC_OscConfig+0x22c>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8001752:	f7ff fd59 	bl	8001208 <HAL_GetTick>
 8001756:	1b40      	subs	r0, r0, r5
 8001758:	2864      	cmp	r0, #100	; 0x64
 800175a:	d81f      	bhi.n	800179c <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800175c:	6833      	ldr	r3, [r6, #0]
 800175e:	039a      	lsls	r2, r3, #14
 8001760:	d5f7      	bpl.n	8001752 <HAL_RCC_OscConfig+0x222>
 8001762:	e71e      	b.n	80015a2 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001764:	4924      	ldr	r1, [pc, #144]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 8001766:	6920      	ldr	r0, [r4, #16]
 8001768:	680a      	ldr	r2, [r1, #0]
 800176a:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800176e:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8001772:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001774:	071a      	lsls	r2, r3, #28
 8001776:	f57f af42 	bpl.w	80015fe <HAL_RCC_OscConfig+0xce>
 800177a:	e793      	b.n	80016a4 <HAL_RCC_OscConfig+0x174>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800177c:	6833      	ldr	r3, [r6, #0]
 800177e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001782:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 8001784:	f7ff fd40 	bl	8001208 <HAL_GetTick>
 8001788:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800178a:	6833      	ldr	r3, [r6, #0]
 800178c:	05da      	lsls	r2, r3, #23
 800178e:	f53f af43 	bmi.w	8001618 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001792:	f7ff fd39 	bl	8001208 <HAL_GetTick>
 8001796:	1bc0      	subs	r0, r0, r7
 8001798:	2802      	cmp	r0, #2
 800179a:	d9f6      	bls.n	800178a <HAL_RCC_OscConfig+0x25a>
            return HAL_TIMEOUT;
 800179c:	2003      	movs	r0, #3
}
 800179e:	b002      	add	sp, #8
 80017a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80017a4:	4a14      	ldr	r2, [pc, #80]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
 80017a6:	6f13      	ldr	r3, [r2, #112]	; 0x70
 80017a8:	f043 0301 	orr.w	r3, r3, #1
 80017ac:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 80017ae:	f7ff fd2b 	bl	8001208 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80017b2:	4f11      	ldr	r7, [pc, #68]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
      tickstart = HAL_GetTick();
 80017b4:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80017b6:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80017ba:	e004      	b.n	80017c6 <HAL_RCC_OscConfig+0x296>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80017bc:	f7ff fd24 	bl	8001208 <HAL_GetTick>
 80017c0:	1b80      	subs	r0, r0, r6
 80017c2:	4540      	cmp	r0, r8
 80017c4:	d8ea      	bhi.n	800179c <HAL_RCC_OscConfig+0x26c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80017c6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80017c8:	079b      	lsls	r3, r3, #30
 80017ca:	d5f7      	bpl.n	80017bc <HAL_RCC_OscConfig+0x28c>
    if(pwrclkchanged == SET)
 80017cc:	2d00      	cmp	r5, #0
 80017ce:	f43f af48 	beq.w	8001662 <HAL_RCC_OscConfig+0x132>
 80017d2:	e049      	b.n	8001868 <HAL_RCC_OscConfig+0x338>
        __HAL_RCC_HSI_DISABLE();
 80017d4:	4a09      	ldr	r2, [pc, #36]	; (80017fc <HAL_RCC_OscConfig+0x2cc>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80017d6:	4e08      	ldr	r6, [pc, #32]	; (80017f8 <HAL_RCC_OscConfig+0x2c8>)
        __HAL_RCC_HSI_DISABLE();
 80017d8:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 80017da:	f7ff fd15 	bl	8001208 <HAL_GetTick>
 80017de:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80017e0:	e004      	b.n	80017ec <HAL_RCC_OscConfig+0x2bc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80017e2:	f7ff fd11 	bl	8001208 <HAL_GetTick>
 80017e6:	1b40      	subs	r0, r0, r5
 80017e8:	2802      	cmp	r0, #2
 80017ea:	d8d7      	bhi.n	800179c <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80017ec:	6833      	ldr	r3, [r6, #0]
 80017ee:	0799      	lsls	r1, r3, #30
 80017f0:	d4f7      	bmi.n	80017e2 <HAL_RCC_OscConfig+0x2b2>
 80017f2:	6823      	ldr	r3, [r4, #0]
 80017f4:	e701      	b.n	80015fa <HAL_RCC_OscConfig+0xca>
 80017f6:	bf00      	nop
 80017f8:	40023800 	.word	0x40023800
 80017fc:	42470000 	.word	0x42470000
 8001800:	40007000 	.word	0x40007000
 8001804:	42470060 	.word	0x42470060
 8001808:	42470e80 	.word	0x42470e80
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800180c:	2801      	cmp	r0, #1
 800180e:	f43f af46 	beq.w	800169e <HAL_RCC_OscConfig+0x16e>
        pll_config = RCC->PLLCFGR;
 8001812:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001814:	69e2      	ldr	r2, [r4, #28]
 8001816:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 800181a:	4291      	cmp	r1, r2
 800181c:	f47f af61 	bne.w	80016e2 <HAL_RCC_OscConfig+0x1b2>
 8001820:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001822:	f003 013f 	and.w	r1, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001826:	4291      	cmp	r1, r2
 8001828:	f47f af5b 	bne.w	80016e2 <HAL_RCC_OscConfig+0x1b2>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800182c:	6a61      	ldr	r1, [r4, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800182e:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8001832:	401a      	ands	r2, r3
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8001834:	428a      	cmp	r2, r1
 8001836:	f47f af54 	bne.w	80016e2 <HAL_RCC_OscConfig+0x1b2>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800183a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800183c:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8001840:	4291      	cmp	r1, r2
 8001842:	f47f af4e 	bne.w	80016e2 <HAL_RCC_OscConfig+0x1b2>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8001846:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8001848:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
        return HAL_ERROR;
 800184c:	1a18      	subs	r0, r3, r0
 800184e:	bf18      	it	ne
 8001850:	2001      	movne	r0, #1
 8001852:	e724      	b.n	800169e <HAL_RCC_OscConfig+0x16e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001854:	4b24      	ldr	r3, [pc, #144]	; (80018e8 <HAL_RCC_OscConfig+0x3b8>)
 8001856:	681a      	ldr	r2, [r3, #0]
 8001858:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800185c:	601a      	str	r2, [r3, #0]
 800185e:	681a      	ldr	r2, [r3, #0]
 8001860:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001864:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8001866:	e76f      	b.n	8001748 <HAL_RCC_OscConfig+0x218>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001868:	4a1f      	ldr	r2, [pc, #124]	; (80018e8 <HAL_RCC_OscConfig+0x3b8>)
 800186a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800186c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001870:	6413      	str	r3, [r2, #64]	; 0x40
 8001872:	e6f6      	b.n	8001662 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 8001874:	2001      	movs	r0, #1
}
 8001876:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001878:	4b1b      	ldr	r3, [pc, #108]	; (80018e8 <HAL_RCC_OscConfig+0x3b8>)
 800187a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800187c:	f042 0204 	orr.w	r2, r2, #4
 8001880:	671a      	str	r2, [r3, #112]	; 0x70
 8001882:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8001884:	f042 0201 	orr.w	r2, r2, #1
 8001888:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800188a:	e790      	b.n	80017ae <HAL_RCC_OscConfig+0x27e>
        tickstart = HAL_GetTick();
 800188c:	f7ff fcbc 	bl	8001208 <HAL_GetTick>
 8001890:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8001892:	e005      	b.n	80018a0 <HAL_RCC_OscConfig+0x370>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8001894:	f7ff fcb8 	bl	8001208 <HAL_GetTick>
 8001898:	1b80      	subs	r0, r0, r6
 800189a:	2802      	cmp	r0, #2
 800189c:	f63f af7e 	bhi.w	800179c <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80018a0:	682b      	ldr	r3, [r5, #0]
 80018a2:	0199      	lsls	r1, r3, #6
 80018a4:	d4f6      	bmi.n	8001894 <HAL_RCC_OscConfig+0x364>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80018a6:	e9d4 3607 	ldrd	r3, r6, [r4, #28]
 80018aa:	e9d4 0209 	ldrd	r0, r2, [r4, #36]	; 0x24
 80018ae:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80018b0:	4333      	orrs	r3, r6
 80018b2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80018b6:	0852      	lsrs	r2, r2, #1
 80018b8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 80018bc:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 80018be:	490b      	ldr	r1, [pc, #44]	; (80018ec <HAL_RCC_OscConfig+0x3bc>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80018c0:	4e09      	ldr	r6, [pc, #36]	; (80018e8 <HAL_RCC_OscConfig+0x3b8>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80018c2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 80018c6:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80018c8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80018ca:	600a      	str	r2, [r1, #0]
        tickstart = HAL_GetTick();
 80018cc:	f7ff fc9c 	bl	8001208 <HAL_GetTick>
 80018d0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80018d2:	e005      	b.n	80018e0 <HAL_RCC_OscConfig+0x3b0>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80018d4:	f7ff fc98 	bl	8001208 <HAL_GetTick>
 80018d8:	1b00      	subs	r0, r0, r4
 80018da:	2802      	cmp	r0, #2
 80018dc:	f63f af5e 	bhi.w	800179c <HAL_RCC_OscConfig+0x26c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80018e0:	6833      	ldr	r3, [r6, #0]
 80018e2:	019a      	lsls	r2, r3, #6
 80018e4:	d5f6      	bpl.n	80018d4 <HAL_RCC_OscConfig+0x3a4>
 80018e6:	e6d9      	b.n	800169c <HAL_RCC_OscConfig+0x16c>
 80018e8:	40023800 	.word	0x40023800
 80018ec:	42470060 	.word	0x42470060

080018f0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80018f0:	4917      	ldr	r1, [pc, #92]	; (8001950 <HAL_RCC_GetSysClockFreq+0x60>)
{
 80018f2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80018f4:	688b      	ldr	r3, [r1, #8]
 80018f6:	f003 030c 	and.w	r3, r3, #12
 80018fa:	2b04      	cmp	r3, #4
 80018fc:	d01b      	beq.n	8001936 <HAL_RCC_GetSysClockFreq+0x46>
 80018fe:	2b08      	cmp	r3, #8
 8001900:	d117      	bne.n	8001932 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001902:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8001904:	684b      	ldr	r3, [r1, #4]
 8001906:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800190a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800190e:	d114      	bne.n	800193a <HAL_RCC_GetSysClockFreq+0x4a>
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8001910:	6849      	ldr	r1, [r1, #4]
 8001912:	4810      	ldr	r0, [pc, #64]	; (8001954 <HAL_RCC_GetSysClockFreq+0x64>)
 8001914:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8001918:	fba1 0100 	umull	r0, r1, r1, r0
 800191c:	f7ff f944 	bl	8000ba8 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8001920:	4b0b      	ldr	r3, [pc, #44]	; (8001950 <HAL_RCC_GetSysClockFreq+0x60>)
 8001922:	685b      	ldr	r3, [r3, #4]
 8001924:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8001928:	3301      	adds	r3, #1
 800192a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800192c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8001930:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 8001932:	4808      	ldr	r0, [pc, #32]	; (8001954 <HAL_RCC_GetSysClockFreq+0x64>)
}
 8001934:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8001936:	4808      	ldr	r0, [pc, #32]	; (8001958 <HAL_RCC_GetSysClockFreq+0x68>)
}
 8001938:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800193a:	684b      	ldr	r3, [r1, #4]
 800193c:	4806      	ldr	r0, [pc, #24]	; (8001958 <HAL_RCC_GetSysClockFreq+0x68>)
 800193e:	f3c3 1388 	ubfx	r3, r3, #6, #9
 8001942:	fba3 0100 	umull	r0, r1, r3, r0
 8001946:	2300      	movs	r3, #0
 8001948:	f7ff f92e 	bl	8000ba8 <__aeabi_uldivmod>
 800194c:	e7e8      	b.n	8001920 <HAL_RCC_GetSysClockFreq+0x30>
 800194e:	bf00      	nop
 8001950:	40023800 	.word	0x40023800
 8001954:	00f42400 	.word	0x00f42400
 8001958:	017d7840 	.word	0x017d7840

0800195c <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800195c:	2800      	cmp	r0, #0
 800195e:	f000 8087 	beq.w	8001a70 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8001962:	4a48      	ldr	r2, [pc, #288]	; (8001a84 <HAL_RCC_ClockConfig+0x128>)
 8001964:	6813      	ldr	r3, [r2, #0]
 8001966:	f003 030f 	and.w	r3, r3, #15
 800196a:	428b      	cmp	r3, r1
{
 800196c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001970:	460d      	mov	r5, r1
 8001972:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8001974:	d209      	bcs.n	800198a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001976:	b2cb      	uxtb	r3, r1
 8001978:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800197a:	6813      	ldr	r3, [r2, #0]
 800197c:	f003 030f 	and.w	r3, r3, #15
 8001980:	428b      	cmp	r3, r1
 8001982:	d002      	beq.n	800198a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 8001984:	2001      	movs	r0, #1
}
 8001986:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800198a:	6823      	ldr	r3, [r4, #0]
 800198c:	0798      	lsls	r0, r3, #30
 800198e:	d514      	bpl.n	80019ba <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001990:	0759      	lsls	r1, r3, #29
 8001992:	d504      	bpl.n	800199e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001994:	493c      	ldr	r1, [pc, #240]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 8001996:	688a      	ldr	r2, [r1, #8]
 8001998:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800199c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800199e:	071a      	lsls	r2, r3, #28
 80019a0:	d504      	bpl.n	80019ac <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80019a2:	4939      	ldr	r1, [pc, #228]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 80019a4:	688a      	ldr	r2, [r1, #8]
 80019a6:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 80019aa:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80019ac:	4936      	ldr	r1, [pc, #216]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 80019ae:	68a0      	ldr	r0, [r4, #8]
 80019b0:	688a      	ldr	r2, [r1, #8]
 80019b2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80019b6:	4302      	orrs	r2, r0
 80019b8:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80019ba:	07df      	lsls	r7, r3, #31
 80019bc:	d521      	bpl.n	8001a02 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80019be:	6862      	ldr	r2, [r4, #4]
 80019c0:	2a01      	cmp	r2, #1
 80019c2:	d057      	beq.n	8001a74 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80019c4:	1e93      	subs	r3, r2, #2
 80019c6:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80019c8:	4b2f      	ldr	r3, [pc, #188]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 80019ca:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80019cc:	d94d      	bls.n	8001a6a <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80019ce:	0799      	lsls	r1, r3, #30
 80019d0:	d5d8      	bpl.n	8001984 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80019d2:	4e2d      	ldr	r6, [pc, #180]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 80019d4:	68b3      	ldr	r3, [r6, #8]
 80019d6:	f023 0303 	bic.w	r3, r3, #3
 80019da:	4313      	orrs	r3, r2
 80019dc:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80019de:	f7ff fc13 	bl	8001208 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80019e2:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80019e6:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80019e8:	e004      	b.n	80019f4 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80019ea:	f7ff fc0d 	bl	8001208 <HAL_GetTick>
 80019ee:	1bc0      	subs	r0, r0, r7
 80019f0:	4540      	cmp	r0, r8
 80019f2:	d844      	bhi.n	8001a7e <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80019f4:	68b3      	ldr	r3, [r6, #8]
 80019f6:	6862      	ldr	r2, [r4, #4]
 80019f8:	f003 030c 	and.w	r3, r3, #12
 80019fc:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001a00:	d1f3      	bne.n	80019ea <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8001a02:	4a20      	ldr	r2, [pc, #128]	; (8001a84 <HAL_RCC_ClockConfig+0x128>)
 8001a04:	6813      	ldr	r3, [r2, #0]
 8001a06:	f003 030f 	and.w	r3, r3, #15
 8001a0a:	42ab      	cmp	r3, r5
 8001a0c:	d906      	bls.n	8001a1c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001a0e:	b2eb      	uxtb	r3, r5
 8001a10:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001a12:	6813      	ldr	r3, [r2, #0]
 8001a14:	f003 030f 	and.w	r3, r3, #15
 8001a18:	42ab      	cmp	r3, r5
 8001a1a:	d1b3      	bne.n	8001984 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001a1c:	6823      	ldr	r3, [r4, #0]
 8001a1e:	075a      	lsls	r2, r3, #29
 8001a20:	d506      	bpl.n	8001a30 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001a22:	4919      	ldr	r1, [pc, #100]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 8001a24:	68e0      	ldr	r0, [r4, #12]
 8001a26:	688a      	ldr	r2, [r1, #8]
 8001a28:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 8001a2c:	4302      	orrs	r2, r0
 8001a2e:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001a30:	071b      	lsls	r3, r3, #28
 8001a32:	d507      	bpl.n	8001a44 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8001a34:	4a14      	ldr	r2, [pc, #80]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 8001a36:	6921      	ldr	r1, [r4, #16]
 8001a38:	6893      	ldr	r3, [r2, #8]
 8001a3a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8001a3e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8001a42:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8001a44:	f7ff ff54 	bl	80018f0 <HAL_RCC_GetSysClockFreq>
 8001a48:	4a0f      	ldr	r2, [pc, #60]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 8001a4a:	4c10      	ldr	r4, [pc, #64]	; (8001a8c <HAL_RCC_ClockConfig+0x130>)
 8001a4c:	6892      	ldr	r2, [r2, #8]
 8001a4e:	4910      	ldr	r1, [pc, #64]	; (8001a90 <HAL_RCC_ClockConfig+0x134>)
 8001a50:	f3c2 1203 	ubfx	r2, r2, #4, #4
 8001a54:	4603      	mov	r3, r0
 8001a56:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 8001a58:	480e      	ldr	r0, [pc, #56]	; (8001a94 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8001a5a:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 8001a5c:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8001a5e:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 8001a60:	f7ff fb88 	bl	8001174 <HAL_InitTick>
  return HAL_OK;
 8001a64:	2000      	movs	r0, #0
}
 8001a66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001a6a:	0198      	lsls	r0, r3, #6
 8001a6c:	d4b1      	bmi.n	80019d2 <HAL_RCC_ClockConfig+0x76>
 8001a6e:	e789      	b.n	8001984 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 8001a70:	2001      	movs	r0, #1
}
 8001a72:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001a74:	4b04      	ldr	r3, [pc, #16]	; (8001a88 <HAL_RCC_ClockConfig+0x12c>)
 8001a76:	681b      	ldr	r3, [r3, #0]
 8001a78:	039e      	lsls	r6, r3, #14
 8001a7a:	d4aa      	bmi.n	80019d2 <HAL_RCC_ClockConfig+0x76>
 8001a7c:	e782      	b.n	8001984 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 8001a7e:	2003      	movs	r0, #3
 8001a80:	e781      	b.n	8001986 <HAL_RCC_ClockConfig+0x2a>
 8001a82:	bf00      	nop
 8001a84:	40023c00 	.word	0x40023c00
 8001a88:	40023800 	.word	0x40023800
 8001a8c:	080044b8 	.word	0x080044b8
 8001a90:	20000000 	.word	0x20000000
 8001a94:	20000008 	.word	0x20000008

08001a98 <__errno>:
 8001a98:	4b01      	ldr	r3, [pc, #4]	; (8001aa0 <__errno+0x8>)
 8001a9a:	6818      	ldr	r0, [r3, #0]
 8001a9c:	4770      	bx	lr
 8001a9e:	bf00      	nop
 8001aa0:	2000000c 	.word	0x2000000c

08001aa4 <__libc_init_array>:
 8001aa4:	b570      	push	{r4, r5, r6, lr}
 8001aa6:	4d0d      	ldr	r5, [pc, #52]	; (8001adc <__libc_init_array+0x38>)
 8001aa8:	4c0d      	ldr	r4, [pc, #52]	; (8001ae0 <__libc_init_array+0x3c>)
 8001aaa:	1b64      	subs	r4, r4, r5
 8001aac:	10a4      	asrs	r4, r4, #2
 8001aae:	2600      	movs	r6, #0
 8001ab0:	42a6      	cmp	r6, r4
 8001ab2:	d109      	bne.n	8001ac8 <__libc_init_array+0x24>
 8001ab4:	4d0b      	ldr	r5, [pc, #44]	; (8001ae4 <__libc_init_array+0x40>)
 8001ab6:	4c0c      	ldr	r4, [pc, #48]	; (8001ae8 <__libc_init_array+0x44>)
 8001ab8:	f002 fcf0 	bl	800449c <_init>
 8001abc:	1b64      	subs	r4, r4, r5
 8001abe:	10a4      	asrs	r4, r4, #2
 8001ac0:	2600      	movs	r6, #0
 8001ac2:	42a6      	cmp	r6, r4
 8001ac4:	d105      	bne.n	8001ad2 <__libc_init_array+0x2e>
 8001ac6:	bd70      	pop	{r4, r5, r6, pc}
 8001ac8:	f855 3b04 	ldr.w	r3, [r5], #4
 8001acc:	4798      	blx	r3
 8001ace:	3601      	adds	r6, #1
 8001ad0:	e7ee      	b.n	8001ab0 <__libc_init_array+0xc>
 8001ad2:	f855 3b04 	ldr.w	r3, [r5], #4
 8001ad6:	4798      	blx	r3
 8001ad8:	3601      	adds	r6, #1
 8001ada:	e7f2      	b.n	8001ac2 <__libc_init_array+0x1e>
 8001adc:	080048b4 	.word	0x080048b4
 8001ae0:	080048b4 	.word	0x080048b4
 8001ae4:	080048b4 	.word	0x080048b4
 8001ae8:	080048b8 	.word	0x080048b8

08001aec <memset>:
 8001aec:	4402      	add	r2, r0
 8001aee:	4603      	mov	r3, r0
 8001af0:	4293      	cmp	r3, r2
 8001af2:	d100      	bne.n	8001af6 <memset+0xa>
 8001af4:	4770      	bx	lr
 8001af6:	f803 1b01 	strb.w	r1, [r3], #1
 8001afa:	e7f9      	b.n	8001af0 <memset+0x4>

08001afc <__cvt>:
 8001afc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b00:	ec55 4b10 	vmov	r4, r5, d0
 8001b04:	2d00      	cmp	r5, #0
 8001b06:	460e      	mov	r6, r1
 8001b08:	4619      	mov	r1, r3
 8001b0a:	462b      	mov	r3, r5
 8001b0c:	bfbb      	ittet	lt
 8001b0e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001b12:	461d      	movlt	r5, r3
 8001b14:	2300      	movge	r3, #0
 8001b16:	232d      	movlt	r3, #45	; 0x2d
 8001b18:	700b      	strb	r3, [r1, #0]
 8001b1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001b1c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001b20:	4691      	mov	r9, r2
 8001b22:	f023 0820 	bic.w	r8, r3, #32
 8001b26:	bfbc      	itt	lt
 8001b28:	4622      	movlt	r2, r4
 8001b2a:	4614      	movlt	r4, r2
 8001b2c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001b30:	d005      	beq.n	8001b3e <__cvt+0x42>
 8001b32:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001b36:	d100      	bne.n	8001b3a <__cvt+0x3e>
 8001b38:	3601      	adds	r6, #1
 8001b3a:	2102      	movs	r1, #2
 8001b3c:	e000      	b.n	8001b40 <__cvt+0x44>
 8001b3e:	2103      	movs	r1, #3
 8001b40:	ab03      	add	r3, sp, #12
 8001b42:	9301      	str	r3, [sp, #4]
 8001b44:	ab02      	add	r3, sp, #8
 8001b46:	9300      	str	r3, [sp, #0]
 8001b48:	ec45 4b10 	vmov	d0, r4, r5
 8001b4c:	4653      	mov	r3, sl
 8001b4e:	4632      	mov	r2, r6
 8001b50:	f000 fcca 	bl	80024e8 <_dtoa_r>
 8001b54:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001b58:	4607      	mov	r7, r0
 8001b5a:	d102      	bne.n	8001b62 <__cvt+0x66>
 8001b5c:	f019 0f01 	tst.w	r9, #1
 8001b60:	d022      	beq.n	8001ba8 <__cvt+0xac>
 8001b62:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001b66:	eb07 0906 	add.w	r9, r7, r6
 8001b6a:	d110      	bne.n	8001b8e <__cvt+0x92>
 8001b6c:	783b      	ldrb	r3, [r7, #0]
 8001b6e:	2b30      	cmp	r3, #48	; 0x30
 8001b70:	d10a      	bne.n	8001b88 <__cvt+0x8c>
 8001b72:	2200      	movs	r2, #0
 8001b74:	2300      	movs	r3, #0
 8001b76:	4620      	mov	r0, r4
 8001b78:	4629      	mov	r1, r5
 8001b7a:	f7fe ffa5 	bl	8000ac8 <__aeabi_dcmpeq>
 8001b7e:	b918      	cbnz	r0, 8001b88 <__cvt+0x8c>
 8001b80:	f1c6 0601 	rsb	r6, r6, #1
 8001b84:	f8ca 6000 	str.w	r6, [sl]
 8001b88:	f8da 3000 	ldr.w	r3, [sl]
 8001b8c:	4499      	add	r9, r3
 8001b8e:	2200      	movs	r2, #0
 8001b90:	2300      	movs	r3, #0
 8001b92:	4620      	mov	r0, r4
 8001b94:	4629      	mov	r1, r5
 8001b96:	f7fe ff97 	bl	8000ac8 <__aeabi_dcmpeq>
 8001b9a:	b108      	cbz	r0, 8001ba0 <__cvt+0xa4>
 8001b9c:	f8cd 900c 	str.w	r9, [sp, #12]
 8001ba0:	2230      	movs	r2, #48	; 0x30
 8001ba2:	9b03      	ldr	r3, [sp, #12]
 8001ba4:	454b      	cmp	r3, r9
 8001ba6:	d307      	bcc.n	8001bb8 <__cvt+0xbc>
 8001ba8:	9b03      	ldr	r3, [sp, #12]
 8001baa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001bac:	1bdb      	subs	r3, r3, r7
 8001bae:	4638      	mov	r0, r7
 8001bb0:	6013      	str	r3, [r2, #0]
 8001bb2:	b004      	add	sp, #16
 8001bb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001bb8:	1c59      	adds	r1, r3, #1
 8001bba:	9103      	str	r1, [sp, #12]
 8001bbc:	701a      	strb	r2, [r3, #0]
 8001bbe:	e7f0      	b.n	8001ba2 <__cvt+0xa6>

08001bc0 <__exponent>:
 8001bc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001bc2:	4603      	mov	r3, r0
 8001bc4:	2900      	cmp	r1, #0
 8001bc6:	bfb8      	it	lt
 8001bc8:	4249      	neglt	r1, r1
 8001bca:	f803 2b02 	strb.w	r2, [r3], #2
 8001bce:	bfb4      	ite	lt
 8001bd0:	222d      	movlt	r2, #45	; 0x2d
 8001bd2:	222b      	movge	r2, #43	; 0x2b
 8001bd4:	2909      	cmp	r1, #9
 8001bd6:	7042      	strb	r2, [r0, #1]
 8001bd8:	dd2a      	ble.n	8001c30 <__exponent+0x70>
 8001bda:	f10d 0407 	add.w	r4, sp, #7
 8001bde:	46a4      	mov	ip, r4
 8001be0:	270a      	movs	r7, #10
 8001be2:	46a6      	mov	lr, r4
 8001be4:	460a      	mov	r2, r1
 8001be6:	fb91 f6f7 	sdiv	r6, r1, r7
 8001bea:	fb07 1516 	mls	r5, r7, r6, r1
 8001bee:	3530      	adds	r5, #48	; 0x30
 8001bf0:	2a63      	cmp	r2, #99	; 0x63
 8001bf2:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
 8001bf6:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8001bfa:	4631      	mov	r1, r6
 8001bfc:	dcf1      	bgt.n	8001be2 <__exponent+0x22>
 8001bfe:	3130      	adds	r1, #48	; 0x30
 8001c00:	f1ae 0502 	sub.w	r5, lr, #2
 8001c04:	f804 1c01 	strb.w	r1, [r4, #-1]
 8001c08:	1c44      	adds	r4, r0, #1
 8001c0a:	4629      	mov	r1, r5
 8001c0c:	4561      	cmp	r1, ip
 8001c0e:	d30a      	bcc.n	8001c26 <__exponent+0x66>
 8001c10:	f10d 0209 	add.w	r2, sp, #9
 8001c14:	eba2 020e 	sub.w	r2, r2, lr
 8001c18:	4565      	cmp	r5, ip
 8001c1a:	bf88      	it	hi
 8001c1c:	2200      	movhi	r2, #0
 8001c1e:	4413      	add	r3, r2
 8001c20:	1a18      	subs	r0, r3, r0
 8001c22:	b003      	add	sp, #12
 8001c24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c26:	f811 2b01 	ldrb.w	r2, [r1], #1
 8001c2a:	f804 2f01 	strb.w	r2, [r4, #1]!
 8001c2e:	e7ed      	b.n	8001c0c <__exponent+0x4c>
 8001c30:	2330      	movs	r3, #48	; 0x30
 8001c32:	3130      	adds	r1, #48	; 0x30
 8001c34:	7083      	strb	r3, [r0, #2]
 8001c36:	70c1      	strb	r1, [r0, #3]
 8001c38:	1d03      	adds	r3, r0, #4
 8001c3a:	e7f1      	b.n	8001c20 <__exponent+0x60>

08001c3c <_printf_float>:
 8001c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c40:	ed2d 8b02 	vpush	{d8}
 8001c44:	b08d      	sub	sp, #52	; 0x34
 8001c46:	460c      	mov	r4, r1
 8001c48:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001c4c:	4616      	mov	r6, r2
 8001c4e:	461f      	mov	r7, r3
 8001c50:	4605      	mov	r5, r0
 8001c52:	f001 fa35 	bl	80030c0 <_localeconv_r>
 8001c56:	f8d0 a000 	ldr.w	sl, [r0]
 8001c5a:	4650      	mov	r0, sl
 8001c5c:	f7fe fab8 	bl	80001d0 <strlen>
 8001c60:	2300      	movs	r3, #0
 8001c62:	930a      	str	r3, [sp, #40]	; 0x28
 8001c64:	6823      	ldr	r3, [r4, #0]
 8001c66:	9305      	str	r3, [sp, #20]
 8001c68:	f8d8 3000 	ldr.w	r3, [r8]
 8001c6c:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001c70:	3307      	adds	r3, #7
 8001c72:	f023 0307 	bic.w	r3, r3, #7
 8001c76:	f103 0208 	add.w	r2, r3, #8
 8001c7a:	f8c8 2000 	str.w	r2, [r8]
 8001c7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c82:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001c86:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8001c8a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001c8e:	9307      	str	r3, [sp, #28]
 8001c90:	f8cd 8018 	str.w	r8, [sp, #24]
 8001c94:	ee08 0a10 	vmov	s16, r0
 8001c98:	4b9f      	ldr	r3, [pc, #636]	; (8001f18 <_printf_float+0x2dc>)
 8001c9a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001c9e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001ca2:	f7fe ff43 	bl	8000b2c <__aeabi_dcmpun>
 8001ca6:	bb88      	cbnz	r0, 8001d0c <_printf_float+0xd0>
 8001ca8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001cac:	4b9a      	ldr	r3, [pc, #616]	; (8001f18 <_printf_float+0x2dc>)
 8001cae:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001cb2:	f7fe ff1d 	bl	8000af0 <__aeabi_dcmple>
 8001cb6:	bb48      	cbnz	r0, 8001d0c <_printf_float+0xd0>
 8001cb8:	2200      	movs	r2, #0
 8001cba:	2300      	movs	r3, #0
 8001cbc:	4640      	mov	r0, r8
 8001cbe:	4649      	mov	r1, r9
 8001cc0:	f7fe ff0c 	bl	8000adc <__aeabi_dcmplt>
 8001cc4:	b110      	cbz	r0, 8001ccc <_printf_float+0x90>
 8001cc6:	232d      	movs	r3, #45	; 0x2d
 8001cc8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001ccc:	4b93      	ldr	r3, [pc, #588]	; (8001f1c <_printf_float+0x2e0>)
 8001cce:	4894      	ldr	r0, [pc, #592]	; (8001f20 <_printf_float+0x2e4>)
 8001cd0:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8001cd4:	bf94      	ite	ls
 8001cd6:	4698      	movls	r8, r3
 8001cd8:	4680      	movhi	r8, r0
 8001cda:	2303      	movs	r3, #3
 8001cdc:	6123      	str	r3, [r4, #16]
 8001cde:	9b05      	ldr	r3, [sp, #20]
 8001ce0:	f023 0204 	bic.w	r2, r3, #4
 8001ce4:	6022      	str	r2, [r4, #0]
 8001ce6:	f04f 0900 	mov.w	r9, #0
 8001cea:	9700      	str	r7, [sp, #0]
 8001cec:	4633      	mov	r3, r6
 8001cee:	aa0b      	add	r2, sp, #44	; 0x2c
 8001cf0:	4621      	mov	r1, r4
 8001cf2:	4628      	mov	r0, r5
 8001cf4:	f000 f9d8 	bl	80020a8 <_printf_common>
 8001cf8:	3001      	adds	r0, #1
 8001cfa:	f040 8090 	bne.w	8001e1e <_printf_float+0x1e2>
 8001cfe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d02:	b00d      	add	sp, #52	; 0x34
 8001d04:	ecbd 8b02 	vpop	{d8}
 8001d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d0c:	4642      	mov	r2, r8
 8001d0e:	464b      	mov	r3, r9
 8001d10:	4640      	mov	r0, r8
 8001d12:	4649      	mov	r1, r9
 8001d14:	f7fe ff0a 	bl	8000b2c <__aeabi_dcmpun>
 8001d18:	b140      	cbz	r0, 8001d2c <_printf_float+0xf0>
 8001d1a:	464b      	mov	r3, r9
 8001d1c:	2b00      	cmp	r3, #0
 8001d1e:	bfbc      	itt	lt
 8001d20:	232d      	movlt	r3, #45	; 0x2d
 8001d22:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001d26:	487f      	ldr	r0, [pc, #508]	; (8001f24 <_printf_float+0x2e8>)
 8001d28:	4b7f      	ldr	r3, [pc, #508]	; (8001f28 <_printf_float+0x2ec>)
 8001d2a:	e7d1      	b.n	8001cd0 <_printf_float+0x94>
 8001d2c:	6863      	ldr	r3, [r4, #4]
 8001d2e:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8001d32:	9206      	str	r2, [sp, #24]
 8001d34:	1c5a      	adds	r2, r3, #1
 8001d36:	d13f      	bne.n	8001db8 <_printf_float+0x17c>
 8001d38:	2306      	movs	r3, #6
 8001d3a:	6063      	str	r3, [r4, #4]
 8001d3c:	9b05      	ldr	r3, [sp, #20]
 8001d3e:	6861      	ldr	r1, [r4, #4]
 8001d40:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001d44:	2300      	movs	r3, #0
 8001d46:	9303      	str	r3, [sp, #12]
 8001d48:	ab0a      	add	r3, sp, #40	; 0x28
 8001d4a:	e9cd b301 	strd	fp, r3, [sp, #4]
 8001d4e:	ab09      	add	r3, sp, #36	; 0x24
 8001d50:	ec49 8b10 	vmov	d0, r8, r9
 8001d54:	9300      	str	r3, [sp, #0]
 8001d56:	6022      	str	r2, [r4, #0]
 8001d58:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001d5c:	4628      	mov	r0, r5
 8001d5e:	f7ff fecd 	bl	8001afc <__cvt>
 8001d62:	9b06      	ldr	r3, [sp, #24]
 8001d64:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001d66:	2b47      	cmp	r3, #71	; 0x47
 8001d68:	4680      	mov	r8, r0
 8001d6a:	d108      	bne.n	8001d7e <_printf_float+0x142>
 8001d6c:	1cc8      	adds	r0, r1, #3
 8001d6e:	db02      	blt.n	8001d76 <_printf_float+0x13a>
 8001d70:	6863      	ldr	r3, [r4, #4]
 8001d72:	4299      	cmp	r1, r3
 8001d74:	dd41      	ble.n	8001dfa <_printf_float+0x1be>
 8001d76:	f1ab 0b02 	sub.w	fp, fp, #2
 8001d7a:	fa5f fb8b 	uxtb.w	fp, fp
 8001d7e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001d82:	d820      	bhi.n	8001dc6 <_printf_float+0x18a>
 8001d84:	3901      	subs	r1, #1
 8001d86:	465a      	mov	r2, fp
 8001d88:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001d8c:	9109      	str	r1, [sp, #36]	; 0x24
 8001d8e:	f7ff ff17 	bl	8001bc0 <__exponent>
 8001d92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001d94:	1813      	adds	r3, r2, r0
 8001d96:	2a01      	cmp	r2, #1
 8001d98:	4681      	mov	r9, r0
 8001d9a:	6123      	str	r3, [r4, #16]
 8001d9c:	dc02      	bgt.n	8001da4 <_printf_float+0x168>
 8001d9e:	6822      	ldr	r2, [r4, #0]
 8001da0:	07d2      	lsls	r2, r2, #31
 8001da2:	d501      	bpl.n	8001da8 <_printf_float+0x16c>
 8001da4:	3301      	adds	r3, #1
 8001da6:	6123      	str	r3, [r4, #16]
 8001da8:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d09c      	beq.n	8001cea <_printf_float+0xae>
 8001db0:	232d      	movs	r3, #45	; 0x2d
 8001db2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001db6:	e798      	b.n	8001cea <_printf_float+0xae>
 8001db8:	9a06      	ldr	r2, [sp, #24]
 8001dba:	2a47      	cmp	r2, #71	; 0x47
 8001dbc:	d1be      	bne.n	8001d3c <_printf_float+0x100>
 8001dbe:	2b00      	cmp	r3, #0
 8001dc0:	d1bc      	bne.n	8001d3c <_printf_float+0x100>
 8001dc2:	2301      	movs	r3, #1
 8001dc4:	e7b9      	b.n	8001d3a <_printf_float+0xfe>
 8001dc6:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8001dca:	d118      	bne.n	8001dfe <_printf_float+0x1c2>
 8001dcc:	2900      	cmp	r1, #0
 8001dce:	6863      	ldr	r3, [r4, #4]
 8001dd0:	dd0b      	ble.n	8001dea <_printf_float+0x1ae>
 8001dd2:	6121      	str	r1, [r4, #16]
 8001dd4:	b913      	cbnz	r3, 8001ddc <_printf_float+0x1a0>
 8001dd6:	6822      	ldr	r2, [r4, #0]
 8001dd8:	07d0      	lsls	r0, r2, #31
 8001dda:	d502      	bpl.n	8001de2 <_printf_float+0x1a6>
 8001ddc:	3301      	adds	r3, #1
 8001dde:	440b      	add	r3, r1
 8001de0:	6123      	str	r3, [r4, #16]
 8001de2:	65a1      	str	r1, [r4, #88]	; 0x58
 8001de4:	f04f 0900 	mov.w	r9, #0
 8001de8:	e7de      	b.n	8001da8 <_printf_float+0x16c>
 8001dea:	b913      	cbnz	r3, 8001df2 <_printf_float+0x1b6>
 8001dec:	6822      	ldr	r2, [r4, #0]
 8001dee:	07d2      	lsls	r2, r2, #31
 8001df0:	d501      	bpl.n	8001df6 <_printf_float+0x1ba>
 8001df2:	3302      	adds	r3, #2
 8001df4:	e7f4      	b.n	8001de0 <_printf_float+0x1a4>
 8001df6:	2301      	movs	r3, #1
 8001df8:	e7f2      	b.n	8001de0 <_printf_float+0x1a4>
 8001dfa:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8001dfe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001e00:	4299      	cmp	r1, r3
 8001e02:	db05      	blt.n	8001e10 <_printf_float+0x1d4>
 8001e04:	6823      	ldr	r3, [r4, #0]
 8001e06:	6121      	str	r1, [r4, #16]
 8001e08:	07d8      	lsls	r0, r3, #31
 8001e0a:	d5ea      	bpl.n	8001de2 <_printf_float+0x1a6>
 8001e0c:	1c4b      	adds	r3, r1, #1
 8001e0e:	e7e7      	b.n	8001de0 <_printf_float+0x1a4>
 8001e10:	2900      	cmp	r1, #0
 8001e12:	bfd4      	ite	le
 8001e14:	f1c1 0202 	rsble	r2, r1, #2
 8001e18:	2201      	movgt	r2, #1
 8001e1a:	4413      	add	r3, r2
 8001e1c:	e7e0      	b.n	8001de0 <_printf_float+0x1a4>
 8001e1e:	6823      	ldr	r3, [r4, #0]
 8001e20:	055a      	lsls	r2, r3, #21
 8001e22:	d407      	bmi.n	8001e34 <_printf_float+0x1f8>
 8001e24:	6923      	ldr	r3, [r4, #16]
 8001e26:	4642      	mov	r2, r8
 8001e28:	4631      	mov	r1, r6
 8001e2a:	4628      	mov	r0, r5
 8001e2c:	47b8      	blx	r7
 8001e2e:	3001      	adds	r0, #1
 8001e30:	d12c      	bne.n	8001e8c <_printf_float+0x250>
 8001e32:	e764      	b.n	8001cfe <_printf_float+0xc2>
 8001e34:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001e38:	f240 80e0 	bls.w	8001ffc <_printf_float+0x3c0>
 8001e3c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001e40:	2200      	movs	r2, #0
 8001e42:	2300      	movs	r3, #0
 8001e44:	f7fe fe40 	bl	8000ac8 <__aeabi_dcmpeq>
 8001e48:	2800      	cmp	r0, #0
 8001e4a:	d034      	beq.n	8001eb6 <_printf_float+0x27a>
 8001e4c:	4a37      	ldr	r2, [pc, #220]	; (8001f2c <_printf_float+0x2f0>)
 8001e4e:	2301      	movs	r3, #1
 8001e50:	4631      	mov	r1, r6
 8001e52:	4628      	mov	r0, r5
 8001e54:	47b8      	blx	r7
 8001e56:	3001      	adds	r0, #1
 8001e58:	f43f af51 	beq.w	8001cfe <_printf_float+0xc2>
 8001e5c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001e60:	429a      	cmp	r2, r3
 8001e62:	db02      	blt.n	8001e6a <_printf_float+0x22e>
 8001e64:	6823      	ldr	r3, [r4, #0]
 8001e66:	07d8      	lsls	r0, r3, #31
 8001e68:	d510      	bpl.n	8001e8c <_printf_float+0x250>
 8001e6a:	ee18 3a10 	vmov	r3, s16
 8001e6e:	4652      	mov	r2, sl
 8001e70:	4631      	mov	r1, r6
 8001e72:	4628      	mov	r0, r5
 8001e74:	47b8      	blx	r7
 8001e76:	3001      	adds	r0, #1
 8001e78:	f43f af41 	beq.w	8001cfe <_printf_float+0xc2>
 8001e7c:	f04f 0800 	mov.w	r8, #0
 8001e80:	f104 091a 	add.w	r9, r4, #26
 8001e84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001e86:	3b01      	subs	r3, #1
 8001e88:	4543      	cmp	r3, r8
 8001e8a:	dc09      	bgt.n	8001ea0 <_printf_float+0x264>
 8001e8c:	6823      	ldr	r3, [r4, #0]
 8001e8e:	079b      	lsls	r3, r3, #30
 8001e90:	f100 8105 	bmi.w	800209e <_printf_float+0x462>
 8001e94:	68e0      	ldr	r0, [r4, #12]
 8001e96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001e98:	4298      	cmp	r0, r3
 8001e9a:	bfb8      	it	lt
 8001e9c:	4618      	movlt	r0, r3
 8001e9e:	e730      	b.n	8001d02 <_printf_float+0xc6>
 8001ea0:	2301      	movs	r3, #1
 8001ea2:	464a      	mov	r2, r9
 8001ea4:	4631      	mov	r1, r6
 8001ea6:	4628      	mov	r0, r5
 8001ea8:	47b8      	blx	r7
 8001eaa:	3001      	adds	r0, #1
 8001eac:	f43f af27 	beq.w	8001cfe <_printf_float+0xc2>
 8001eb0:	f108 0801 	add.w	r8, r8, #1
 8001eb4:	e7e6      	b.n	8001e84 <_printf_float+0x248>
 8001eb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001eb8:	2b00      	cmp	r3, #0
 8001eba:	dc39      	bgt.n	8001f30 <_printf_float+0x2f4>
 8001ebc:	4a1b      	ldr	r2, [pc, #108]	; (8001f2c <_printf_float+0x2f0>)
 8001ebe:	2301      	movs	r3, #1
 8001ec0:	4631      	mov	r1, r6
 8001ec2:	4628      	mov	r0, r5
 8001ec4:	47b8      	blx	r7
 8001ec6:	3001      	adds	r0, #1
 8001ec8:	f43f af19 	beq.w	8001cfe <_printf_float+0xc2>
 8001ecc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001ed0:	4313      	orrs	r3, r2
 8001ed2:	d102      	bne.n	8001eda <_printf_float+0x29e>
 8001ed4:	6823      	ldr	r3, [r4, #0]
 8001ed6:	07d9      	lsls	r1, r3, #31
 8001ed8:	d5d8      	bpl.n	8001e8c <_printf_float+0x250>
 8001eda:	ee18 3a10 	vmov	r3, s16
 8001ede:	4652      	mov	r2, sl
 8001ee0:	4631      	mov	r1, r6
 8001ee2:	4628      	mov	r0, r5
 8001ee4:	47b8      	blx	r7
 8001ee6:	3001      	adds	r0, #1
 8001ee8:	f43f af09 	beq.w	8001cfe <_printf_float+0xc2>
 8001eec:	f04f 0900 	mov.w	r9, #0
 8001ef0:	f104 0a1a 	add.w	sl, r4, #26
 8001ef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001ef6:	425b      	negs	r3, r3
 8001ef8:	454b      	cmp	r3, r9
 8001efa:	dc01      	bgt.n	8001f00 <_printf_float+0x2c4>
 8001efc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001efe:	e792      	b.n	8001e26 <_printf_float+0x1ea>
 8001f00:	2301      	movs	r3, #1
 8001f02:	4652      	mov	r2, sl
 8001f04:	4631      	mov	r1, r6
 8001f06:	4628      	mov	r0, r5
 8001f08:	47b8      	blx	r7
 8001f0a:	3001      	adds	r0, #1
 8001f0c:	f43f aef7 	beq.w	8001cfe <_printf_float+0xc2>
 8001f10:	f109 0901 	add.w	r9, r9, #1
 8001f14:	e7ee      	b.n	8001ef4 <_printf_float+0x2b8>
 8001f16:	bf00      	nop
 8001f18:	7fefffff 	.word	0x7fefffff
 8001f1c:	080044cc 	.word	0x080044cc
 8001f20:	080044d0 	.word	0x080044d0
 8001f24:	080044d8 	.word	0x080044d8
 8001f28:	080044d4 	.word	0x080044d4
 8001f2c:	080044dc 	.word	0x080044dc
 8001f30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001f32:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001f34:	429a      	cmp	r2, r3
 8001f36:	bfa8      	it	ge
 8001f38:	461a      	movge	r2, r3
 8001f3a:	2a00      	cmp	r2, #0
 8001f3c:	4691      	mov	r9, r2
 8001f3e:	dc37      	bgt.n	8001fb0 <_printf_float+0x374>
 8001f40:	f04f 0b00 	mov.w	fp, #0
 8001f44:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f48:	f104 021a 	add.w	r2, r4, #26
 8001f4c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001f4e:	9305      	str	r3, [sp, #20]
 8001f50:	eba3 0309 	sub.w	r3, r3, r9
 8001f54:	455b      	cmp	r3, fp
 8001f56:	dc33      	bgt.n	8001fc0 <_printf_float+0x384>
 8001f58:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001f5c:	429a      	cmp	r2, r3
 8001f5e:	db3b      	blt.n	8001fd8 <_printf_float+0x39c>
 8001f60:	6823      	ldr	r3, [r4, #0]
 8001f62:	07da      	lsls	r2, r3, #31
 8001f64:	d438      	bmi.n	8001fd8 <_printf_float+0x39c>
 8001f66:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001f68:	9b05      	ldr	r3, [sp, #20]
 8001f6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001f6c:	1ad3      	subs	r3, r2, r3
 8001f6e:	eba2 0901 	sub.w	r9, r2, r1
 8001f72:	4599      	cmp	r9, r3
 8001f74:	bfa8      	it	ge
 8001f76:	4699      	movge	r9, r3
 8001f78:	f1b9 0f00 	cmp.w	r9, #0
 8001f7c:	dc35      	bgt.n	8001fea <_printf_float+0x3ae>
 8001f7e:	f04f 0800 	mov.w	r8, #0
 8001f82:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f86:	f104 0a1a 	add.w	sl, r4, #26
 8001f8a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001f8e:	1a9b      	subs	r3, r3, r2
 8001f90:	eba3 0309 	sub.w	r3, r3, r9
 8001f94:	4543      	cmp	r3, r8
 8001f96:	f77f af79 	ble.w	8001e8c <_printf_float+0x250>
 8001f9a:	2301      	movs	r3, #1
 8001f9c:	4652      	mov	r2, sl
 8001f9e:	4631      	mov	r1, r6
 8001fa0:	4628      	mov	r0, r5
 8001fa2:	47b8      	blx	r7
 8001fa4:	3001      	adds	r0, #1
 8001fa6:	f43f aeaa 	beq.w	8001cfe <_printf_float+0xc2>
 8001faa:	f108 0801 	add.w	r8, r8, #1
 8001fae:	e7ec      	b.n	8001f8a <_printf_float+0x34e>
 8001fb0:	4613      	mov	r3, r2
 8001fb2:	4631      	mov	r1, r6
 8001fb4:	4642      	mov	r2, r8
 8001fb6:	4628      	mov	r0, r5
 8001fb8:	47b8      	blx	r7
 8001fba:	3001      	adds	r0, #1
 8001fbc:	d1c0      	bne.n	8001f40 <_printf_float+0x304>
 8001fbe:	e69e      	b.n	8001cfe <_printf_float+0xc2>
 8001fc0:	2301      	movs	r3, #1
 8001fc2:	4631      	mov	r1, r6
 8001fc4:	4628      	mov	r0, r5
 8001fc6:	9205      	str	r2, [sp, #20]
 8001fc8:	47b8      	blx	r7
 8001fca:	3001      	adds	r0, #1
 8001fcc:	f43f ae97 	beq.w	8001cfe <_printf_float+0xc2>
 8001fd0:	9a05      	ldr	r2, [sp, #20]
 8001fd2:	f10b 0b01 	add.w	fp, fp, #1
 8001fd6:	e7b9      	b.n	8001f4c <_printf_float+0x310>
 8001fd8:	ee18 3a10 	vmov	r3, s16
 8001fdc:	4652      	mov	r2, sl
 8001fde:	4631      	mov	r1, r6
 8001fe0:	4628      	mov	r0, r5
 8001fe2:	47b8      	blx	r7
 8001fe4:	3001      	adds	r0, #1
 8001fe6:	d1be      	bne.n	8001f66 <_printf_float+0x32a>
 8001fe8:	e689      	b.n	8001cfe <_printf_float+0xc2>
 8001fea:	9a05      	ldr	r2, [sp, #20]
 8001fec:	464b      	mov	r3, r9
 8001fee:	4442      	add	r2, r8
 8001ff0:	4631      	mov	r1, r6
 8001ff2:	4628      	mov	r0, r5
 8001ff4:	47b8      	blx	r7
 8001ff6:	3001      	adds	r0, #1
 8001ff8:	d1c1      	bne.n	8001f7e <_printf_float+0x342>
 8001ffa:	e680      	b.n	8001cfe <_printf_float+0xc2>
 8001ffc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001ffe:	2a01      	cmp	r2, #1
 8002000:	dc01      	bgt.n	8002006 <_printf_float+0x3ca>
 8002002:	07db      	lsls	r3, r3, #31
 8002004:	d538      	bpl.n	8002078 <_printf_float+0x43c>
 8002006:	2301      	movs	r3, #1
 8002008:	4642      	mov	r2, r8
 800200a:	4631      	mov	r1, r6
 800200c:	4628      	mov	r0, r5
 800200e:	47b8      	blx	r7
 8002010:	3001      	adds	r0, #1
 8002012:	f43f ae74 	beq.w	8001cfe <_printf_float+0xc2>
 8002016:	ee18 3a10 	vmov	r3, s16
 800201a:	4652      	mov	r2, sl
 800201c:	4631      	mov	r1, r6
 800201e:	4628      	mov	r0, r5
 8002020:	47b8      	blx	r7
 8002022:	3001      	adds	r0, #1
 8002024:	f43f ae6b 	beq.w	8001cfe <_printf_float+0xc2>
 8002028:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800202c:	2200      	movs	r2, #0
 800202e:	2300      	movs	r3, #0
 8002030:	f7fe fd4a 	bl	8000ac8 <__aeabi_dcmpeq>
 8002034:	b9d8      	cbnz	r0, 800206e <_printf_float+0x432>
 8002036:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002038:	f108 0201 	add.w	r2, r8, #1
 800203c:	3b01      	subs	r3, #1
 800203e:	4631      	mov	r1, r6
 8002040:	4628      	mov	r0, r5
 8002042:	47b8      	blx	r7
 8002044:	3001      	adds	r0, #1
 8002046:	d10e      	bne.n	8002066 <_printf_float+0x42a>
 8002048:	e659      	b.n	8001cfe <_printf_float+0xc2>
 800204a:	2301      	movs	r3, #1
 800204c:	4652      	mov	r2, sl
 800204e:	4631      	mov	r1, r6
 8002050:	4628      	mov	r0, r5
 8002052:	47b8      	blx	r7
 8002054:	3001      	adds	r0, #1
 8002056:	f43f ae52 	beq.w	8001cfe <_printf_float+0xc2>
 800205a:	f108 0801 	add.w	r8, r8, #1
 800205e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002060:	3b01      	subs	r3, #1
 8002062:	4543      	cmp	r3, r8
 8002064:	dcf1      	bgt.n	800204a <_printf_float+0x40e>
 8002066:	464b      	mov	r3, r9
 8002068:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800206c:	e6dc      	b.n	8001e28 <_printf_float+0x1ec>
 800206e:	f04f 0800 	mov.w	r8, #0
 8002072:	f104 0a1a 	add.w	sl, r4, #26
 8002076:	e7f2      	b.n	800205e <_printf_float+0x422>
 8002078:	2301      	movs	r3, #1
 800207a:	4642      	mov	r2, r8
 800207c:	e7df      	b.n	800203e <_printf_float+0x402>
 800207e:	2301      	movs	r3, #1
 8002080:	464a      	mov	r2, r9
 8002082:	4631      	mov	r1, r6
 8002084:	4628      	mov	r0, r5
 8002086:	47b8      	blx	r7
 8002088:	3001      	adds	r0, #1
 800208a:	f43f ae38 	beq.w	8001cfe <_printf_float+0xc2>
 800208e:	f108 0801 	add.w	r8, r8, #1
 8002092:	68e3      	ldr	r3, [r4, #12]
 8002094:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002096:	1a5b      	subs	r3, r3, r1
 8002098:	4543      	cmp	r3, r8
 800209a:	dcf0      	bgt.n	800207e <_printf_float+0x442>
 800209c:	e6fa      	b.n	8001e94 <_printf_float+0x258>
 800209e:	f04f 0800 	mov.w	r8, #0
 80020a2:	f104 0919 	add.w	r9, r4, #25
 80020a6:	e7f4      	b.n	8002092 <_printf_float+0x456>

080020a8 <_printf_common>:
 80020a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80020ac:	4616      	mov	r6, r2
 80020ae:	4699      	mov	r9, r3
 80020b0:	688a      	ldr	r2, [r1, #8]
 80020b2:	690b      	ldr	r3, [r1, #16]
 80020b4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80020b8:	4293      	cmp	r3, r2
 80020ba:	bfb8      	it	lt
 80020bc:	4613      	movlt	r3, r2
 80020be:	6033      	str	r3, [r6, #0]
 80020c0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80020c4:	4607      	mov	r7, r0
 80020c6:	460c      	mov	r4, r1
 80020c8:	b10a      	cbz	r2, 80020ce <_printf_common+0x26>
 80020ca:	3301      	adds	r3, #1
 80020cc:	6033      	str	r3, [r6, #0]
 80020ce:	6823      	ldr	r3, [r4, #0]
 80020d0:	0699      	lsls	r1, r3, #26
 80020d2:	bf42      	ittt	mi
 80020d4:	6833      	ldrmi	r3, [r6, #0]
 80020d6:	3302      	addmi	r3, #2
 80020d8:	6033      	strmi	r3, [r6, #0]
 80020da:	6825      	ldr	r5, [r4, #0]
 80020dc:	f015 0506 	ands.w	r5, r5, #6
 80020e0:	d106      	bne.n	80020f0 <_printf_common+0x48>
 80020e2:	f104 0a19 	add.w	sl, r4, #25
 80020e6:	68e3      	ldr	r3, [r4, #12]
 80020e8:	6832      	ldr	r2, [r6, #0]
 80020ea:	1a9b      	subs	r3, r3, r2
 80020ec:	42ab      	cmp	r3, r5
 80020ee:	dc26      	bgt.n	800213e <_printf_common+0x96>
 80020f0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80020f4:	1e13      	subs	r3, r2, #0
 80020f6:	6822      	ldr	r2, [r4, #0]
 80020f8:	bf18      	it	ne
 80020fa:	2301      	movne	r3, #1
 80020fc:	0692      	lsls	r2, r2, #26
 80020fe:	d42b      	bmi.n	8002158 <_printf_common+0xb0>
 8002100:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002104:	4649      	mov	r1, r9
 8002106:	4638      	mov	r0, r7
 8002108:	47c0      	blx	r8
 800210a:	3001      	adds	r0, #1
 800210c:	d01e      	beq.n	800214c <_printf_common+0xa4>
 800210e:	6823      	ldr	r3, [r4, #0]
 8002110:	68e5      	ldr	r5, [r4, #12]
 8002112:	6832      	ldr	r2, [r6, #0]
 8002114:	f003 0306 	and.w	r3, r3, #6
 8002118:	2b04      	cmp	r3, #4
 800211a:	bf08      	it	eq
 800211c:	1aad      	subeq	r5, r5, r2
 800211e:	68a3      	ldr	r3, [r4, #8]
 8002120:	6922      	ldr	r2, [r4, #16]
 8002122:	bf0c      	ite	eq
 8002124:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002128:	2500      	movne	r5, #0
 800212a:	4293      	cmp	r3, r2
 800212c:	bfc4      	itt	gt
 800212e:	1a9b      	subgt	r3, r3, r2
 8002130:	18ed      	addgt	r5, r5, r3
 8002132:	2600      	movs	r6, #0
 8002134:	341a      	adds	r4, #26
 8002136:	42b5      	cmp	r5, r6
 8002138:	d11a      	bne.n	8002170 <_printf_common+0xc8>
 800213a:	2000      	movs	r0, #0
 800213c:	e008      	b.n	8002150 <_printf_common+0xa8>
 800213e:	2301      	movs	r3, #1
 8002140:	4652      	mov	r2, sl
 8002142:	4649      	mov	r1, r9
 8002144:	4638      	mov	r0, r7
 8002146:	47c0      	blx	r8
 8002148:	3001      	adds	r0, #1
 800214a:	d103      	bne.n	8002154 <_printf_common+0xac>
 800214c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002150:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002154:	3501      	adds	r5, #1
 8002156:	e7c6      	b.n	80020e6 <_printf_common+0x3e>
 8002158:	18e1      	adds	r1, r4, r3
 800215a:	1c5a      	adds	r2, r3, #1
 800215c:	2030      	movs	r0, #48	; 0x30
 800215e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002162:	4422      	add	r2, r4
 8002164:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002168:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800216c:	3302      	adds	r3, #2
 800216e:	e7c7      	b.n	8002100 <_printf_common+0x58>
 8002170:	2301      	movs	r3, #1
 8002172:	4622      	mov	r2, r4
 8002174:	4649      	mov	r1, r9
 8002176:	4638      	mov	r0, r7
 8002178:	47c0      	blx	r8
 800217a:	3001      	adds	r0, #1
 800217c:	d0e6      	beq.n	800214c <_printf_common+0xa4>
 800217e:	3601      	adds	r6, #1
 8002180:	e7d9      	b.n	8002136 <_printf_common+0x8e>
	...

08002184 <_printf_i>:
 8002184:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002188:	460c      	mov	r4, r1
 800218a:	4691      	mov	r9, r2
 800218c:	7e27      	ldrb	r7, [r4, #24]
 800218e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002190:	2f78      	cmp	r7, #120	; 0x78
 8002192:	4680      	mov	r8, r0
 8002194:	469a      	mov	sl, r3
 8002196:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800219a:	d807      	bhi.n	80021ac <_printf_i+0x28>
 800219c:	2f62      	cmp	r7, #98	; 0x62
 800219e:	d80a      	bhi.n	80021b6 <_printf_i+0x32>
 80021a0:	2f00      	cmp	r7, #0
 80021a2:	f000 80d8 	beq.w	8002356 <_printf_i+0x1d2>
 80021a6:	2f58      	cmp	r7, #88	; 0x58
 80021a8:	f000 80a3 	beq.w	80022f2 <_printf_i+0x16e>
 80021ac:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80021b0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80021b4:	e03a      	b.n	800222c <_printf_i+0xa8>
 80021b6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80021ba:	2b15      	cmp	r3, #21
 80021bc:	d8f6      	bhi.n	80021ac <_printf_i+0x28>
 80021be:	a001      	add	r0, pc, #4	; (adr r0, 80021c4 <_printf_i+0x40>)
 80021c0:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80021c4:	0800221d 	.word	0x0800221d
 80021c8:	08002231 	.word	0x08002231
 80021cc:	080021ad 	.word	0x080021ad
 80021d0:	080021ad 	.word	0x080021ad
 80021d4:	080021ad 	.word	0x080021ad
 80021d8:	080021ad 	.word	0x080021ad
 80021dc:	08002231 	.word	0x08002231
 80021e0:	080021ad 	.word	0x080021ad
 80021e4:	080021ad 	.word	0x080021ad
 80021e8:	080021ad 	.word	0x080021ad
 80021ec:	080021ad 	.word	0x080021ad
 80021f0:	0800233d 	.word	0x0800233d
 80021f4:	08002261 	.word	0x08002261
 80021f8:	0800231f 	.word	0x0800231f
 80021fc:	080021ad 	.word	0x080021ad
 8002200:	080021ad 	.word	0x080021ad
 8002204:	0800235f 	.word	0x0800235f
 8002208:	080021ad 	.word	0x080021ad
 800220c:	08002261 	.word	0x08002261
 8002210:	080021ad 	.word	0x080021ad
 8002214:	080021ad 	.word	0x080021ad
 8002218:	08002327 	.word	0x08002327
 800221c:	680b      	ldr	r3, [r1, #0]
 800221e:	1d1a      	adds	r2, r3, #4
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	600a      	str	r2, [r1, #0]
 8002224:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002228:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800222c:	2301      	movs	r3, #1
 800222e:	e0a3      	b.n	8002378 <_printf_i+0x1f4>
 8002230:	6825      	ldr	r5, [r4, #0]
 8002232:	6808      	ldr	r0, [r1, #0]
 8002234:	062e      	lsls	r6, r5, #24
 8002236:	f100 0304 	add.w	r3, r0, #4
 800223a:	d50a      	bpl.n	8002252 <_printf_i+0xce>
 800223c:	6805      	ldr	r5, [r0, #0]
 800223e:	600b      	str	r3, [r1, #0]
 8002240:	2d00      	cmp	r5, #0
 8002242:	da03      	bge.n	800224c <_printf_i+0xc8>
 8002244:	232d      	movs	r3, #45	; 0x2d
 8002246:	426d      	negs	r5, r5
 8002248:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800224c:	485e      	ldr	r0, [pc, #376]	; (80023c8 <_printf_i+0x244>)
 800224e:	230a      	movs	r3, #10
 8002250:	e019      	b.n	8002286 <_printf_i+0x102>
 8002252:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002256:	6805      	ldr	r5, [r0, #0]
 8002258:	600b      	str	r3, [r1, #0]
 800225a:	bf18      	it	ne
 800225c:	b22d      	sxthne	r5, r5
 800225e:	e7ef      	b.n	8002240 <_printf_i+0xbc>
 8002260:	680b      	ldr	r3, [r1, #0]
 8002262:	6825      	ldr	r5, [r4, #0]
 8002264:	1d18      	adds	r0, r3, #4
 8002266:	6008      	str	r0, [r1, #0]
 8002268:	0628      	lsls	r0, r5, #24
 800226a:	d501      	bpl.n	8002270 <_printf_i+0xec>
 800226c:	681d      	ldr	r5, [r3, #0]
 800226e:	e002      	b.n	8002276 <_printf_i+0xf2>
 8002270:	0669      	lsls	r1, r5, #25
 8002272:	d5fb      	bpl.n	800226c <_printf_i+0xe8>
 8002274:	881d      	ldrh	r5, [r3, #0]
 8002276:	4854      	ldr	r0, [pc, #336]	; (80023c8 <_printf_i+0x244>)
 8002278:	2f6f      	cmp	r7, #111	; 0x6f
 800227a:	bf0c      	ite	eq
 800227c:	2308      	moveq	r3, #8
 800227e:	230a      	movne	r3, #10
 8002280:	2100      	movs	r1, #0
 8002282:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002286:	6866      	ldr	r6, [r4, #4]
 8002288:	60a6      	str	r6, [r4, #8]
 800228a:	2e00      	cmp	r6, #0
 800228c:	bfa2      	ittt	ge
 800228e:	6821      	ldrge	r1, [r4, #0]
 8002290:	f021 0104 	bicge.w	r1, r1, #4
 8002294:	6021      	strge	r1, [r4, #0]
 8002296:	b90d      	cbnz	r5, 800229c <_printf_i+0x118>
 8002298:	2e00      	cmp	r6, #0
 800229a:	d04d      	beq.n	8002338 <_printf_i+0x1b4>
 800229c:	4616      	mov	r6, r2
 800229e:	fbb5 f1f3 	udiv	r1, r5, r3
 80022a2:	fb03 5711 	mls	r7, r3, r1, r5
 80022a6:	5dc7      	ldrb	r7, [r0, r7]
 80022a8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80022ac:	462f      	mov	r7, r5
 80022ae:	42bb      	cmp	r3, r7
 80022b0:	460d      	mov	r5, r1
 80022b2:	d9f4      	bls.n	800229e <_printf_i+0x11a>
 80022b4:	2b08      	cmp	r3, #8
 80022b6:	d10b      	bne.n	80022d0 <_printf_i+0x14c>
 80022b8:	6823      	ldr	r3, [r4, #0]
 80022ba:	07df      	lsls	r7, r3, #31
 80022bc:	d508      	bpl.n	80022d0 <_printf_i+0x14c>
 80022be:	6923      	ldr	r3, [r4, #16]
 80022c0:	6861      	ldr	r1, [r4, #4]
 80022c2:	4299      	cmp	r1, r3
 80022c4:	bfde      	ittt	le
 80022c6:	2330      	movle	r3, #48	; 0x30
 80022c8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80022cc:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 80022d0:	1b92      	subs	r2, r2, r6
 80022d2:	6122      	str	r2, [r4, #16]
 80022d4:	f8cd a000 	str.w	sl, [sp]
 80022d8:	464b      	mov	r3, r9
 80022da:	aa03      	add	r2, sp, #12
 80022dc:	4621      	mov	r1, r4
 80022de:	4640      	mov	r0, r8
 80022e0:	f7ff fee2 	bl	80020a8 <_printf_common>
 80022e4:	3001      	adds	r0, #1
 80022e6:	d14c      	bne.n	8002382 <_printf_i+0x1fe>
 80022e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80022ec:	b004      	add	sp, #16
 80022ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80022f2:	4835      	ldr	r0, [pc, #212]	; (80023c8 <_printf_i+0x244>)
 80022f4:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80022f8:	6823      	ldr	r3, [r4, #0]
 80022fa:	680e      	ldr	r6, [r1, #0]
 80022fc:	061f      	lsls	r7, r3, #24
 80022fe:	f856 5b04 	ldr.w	r5, [r6], #4
 8002302:	600e      	str	r6, [r1, #0]
 8002304:	d514      	bpl.n	8002330 <_printf_i+0x1ac>
 8002306:	07d9      	lsls	r1, r3, #31
 8002308:	bf44      	itt	mi
 800230a:	f043 0320 	orrmi.w	r3, r3, #32
 800230e:	6023      	strmi	r3, [r4, #0]
 8002310:	b91d      	cbnz	r5, 800231a <_printf_i+0x196>
 8002312:	6823      	ldr	r3, [r4, #0]
 8002314:	f023 0320 	bic.w	r3, r3, #32
 8002318:	6023      	str	r3, [r4, #0]
 800231a:	2310      	movs	r3, #16
 800231c:	e7b0      	b.n	8002280 <_printf_i+0xfc>
 800231e:	6823      	ldr	r3, [r4, #0]
 8002320:	f043 0320 	orr.w	r3, r3, #32
 8002324:	6023      	str	r3, [r4, #0]
 8002326:	2378      	movs	r3, #120	; 0x78
 8002328:	4828      	ldr	r0, [pc, #160]	; (80023cc <_printf_i+0x248>)
 800232a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800232e:	e7e3      	b.n	80022f8 <_printf_i+0x174>
 8002330:	065e      	lsls	r6, r3, #25
 8002332:	bf48      	it	mi
 8002334:	b2ad      	uxthmi	r5, r5
 8002336:	e7e6      	b.n	8002306 <_printf_i+0x182>
 8002338:	4616      	mov	r6, r2
 800233a:	e7bb      	b.n	80022b4 <_printf_i+0x130>
 800233c:	680b      	ldr	r3, [r1, #0]
 800233e:	6826      	ldr	r6, [r4, #0]
 8002340:	6960      	ldr	r0, [r4, #20]
 8002342:	1d1d      	adds	r5, r3, #4
 8002344:	600d      	str	r5, [r1, #0]
 8002346:	0635      	lsls	r5, r6, #24
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	d501      	bpl.n	8002350 <_printf_i+0x1cc>
 800234c:	6018      	str	r0, [r3, #0]
 800234e:	e002      	b.n	8002356 <_printf_i+0x1d2>
 8002350:	0671      	lsls	r1, r6, #25
 8002352:	d5fb      	bpl.n	800234c <_printf_i+0x1c8>
 8002354:	8018      	strh	r0, [r3, #0]
 8002356:	2300      	movs	r3, #0
 8002358:	6123      	str	r3, [r4, #16]
 800235a:	4616      	mov	r6, r2
 800235c:	e7ba      	b.n	80022d4 <_printf_i+0x150>
 800235e:	680b      	ldr	r3, [r1, #0]
 8002360:	1d1a      	adds	r2, r3, #4
 8002362:	600a      	str	r2, [r1, #0]
 8002364:	681e      	ldr	r6, [r3, #0]
 8002366:	6862      	ldr	r2, [r4, #4]
 8002368:	2100      	movs	r1, #0
 800236a:	4630      	mov	r0, r6
 800236c:	f7fd ff38 	bl	80001e0 <memchr>
 8002370:	b108      	cbz	r0, 8002376 <_printf_i+0x1f2>
 8002372:	1b80      	subs	r0, r0, r6
 8002374:	6060      	str	r0, [r4, #4]
 8002376:	6863      	ldr	r3, [r4, #4]
 8002378:	6123      	str	r3, [r4, #16]
 800237a:	2300      	movs	r3, #0
 800237c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002380:	e7a8      	b.n	80022d4 <_printf_i+0x150>
 8002382:	6923      	ldr	r3, [r4, #16]
 8002384:	4632      	mov	r2, r6
 8002386:	4649      	mov	r1, r9
 8002388:	4640      	mov	r0, r8
 800238a:	47d0      	blx	sl
 800238c:	3001      	adds	r0, #1
 800238e:	d0ab      	beq.n	80022e8 <_printf_i+0x164>
 8002390:	6823      	ldr	r3, [r4, #0]
 8002392:	079b      	lsls	r3, r3, #30
 8002394:	d413      	bmi.n	80023be <_printf_i+0x23a>
 8002396:	68e0      	ldr	r0, [r4, #12]
 8002398:	9b03      	ldr	r3, [sp, #12]
 800239a:	4298      	cmp	r0, r3
 800239c:	bfb8      	it	lt
 800239e:	4618      	movlt	r0, r3
 80023a0:	e7a4      	b.n	80022ec <_printf_i+0x168>
 80023a2:	2301      	movs	r3, #1
 80023a4:	4632      	mov	r2, r6
 80023a6:	4649      	mov	r1, r9
 80023a8:	4640      	mov	r0, r8
 80023aa:	47d0      	blx	sl
 80023ac:	3001      	adds	r0, #1
 80023ae:	d09b      	beq.n	80022e8 <_printf_i+0x164>
 80023b0:	3501      	adds	r5, #1
 80023b2:	68e3      	ldr	r3, [r4, #12]
 80023b4:	9903      	ldr	r1, [sp, #12]
 80023b6:	1a5b      	subs	r3, r3, r1
 80023b8:	42ab      	cmp	r3, r5
 80023ba:	dcf2      	bgt.n	80023a2 <_printf_i+0x21e>
 80023bc:	e7eb      	b.n	8002396 <_printf_i+0x212>
 80023be:	2500      	movs	r5, #0
 80023c0:	f104 0619 	add.w	r6, r4, #25
 80023c4:	e7f5      	b.n	80023b2 <_printf_i+0x22e>
 80023c6:	bf00      	nop
 80023c8:	080044de 	.word	0x080044de
 80023cc:	080044ef 	.word	0x080044ef

080023d0 <quorem>:
 80023d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023d4:	6903      	ldr	r3, [r0, #16]
 80023d6:	690c      	ldr	r4, [r1, #16]
 80023d8:	42a3      	cmp	r3, r4
 80023da:	4607      	mov	r7, r0
 80023dc:	f2c0 8081 	blt.w	80024e2 <quorem+0x112>
 80023e0:	3c01      	subs	r4, #1
 80023e2:	f101 0814 	add.w	r8, r1, #20
 80023e6:	f100 0514 	add.w	r5, r0, #20
 80023ea:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80023ee:	9301      	str	r3, [sp, #4]
 80023f0:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80023f4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80023f8:	3301      	adds	r3, #1
 80023fa:	429a      	cmp	r2, r3
 80023fc:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002400:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002404:	fbb2 f6f3 	udiv	r6, r2, r3
 8002408:	d331      	bcc.n	800246e <quorem+0x9e>
 800240a:	f04f 0e00 	mov.w	lr, #0
 800240e:	4640      	mov	r0, r8
 8002410:	46ac      	mov	ip, r5
 8002412:	46f2      	mov	sl, lr
 8002414:	f850 2b04 	ldr.w	r2, [r0], #4
 8002418:	b293      	uxth	r3, r2
 800241a:	fb06 e303 	mla	r3, r6, r3, lr
 800241e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8002422:	b29b      	uxth	r3, r3
 8002424:	ebaa 0303 	sub.w	r3, sl, r3
 8002428:	0c12      	lsrs	r2, r2, #16
 800242a:	f8dc a000 	ldr.w	sl, [ip]
 800242e:	fb06 e202 	mla	r2, r6, r2, lr
 8002432:	fa13 f38a 	uxtah	r3, r3, sl
 8002436:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800243a:	fa1f fa82 	uxth.w	sl, r2
 800243e:	f8dc 2000 	ldr.w	r2, [ip]
 8002442:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 8002446:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800244a:	b29b      	uxth	r3, r3
 800244c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002450:	4581      	cmp	r9, r0
 8002452:	f84c 3b04 	str.w	r3, [ip], #4
 8002456:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800245a:	d2db      	bcs.n	8002414 <quorem+0x44>
 800245c:	f855 300b 	ldr.w	r3, [r5, fp]
 8002460:	b92b      	cbnz	r3, 800246e <quorem+0x9e>
 8002462:	9b01      	ldr	r3, [sp, #4]
 8002464:	3b04      	subs	r3, #4
 8002466:	429d      	cmp	r5, r3
 8002468:	461a      	mov	r2, r3
 800246a:	d32e      	bcc.n	80024ca <quorem+0xfa>
 800246c:	613c      	str	r4, [r7, #16]
 800246e:	4638      	mov	r0, r7
 8002470:	f001 f8be 	bl	80035f0 <__mcmp>
 8002474:	2800      	cmp	r0, #0
 8002476:	db24      	blt.n	80024c2 <quorem+0xf2>
 8002478:	3601      	adds	r6, #1
 800247a:	4628      	mov	r0, r5
 800247c:	f04f 0c00 	mov.w	ip, #0
 8002480:	f858 2b04 	ldr.w	r2, [r8], #4
 8002484:	f8d0 e000 	ldr.w	lr, [r0]
 8002488:	b293      	uxth	r3, r2
 800248a:	ebac 0303 	sub.w	r3, ip, r3
 800248e:	0c12      	lsrs	r2, r2, #16
 8002490:	fa13 f38e 	uxtah	r3, r3, lr
 8002494:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8002498:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800249c:	b29b      	uxth	r3, r3
 800249e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80024a2:	45c1      	cmp	r9, r8
 80024a4:	f840 3b04 	str.w	r3, [r0], #4
 80024a8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80024ac:	d2e8      	bcs.n	8002480 <quorem+0xb0>
 80024ae:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80024b2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80024b6:	b922      	cbnz	r2, 80024c2 <quorem+0xf2>
 80024b8:	3b04      	subs	r3, #4
 80024ba:	429d      	cmp	r5, r3
 80024bc:	461a      	mov	r2, r3
 80024be:	d30a      	bcc.n	80024d6 <quorem+0x106>
 80024c0:	613c      	str	r4, [r7, #16]
 80024c2:	4630      	mov	r0, r6
 80024c4:	b003      	add	sp, #12
 80024c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024ca:	6812      	ldr	r2, [r2, #0]
 80024cc:	3b04      	subs	r3, #4
 80024ce:	2a00      	cmp	r2, #0
 80024d0:	d1cc      	bne.n	800246c <quorem+0x9c>
 80024d2:	3c01      	subs	r4, #1
 80024d4:	e7c7      	b.n	8002466 <quorem+0x96>
 80024d6:	6812      	ldr	r2, [r2, #0]
 80024d8:	3b04      	subs	r3, #4
 80024da:	2a00      	cmp	r2, #0
 80024dc:	d1f0      	bne.n	80024c0 <quorem+0xf0>
 80024de:	3c01      	subs	r4, #1
 80024e0:	e7eb      	b.n	80024ba <quorem+0xea>
 80024e2:	2000      	movs	r0, #0
 80024e4:	e7ee      	b.n	80024c4 <quorem+0xf4>
	...

080024e8 <_dtoa_r>:
 80024e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024ec:	ed2d 8b02 	vpush	{d8}
 80024f0:	ec57 6b10 	vmov	r6, r7, d0
 80024f4:	b095      	sub	sp, #84	; 0x54
 80024f6:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80024f8:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80024fc:	9105      	str	r1, [sp, #20]
 80024fe:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8002502:	4604      	mov	r4, r0
 8002504:	9209      	str	r2, [sp, #36]	; 0x24
 8002506:	930f      	str	r3, [sp, #60]	; 0x3c
 8002508:	b975      	cbnz	r5, 8002528 <_dtoa_r+0x40>
 800250a:	2010      	movs	r0, #16
 800250c:	f000 fddc 	bl	80030c8 <malloc>
 8002510:	4602      	mov	r2, r0
 8002512:	6260      	str	r0, [r4, #36]	; 0x24
 8002514:	b920      	cbnz	r0, 8002520 <_dtoa_r+0x38>
 8002516:	4bb2      	ldr	r3, [pc, #712]	; (80027e0 <_dtoa_r+0x2f8>)
 8002518:	21ea      	movs	r1, #234	; 0xea
 800251a:	48b2      	ldr	r0, [pc, #712]	; (80027e4 <_dtoa_r+0x2fc>)
 800251c:	f001 fa32 	bl	8003984 <__assert_func>
 8002520:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002524:	6005      	str	r5, [r0, #0]
 8002526:	60c5      	str	r5, [r0, #12]
 8002528:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800252a:	6819      	ldr	r1, [r3, #0]
 800252c:	b151      	cbz	r1, 8002544 <_dtoa_r+0x5c>
 800252e:	685a      	ldr	r2, [r3, #4]
 8002530:	604a      	str	r2, [r1, #4]
 8002532:	2301      	movs	r3, #1
 8002534:	4093      	lsls	r3, r2
 8002536:	608b      	str	r3, [r1, #8]
 8002538:	4620      	mov	r0, r4
 800253a:	f000 fe1b 	bl	8003174 <_Bfree>
 800253e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002540:	2200      	movs	r2, #0
 8002542:	601a      	str	r2, [r3, #0]
 8002544:	1e3b      	subs	r3, r7, #0
 8002546:	bfb9      	ittee	lt
 8002548:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800254c:	9303      	strlt	r3, [sp, #12]
 800254e:	2300      	movge	r3, #0
 8002550:	f8c8 3000 	strge.w	r3, [r8]
 8002554:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8002558:	4ba3      	ldr	r3, [pc, #652]	; (80027e8 <_dtoa_r+0x300>)
 800255a:	bfbc      	itt	lt
 800255c:	2201      	movlt	r2, #1
 800255e:	f8c8 2000 	strlt.w	r2, [r8]
 8002562:	ea33 0309 	bics.w	r3, r3, r9
 8002566:	d11b      	bne.n	80025a0 <_dtoa_r+0xb8>
 8002568:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800256a:	f242 730f 	movw	r3, #9999	; 0x270f
 800256e:	6013      	str	r3, [r2, #0]
 8002570:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002574:	4333      	orrs	r3, r6
 8002576:	f000 857a 	beq.w	800306e <_dtoa_r+0xb86>
 800257a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800257c:	b963      	cbnz	r3, 8002598 <_dtoa_r+0xb0>
 800257e:	4b9b      	ldr	r3, [pc, #620]	; (80027ec <_dtoa_r+0x304>)
 8002580:	e024      	b.n	80025cc <_dtoa_r+0xe4>
 8002582:	4b9b      	ldr	r3, [pc, #620]	; (80027f0 <_dtoa_r+0x308>)
 8002584:	9300      	str	r3, [sp, #0]
 8002586:	3308      	adds	r3, #8
 8002588:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800258a:	6013      	str	r3, [r2, #0]
 800258c:	9800      	ldr	r0, [sp, #0]
 800258e:	b015      	add	sp, #84	; 0x54
 8002590:	ecbd 8b02 	vpop	{d8}
 8002594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002598:	4b94      	ldr	r3, [pc, #592]	; (80027ec <_dtoa_r+0x304>)
 800259a:	9300      	str	r3, [sp, #0]
 800259c:	3303      	adds	r3, #3
 800259e:	e7f3      	b.n	8002588 <_dtoa_r+0xa0>
 80025a0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80025a4:	2200      	movs	r2, #0
 80025a6:	ec51 0b17 	vmov	r0, r1, d7
 80025aa:	2300      	movs	r3, #0
 80025ac:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 80025b0:	f7fe fa8a 	bl	8000ac8 <__aeabi_dcmpeq>
 80025b4:	4680      	mov	r8, r0
 80025b6:	b158      	cbz	r0, 80025d0 <_dtoa_r+0xe8>
 80025b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80025ba:	2301      	movs	r3, #1
 80025bc:	6013      	str	r3, [r2, #0]
 80025be:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80025c0:	2b00      	cmp	r3, #0
 80025c2:	f000 8551 	beq.w	8003068 <_dtoa_r+0xb80>
 80025c6:	488b      	ldr	r0, [pc, #556]	; (80027f4 <_dtoa_r+0x30c>)
 80025c8:	6018      	str	r0, [r3, #0]
 80025ca:	1e43      	subs	r3, r0, #1
 80025cc:	9300      	str	r3, [sp, #0]
 80025ce:	e7dd      	b.n	800258c <_dtoa_r+0xa4>
 80025d0:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 80025d4:	aa12      	add	r2, sp, #72	; 0x48
 80025d6:	a913      	add	r1, sp, #76	; 0x4c
 80025d8:	4620      	mov	r0, r4
 80025da:	f001 f8ad 	bl	8003738 <__d2b>
 80025de:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80025e2:	4683      	mov	fp, r0
 80025e4:	2d00      	cmp	r5, #0
 80025e6:	d07c      	beq.n	80026e2 <_dtoa_r+0x1fa>
 80025e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80025ea:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80025ee:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80025f2:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 80025f6:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 80025fa:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 80025fe:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002602:	4b7d      	ldr	r3, [pc, #500]	; (80027f8 <_dtoa_r+0x310>)
 8002604:	2200      	movs	r2, #0
 8002606:	4630      	mov	r0, r6
 8002608:	4639      	mov	r1, r7
 800260a:	f7fd fe3d 	bl	8000288 <__aeabi_dsub>
 800260e:	a36e      	add	r3, pc, #440	; (adr r3, 80027c8 <_dtoa_r+0x2e0>)
 8002610:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002614:	f7fd fff0 	bl	80005f8 <__aeabi_dmul>
 8002618:	a36d      	add	r3, pc, #436	; (adr r3, 80027d0 <_dtoa_r+0x2e8>)
 800261a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800261e:	f7fd fe35 	bl	800028c <__adddf3>
 8002622:	4606      	mov	r6, r0
 8002624:	4628      	mov	r0, r5
 8002626:	460f      	mov	r7, r1
 8002628:	f7fd ff7c 	bl	8000524 <__aeabi_i2d>
 800262c:	a36a      	add	r3, pc, #424	; (adr r3, 80027d8 <_dtoa_r+0x2f0>)
 800262e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002632:	f7fd ffe1 	bl	80005f8 <__aeabi_dmul>
 8002636:	4602      	mov	r2, r0
 8002638:	460b      	mov	r3, r1
 800263a:	4630      	mov	r0, r6
 800263c:	4639      	mov	r1, r7
 800263e:	f7fd fe25 	bl	800028c <__adddf3>
 8002642:	4606      	mov	r6, r0
 8002644:	460f      	mov	r7, r1
 8002646:	f7fe fa87 	bl	8000b58 <__aeabi_d2iz>
 800264a:	2200      	movs	r2, #0
 800264c:	4682      	mov	sl, r0
 800264e:	2300      	movs	r3, #0
 8002650:	4630      	mov	r0, r6
 8002652:	4639      	mov	r1, r7
 8002654:	f7fe fa42 	bl	8000adc <__aeabi_dcmplt>
 8002658:	b148      	cbz	r0, 800266e <_dtoa_r+0x186>
 800265a:	4650      	mov	r0, sl
 800265c:	f7fd ff62 	bl	8000524 <__aeabi_i2d>
 8002660:	4632      	mov	r2, r6
 8002662:	463b      	mov	r3, r7
 8002664:	f7fe fa30 	bl	8000ac8 <__aeabi_dcmpeq>
 8002668:	b908      	cbnz	r0, 800266e <_dtoa_r+0x186>
 800266a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 800266e:	f1ba 0f16 	cmp.w	sl, #22
 8002672:	d854      	bhi.n	800271e <_dtoa_r+0x236>
 8002674:	4b61      	ldr	r3, [pc, #388]	; (80027fc <_dtoa_r+0x314>)
 8002676:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800267a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800267e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002682:	f7fe fa2b 	bl	8000adc <__aeabi_dcmplt>
 8002686:	2800      	cmp	r0, #0
 8002688:	d04b      	beq.n	8002722 <_dtoa_r+0x23a>
 800268a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 800268e:	2300      	movs	r3, #0
 8002690:	930e      	str	r3, [sp, #56]	; 0x38
 8002692:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002694:	1b5d      	subs	r5, r3, r5
 8002696:	1e6b      	subs	r3, r5, #1
 8002698:	9304      	str	r3, [sp, #16]
 800269a:	bf43      	ittte	mi
 800269c:	2300      	movmi	r3, #0
 800269e:	f1c5 0801 	rsbmi	r8, r5, #1
 80026a2:	9304      	strmi	r3, [sp, #16]
 80026a4:	f04f 0800 	movpl.w	r8, #0
 80026a8:	f1ba 0f00 	cmp.w	sl, #0
 80026ac:	db3b      	blt.n	8002726 <_dtoa_r+0x23e>
 80026ae:	9b04      	ldr	r3, [sp, #16]
 80026b0:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80026b4:	4453      	add	r3, sl
 80026b6:	9304      	str	r3, [sp, #16]
 80026b8:	2300      	movs	r3, #0
 80026ba:	9306      	str	r3, [sp, #24]
 80026bc:	9b05      	ldr	r3, [sp, #20]
 80026be:	2b09      	cmp	r3, #9
 80026c0:	d869      	bhi.n	8002796 <_dtoa_r+0x2ae>
 80026c2:	2b05      	cmp	r3, #5
 80026c4:	bfc4      	itt	gt
 80026c6:	3b04      	subgt	r3, #4
 80026c8:	9305      	strgt	r3, [sp, #20]
 80026ca:	9b05      	ldr	r3, [sp, #20]
 80026cc:	f1a3 0302 	sub.w	r3, r3, #2
 80026d0:	bfcc      	ite	gt
 80026d2:	2500      	movgt	r5, #0
 80026d4:	2501      	movle	r5, #1
 80026d6:	2b03      	cmp	r3, #3
 80026d8:	d869      	bhi.n	80027ae <_dtoa_r+0x2c6>
 80026da:	e8df f003 	tbb	[pc, r3]
 80026de:	4e2c      	.short	0x4e2c
 80026e0:	5a4c      	.short	0x5a4c
 80026e2:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 80026e6:	441d      	add	r5, r3
 80026e8:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80026ec:	2b20      	cmp	r3, #32
 80026ee:	bfc1      	itttt	gt
 80026f0:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80026f4:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 80026f8:	fa09 f303 	lslgt.w	r3, r9, r3
 80026fc:	fa26 f000 	lsrgt.w	r0, r6, r0
 8002700:	bfda      	itte	le
 8002702:	f1c3 0320 	rsble	r3, r3, #32
 8002706:	fa06 f003 	lslle.w	r0, r6, r3
 800270a:	4318      	orrgt	r0, r3
 800270c:	f7fd fefa 	bl	8000504 <__aeabi_ui2d>
 8002710:	2301      	movs	r3, #1
 8002712:	4606      	mov	r6, r0
 8002714:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8002718:	3d01      	subs	r5, #1
 800271a:	9310      	str	r3, [sp, #64]	; 0x40
 800271c:	e771      	b.n	8002602 <_dtoa_r+0x11a>
 800271e:	2301      	movs	r3, #1
 8002720:	e7b6      	b.n	8002690 <_dtoa_r+0x1a8>
 8002722:	900e      	str	r0, [sp, #56]	; 0x38
 8002724:	e7b5      	b.n	8002692 <_dtoa_r+0x1aa>
 8002726:	f1ca 0300 	rsb	r3, sl, #0
 800272a:	9306      	str	r3, [sp, #24]
 800272c:	2300      	movs	r3, #0
 800272e:	eba8 080a 	sub.w	r8, r8, sl
 8002732:	930d      	str	r3, [sp, #52]	; 0x34
 8002734:	e7c2      	b.n	80026bc <_dtoa_r+0x1d4>
 8002736:	2300      	movs	r3, #0
 8002738:	9308      	str	r3, [sp, #32]
 800273a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800273c:	2b00      	cmp	r3, #0
 800273e:	dc39      	bgt.n	80027b4 <_dtoa_r+0x2cc>
 8002740:	f04f 0901 	mov.w	r9, #1
 8002744:	f8cd 9004 	str.w	r9, [sp, #4]
 8002748:	464b      	mov	r3, r9
 800274a:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800274e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8002750:	2200      	movs	r2, #0
 8002752:	6042      	str	r2, [r0, #4]
 8002754:	2204      	movs	r2, #4
 8002756:	f102 0614 	add.w	r6, r2, #20
 800275a:	429e      	cmp	r6, r3
 800275c:	6841      	ldr	r1, [r0, #4]
 800275e:	d92f      	bls.n	80027c0 <_dtoa_r+0x2d8>
 8002760:	4620      	mov	r0, r4
 8002762:	f000 fcc7 	bl	80030f4 <_Balloc>
 8002766:	9000      	str	r0, [sp, #0]
 8002768:	2800      	cmp	r0, #0
 800276a:	d14b      	bne.n	8002804 <_dtoa_r+0x31c>
 800276c:	4b24      	ldr	r3, [pc, #144]	; (8002800 <_dtoa_r+0x318>)
 800276e:	4602      	mov	r2, r0
 8002770:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8002774:	e6d1      	b.n	800251a <_dtoa_r+0x32>
 8002776:	2301      	movs	r3, #1
 8002778:	e7de      	b.n	8002738 <_dtoa_r+0x250>
 800277a:	2300      	movs	r3, #0
 800277c:	9308      	str	r3, [sp, #32]
 800277e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002780:	eb0a 0903 	add.w	r9, sl, r3
 8002784:	f109 0301 	add.w	r3, r9, #1
 8002788:	2b01      	cmp	r3, #1
 800278a:	9301      	str	r3, [sp, #4]
 800278c:	bfb8      	it	lt
 800278e:	2301      	movlt	r3, #1
 8002790:	e7dd      	b.n	800274e <_dtoa_r+0x266>
 8002792:	2301      	movs	r3, #1
 8002794:	e7f2      	b.n	800277c <_dtoa_r+0x294>
 8002796:	2501      	movs	r5, #1
 8002798:	2300      	movs	r3, #0
 800279a:	9305      	str	r3, [sp, #20]
 800279c:	9508      	str	r5, [sp, #32]
 800279e:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 80027a2:	2200      	movs	r2, #0
 80027a4:	f8cd 9004 	str.w	r9, [sp, #4]
 80027a8:	2312      	movs	r3, #18
 80027aa:	9209      	str	r2, [sp, #36]	; 0x24
 80027ac:	e7cf      	b.n	800274e <_dtoa_r+0x266>
 80027ae:	2301      	movs	r3, #1
 80027b0:	9308      	str	r3, [sp, #32]
 80027b2:	e7f4      	b.n	800279e <_dtoa_r+0x2b6>
 80027b4:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80027b8:	f8cd 9004 	str.w	r9, [sp, #4]
 80027bc:	464b      	mov	r3, r9
 80027be:	e7c6      	b.n	800274e <_dtoa_r+0x266>
 80027c0:	3101      	adds	r1, #1
 80027c2:	6041      	str	r1, [r0, #4]
 80027c4:	0052      	lsls	r2, r2, #1
 80027c6:	e7c6      	b.n	8002756 <_dtoa_r+0x26e>
 80027c8:	636f4361 	.word	0x636f4361
 80027cc:	3fd287a7 	.word	0x3fd287a7
 80027d0:	8b60c8b3 	.word	0x8b60c8b3
 80027d4:	3fc68a28 	.word	0x3fc68a28
 80027d8:	509f79fb 	.word	0x509f79fb
 80027dc:	3fd34413 	.word	0x3fd34413
 80027e0:	0800450d 	.word	0x0800450d
 80027e4:	08004524 	.word	0x08004524
 80027e8:	7ff00000 	.word	0x7ff00000
 80027ec:	08004509 	.word	0x08004509
 80027f0:	08004500 	.word	0x08004500
 80027f4:	080044dd 	.word	0x080044dd
 80027f8:	3ff80000 	.word	0x3ff80000
 80027fc:	08004620 	.word	0x08004620
 8002800:	08004583 	.word	0x08004583
 8002804:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002806:	9a00      	ldr	r2, [sp, #0]
 8002808:	601a      	str	r2, [r3, #0]
 800280a:	9b01      	ldr	r3, [sp, #4]
 800280c:	2b0e      	cmp	r3, #14
 800280e:	f200 80ad 	bhi.w	800296c <_dtoa_r+0x484>
 8002812:	2d00      	cmp	r5, #0
 8002814:	f000 80aa 	beq.w	800296c <_dtoa_r+0x484>
 8002818:	f1ba 0f00 	cmp.w	sl, #0
 800281c:	dd36      	ble.n	800288c <_dtoa_r+0x3a4>
 800281e:	4ac3      	ldr	r2, [pc, #780]	; (8002b2c <_dtoa_r+0x644>)
 8002820:	f00a 030f 	and.w	r3, sl, #15
 8002824:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002828:	ed93 7b00 	vldr	d7, [r3]
 800282c:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8002830:	ea4f 172a 	mov.w	r7, sl, asr #4
 8002834:	eeb0 8a47 	vmov.f32	s16, s14
 8002838:	eef0 8a67 	vmov.f32	s17, s15
 800283c:	d016      	beq.n	800286c <_dtoa_r+0x384>
 800283e:	4bbc      	ldr	r3, [pc, #752]	; (8002b30 <_dtoa_r+0x648>)
 8002840:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002844:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002848:	f7fe f800 	bl	800084c <__aeabi_ddiv>
 800284c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002850:	f007 070f 	and.w	r7, r7, #15
 8002854:	2503      	movs	r5, #3
 8002856:	4eb6      	ldr	r6, [pc, #728]	; (8002b30 <_dtoa_r+0x648>)
 8002858:	b957      	cbnz	r7, 8002870 <_dtoa_r+0x388>
 800285a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800285e:	ec53 2b18 	vmov	r2, r3, d8
 8002862:	f7fd fff3 	bl	800084c <__aeabi_ddiv>
 8002866:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800286a:	e029      	b.n	80028c0 <_dtoa_r+0x3d8>
 800286c:	2502      	movs	r5, #2
 800286e:	e7f2      	b.n	8002856 <_dtoa_r+0x36e>
 8002870:	07f9      	lsls	r1, r7, #31
 8002872:	d508      	bpl.n	8002886 <_dtoa_r+0x39e>
 8002874:	ec51 0b18 	vmov	r0, r1, d8
 8002878:	e9d6 2300 	ldrd	r2, r3, [r6]
 800287c:	f7fd febc 	bl	80005f8 <__aeabi_dmul>
 8002880:	ec41 0b18 	vmov	d8, r0, r1
 8002884:	3501      	adds	r5, #1
 8002886:	107f      	asrs	r7, r7, #1
 8002888:	3608      	adds	r6, #8
 800288a:	e7e5      	b.n	8002858 <_dtoa_r+0x370>
 800288c:	f000 80a6 	beq.w	80029dc <_dtoa_r+0x4f4>
 8002890:	f1ca 0600 	rsb	r6, sl, #0
 8002894:	4ba5      	ldr	r3, [pc, #660]	; (8002b2c <_dtoa_r+0x644>)
 8002896:	4fa6      	ldr	r7, [pc, #664]	; (8002b30 <_dtoa_r+0x648>)
 8002898:	f006 020f 	and.w	r2, r6, #15
 800289c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80028a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028a4:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80028a8:	f7fd fea6 	bl	80005f8 <__aeabi_dmul>
 80028ac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80028b0:	1136      	asrs	r6, r6, #4
 80028b2:	2300      	movs	r3, #0
 80028b4:	2502      	movs	r5, #2
 80028b6:	2e00      	cmp	r6, #0
 80028b8:	f040 8085 	bne.w	80029c6 <_dtoa_r+0x4de>
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d1d2      	bne.n	8002866 <_dtoa_r+0x37e>
 80028c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	f000 808c 	beq.w	80029e0 <_dtoa_r+0x4f8>
 80028c8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80028cc:	4b99      	ldr	r3, [pc, #612]	; (8002b34 <_dtoa_r+0x64c>)
 80028ce:	2200      	movs	r2, #0
 80028d0:	4630      	mov	r0, r6
 80028d2:	4639      	mov	r1, r7
 80028d4:	f7fe f902 	bl	8000adc <__aeabi_dcmplt>
 80028d8:	2800      	cmp	r0, #0
 80028da:	f000 8081 	beq.w	80029e0 <_dtoa_r+0x4f8>
 80028de:	9b01      	ldr	r3, [sp, #4]
 80028e0:	2b00      	cmp	r3, #0
 80028e2:	d07d      	beq.n	80029e0 <_dtoa_r+0x4f8>
 80028e4:	f1b9 0f00 	cmp.w	r9, #0
 80028e8:	dd3c      	ble.n	8002964 <_dtoa_r+0x47c>
 80028ea:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
 80028ee:	9307      	str	r3, [sp, #28]
 80028f0:	2200      	movs	r2, #0
 80028f2:	4b91      	ldr	r3, [pc, #580]	; (8002b38 <_dtoa_r+0x650>)
 80028f4:	4630      	mov	r0, r6
 80028f6:	4639      	mov	r1, r7
 80028f8:	f7fd fe7e 	bl	80005f8 <__aeabi_dmul>
 80028fc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002900:	3501      	adds	r5, #1
 8002902:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 8002906:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800290a:	4628      	mov	r0, r5
 800290c:	f7fd fe0a 	bl	8000524 <__aeabi_i2d>
 8002910:	4632      	mov	r2, r6
 8002912:	463b      	mov	r3, r7
 8002914:	f7fd fe70 	bl	80005f8 <__aeabi_dmul>
 8002918:	4b88      	ldr	r3, [pc, #544]	; (8002b3c <_dtoa_r+0x654>)
 800291a:	2200      	movs	r2, #0
 800291c:	f7fd fcb6 	bl	800028c <__adddf3>
 8002920:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8002924:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002928:	9303      	str	r3, [sp, #12]
 800292a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800292c:	2b00      	cmp	r3, #0
 800292e:	d15c      	bne.n	80029ea <_dtoa_r+0x502>
 8002930:	4b83      	ldr	r3, [pc, #524]	; (8002b40 <_dtoa_r+0x658>)
 8002932:	2200      	movs	r2, #0
 8002934:	4630      	mov	r0, r6
 8002936:	4639      	mov	r1, r7
 8002938:	f7fd fca6 	bl	8000288 <__aeabi_dsub>
 800293c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002940:	4606      	mov	r6, r0
 8002942:	460f      	mov	r7, r1
 8002944:	f7fe f8e8 	bl	8000b18 <__aeabi_dcmpgt>
 8002948:	2800      	cmp	r0, #0
 800294a:	f040 8296 	bne.w	8002e7a <_dtoa_r+0x992>
 800294e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002952:	4630      	mov	r0, r6
 8002954:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002958:	4639      	mov	r1, r7
 800295a:	f7fe f8bf 	bl	8000adc <__aeabi_dcmplt>
 800295e:	2800      	cmp	r0, #0
 8002960:	f040 8288 	bne.w	8002e74 <_dtoa_r+0x98c>
 8002964:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002968:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800296c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800296e:	2b00      	cmp	r3, #0
 8002970:	f2c0 8158 	blt.w	8002c24 <_dtoa_r+0x73c>
 8002974:	f1ba 0f0e 	cmp.w	sl, #14
 8002978:	f300 8154 	bgt.w	8002c24 <_dtoa_r+0x73c>
 800297c:	4b6b      	ldr	r3, [pc, #428]	; (8002b2c <_dtoa_r+0x644>)
 800297e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8002982:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002988:	2b00      	cmp	r3, #0
 800298a:	f280 80e3 	bge.w	8002b54 <_dtoa_r+0x66c>
 800298e:	9b01      	ldr	r3, [sp, #4]
 8002990:	2b00      	cmp	r3, #0
 8002992:	f300 80df 	bgt.w	8002b54 <_dtoa_r+0x66c>
 8002996:	f040 826d 	bne.w	8002e74 <_dtoa_r+0x98c>
 800299a:	4b69      	ldr	r3, [pc, #420]	; (8002b40 <_dtoa_r+0x658>)
 800299c:	2200      	movs	r2, #0
 800299e:	4640      	mov	r0, r8
 80029a0:	4649      	mov	r1, r9
 80029a2:	f7fd fe29 	bl	80005f8 <__aeabi_dmul>
 80029a6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80029aa:	f7fe f8ab 	bl	8000b04 <__aeabi_dcmpge>
 80029ae:	9e01      	ldr	r6, [sp, #4]
 80029b0:	4637      	mov	r7, r6
 80029b2:	2800      	cmp	r0, #0
 80029b4:	f040 8243 	bne.w	8002e3e <_dtoa_r+0x956>
 80029b8:	9d00      	ldr	r5, [sp, #0]
 80029ba:	2331      	movs	r3, #49	; 0x31
 80029bc:	f805 3b01 	strb.w	r3, [r5], #1
 80029c0:	f10a 0a01 	add.w	sl, sl, #1
 80029c4:	e23f      	b.n	8002e46 <_dtoa_r+0x95e>
 80029c6:	07f2      	lsls	r2, r6, #31
 80029c8:	d505      	bpl.n	80029d6 <_dtoa_r+0x4ee>
 80029ca:	e9d7 2300 	ldrd	r2, r3, [r7]
 80029ce:	f7fd fe13 	bl	80005f8 <__aeabi_dmul>
 80029d2:	3501      	adds	r5, #1
 80029d4:	2301      	movs	r3, #1
 80029d6:	1076      	asrs	r6, r6, #1
 80029d8:	3708      	adds	r7, #8
 80029da:	e76c      	b.n	80028b6 <_dtoa_r+0x3ce>
 80029dc:	2502      	movs	r5, #2
 80029de:	e76f      	b.n	80028c0 <_dtoa_r+0x3d8>
 80029e0:	9b01      	ldr	r3, [sp, #4]
 80029e2:	f8cd a01c 	str.w	sl, [sp, #28]
 80029e6:	930c      	str	r3, [sp, #48]	; 0x30
 80029e8:	e78d      	b.n	8002906 <_dtoa_r+0x41e>
 80029ea:	9900      	ldr	r1, [sp, #0]
 80029ec:	980c      	ldr	r0, [sp, #48]	; 0x30
 80029ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80029f0:	4b4e      	ldr	r3, [pc, #312]	; (8002b2c <_dtoa_r+0x644>)
 80029f2:	ed9d 7b02 	vldr	d7, [sp, #8]
 80029f6:	4401      	add	r1, r0
 80029f8:	9102      	str	r1, [sp, #8]
 80029fa:	9908      	ldr	r1, [sp, #32]
 80029fc:	eeb0 8a47 	vmov.f32	s16, s14
 8002a00:	eef0 8a67 	vmov.f32	s17, s15
 8002a04:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002a08:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002a0c:	2900      	cmp	r1, #0
 8002a0e:	d045      	beq.n	8002a9c <_dtoa_r+0x5b4>
 8002a10:	494c      	ldr	r1, [pc, #304]	; (8002b44 <_dtoa_r+0x65c>)
 8002a12:	2000      	movs	r0, #0
 8002a14:	f7fd ff1a 	bl	800084c <__aeabi_ddiv>
 8002a18:	ec53 2b18 	vmov	r2, r3, d8
 8002a1c:	f7fd fc34 	bl	8000288 <__aeabi_dsub>
 8002a20:	9d00      	ldr	r5, [sp, #0]
 8002a22:	ec41 0b18 	vmov	d8, r0, r1
 8002a26:	4639      	mov	r1, r7
 8002a28:	4630      	mov	r0, r6
 8002a2a:	f7fe f895 	bl	8000b58 <__aeabi_d2iz>
 8002a2e:	900c      	str	r0, [sp, #48]	; 0x30
 8002a30:	f7fd fd78 	bl	8000524 <__aeabi_i2d>
 8002a34:	4602      	mov	r2, r0
 8002a36:	460b      	mov	r3, r1
 8002a38:	4630      	mov	r0, r6
 8002a3a:	4639      	mov	r1, r7
 8002a3c:	f7fd fc24 	bl	8000288 <__aeabi_dsub>
 8002a40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002a42:	3330      	adds	r3, #48	; 0x30
 8002a44:	f805 3b01 	strb.w	r3, [r5], #1
 8002a48:	ec53 2b18 	vmov	r2, r3, d8
 8002a4c:	4606      	mov	r6, r0
 8002a4e:	460f      	mov	r7, r1
 8002a50:	f7fe f844 	bl	8000adc <__aeabi_dcmplt>
 8002a54:	2800      	cmp	r0, #0
 8002a56:	d165      	bne.n	8002b24 <_dtoa_r+0x63c>
 8002a58:	4632      	mov	r2, r6
 8002a5a:	463b      	mov	r3, r7
 8002a5c:	4935      	ldr	r1, [pc, #212]	; (8002b34 <_dtoa_r+0x64c>)
 8002a5e:	2000      	movs	r0, #0
 8002a60:	f7fd fc12 	bl	8000288 <__aeabi_dsub>
 8002a64:	ec53 2b18 	vmov	r2, r3, d8
 8002a68:	f7fe f838 	bl	8000adc <__aeabi_dcmplt>
 8002a6c:	2800      	cmp	r0, #0
 8002a6e:	f040 80b9 	bne.w	8002be4 <_dtoa_r+0x6fc>
 8002a72:	9b02      	ldr	r3, [sp, #8]
 8002a74:	429d      	cmp	r5, r3
 8002a76:	f43f af75 	beq.w	8002964 <_dtoa_r+0x47c>
 8002a7a:	4b2f      	ldr	r3, [pc, #188]	; (8002b38 <_dtoa_r+0x650>)
 8002a7c:	ec51 0b18 	vmov	r0, r1, d8
 8002a80:	2200      	movs	r2, #0
 8002a82:	f7fd fdb9 	bl	80005f8 <__aeabi_dmul>
 8002a86:	4b2c      	ldr	r3, [pc, #176]	; (8002b38 <_dtoa_r+0x650>)
 8002a88:	ec41 0b18 	vmov	d8, r0, r1
 8002a8c:	2200      	movs	r2, #0
 8002a8e:	4630      	mov	r0, r6
 8002a90:	4639      	mov	r1, r7
 8002a92:	f7fd fdb1 	bl	80005f8 <__aeabi_dmul>
 8002a96:	4606      	mov	r6, r0
 8002a98:	460f      	mov	r7, r1
 8002a9a:	e7c4      	b.n	8002a26 <_dtoa_r+0x53e>
 8002a9c:	ec51 0b17 	vmov	r0, r1, d7
 8002aa0:	f7fd fdaa 	bl	80005f8 <__aeabi_dmul>
 8002aa4:	9b02      	ldr	r3, [sp, #8]
 8002aa6:	9d00      	ldr	r5, [sp, #0]
 8002aa8:	930c      	str	r3, [sp, #48]	; 0x30
 8002aaa:	ec41 0b18 	vmov	d8, r0, r1
 8002aae:	4639      	mov	r1, r7
 8002ab0:	4630      	mov	r0, r6
 8002ab2:	f7fe f851 	bl	8000b58 <__aeabi_d2iz>
 8002ab6:	9011      	str	r0, [sp, #68]	; 0x44
 8002ab8:	f7fd fd34 	bl	8000524 <__aeabi_i2d>
 8002abc:	4602      	mov	r2, r0
 8002abe:	460b      	mov	r3, r1
 8002ac0:	4630      	mov	r0, r6
 8002ac2:	4639      	mov	r1, r7
 8002ac4:	f7fd fbe0 	bl	8000288 <__aeabi_dsub>
 8002ac8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002aca:	3330      	adds	r3, #48	; 0x30
 8002acc:	f805 3b01 	strb.w	r3, [r5], #1
 8002ad0:	9b02      	ldr	r3, [sp, #8]
 8002ad2:	429d      	cmp	r5, r3
 8002ad4:	4606      	mov	r6, r0
 8002ad6:	460f      	mov	r7, r1
 8002ad8:	f04f 0200 	mov.w	r2, #0
 8002adc:	d134      	bne.n	8002b48 <_dtoa_r+0x660>
 8002ade:	4b19      	ldr	r3, [pc, #100]	; (8002b44 <_dtoa_r+0x65c>)
 8002ae0:	ec51 0b18 	vmov	r0, r1, d8
 8002ae4:	f7fd fbd2 	bl	800028c <__adddf3>
 8002ae8:	4602      	mov	r2, r0
 8002aea:	460b      	mov	r3, r1
 8002aec:	4630      	mov	r0, r6
 8002aee:	4639      	mov	r1, r7
 8002af0:	f7fe f812 	bl	8000b18 <__aeabi_dcmpgt>
 8002af4:	2800      	cmp	r0, #0
 8002af6:	d175      	bne.n	8002be4 <_dtoa_r+0x6fc>
 8002af8:	ec53 2b18 	vmov	r2, r3, d8
 8002afc:	4911      	ldr	r1, [pc, #68]	; (8002b44 <_dtoa_r+0x65c>)
 8002afe:	2000      	movs	r0, #0
 8002b00:	f7fd fbc2 	bl	8000288 <__aeabi_dsub>
 8002b04:	4602      	mov	r2, r0
 8002b06:	460b      	mov	r3, r1
 8002b08:	4630      	mov	r0, r6
 8002b0a:	4639      	mov	r1, r7
 8002b0c:	f7fd ffe6 	bl	8000adc <__aeabi_dcmplt>
 8002b10:	2800      	cmp	r0, #0
 8002b12:	f43f af27 	beq.w	8002964 <_dtoa_r+0x47c>
 8002b16:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002b18:	1e6b      	subs	r3, r5, #1
 8002b1a:	930c      	str	r3, [sp, #48]	; 0x30
 8002b1c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002b20:	2b30      	cmp	r3, #48	; 0x30
 8002b22:	d0f8      	beq.n	8002b16 <_dtoa_r+0x62e>
 8002b24:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8002b28:	e04a      	b.n	8002bc0 <_dtoa_r+0x6d8>
 8002b2a:	bf00      	nop
 8002b2c:	08004620 	.word	0x08004620
 8002b30:	080045f8 	.word	0x080045f8
 8002b34:	3ff00000 	.word	0x3ff00000
 8002b38:	40240000 	.word	0x40240000
 8002b3c:	401c0000 	.word	0x401c0000
 8002b40:	40140000 	.word	0x40140000
 8002b44:	3fe00000 	.word	0x3fe00000
 8002b48:	4baf      	ldr	r3, [pc, #700]	; (8002e08 <_dtoa_r+0x920>)
 8002b4a:	f7fd fd55 	bl	80005f8 <__aeabi_dmul>
 8002b4e:	4606      	mov	r6, r0
 8002b50:	460f      	mov	r7, r1
 8002b52:	e7ac      	b.n	8002aae <_dtoa_r+0x5c6>
 8002b54:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002b58:	9d00      	ldr	r5, [sp, #0]
 8002b5a:	4642      	mov	r2, r8
 8002b5c:	464b      	mov	r3, r9
 8002b5e:	4630      	mov	r0, r6
 8002b60:	4639      	mov	r1, r7
 8002b62:	f7fd fe73 	bl	800084c <__aeabi_ddiv>
 8002b66:	f7fd fff7 	bl	8000b58 <__aeabi_d2iz>
 8002b6a:	9002      	str	r0, [sp, #8]
 8002b6c:	f7fd fcda 	bl	8000524 <__aeabi_i2d>
 8002b70:	4642      	mov	r2, r8
 8002b72:	464b      	mov	r3, r9
 8002b74:	f7fd fd40 	bl	80005f8 <__aeabi_dmul>
 8002b78:	4602      	mov	r2, r0
 8002b7a:	460b      	mov	r3, r1
 8002b7c:	4630      	mov	r0, r6
 8002b7e:	4639      	mov	r1, r7
 8002b80:	f7fd fb82 	bl	8000288 <__aeabi_dsub>
 8002b84:	9e02      	ldr	r6, [sp, #8]
 8002b86:	9f01      	ldr	r7, [sp, #4]
 8002b88:	3630      	adds	r6, #48	; 0x30
 8002b8a:	f805 6b01 	strb.w	r6, [r5], #1
 8002b8e:	9e00      	ldr	r6, [sp, #0]
 8002b90:	1bae      	subs	r6, r5, r6
 8002b92:	42b7      	cmp	r7, r6
 8002b94:	4602      	mov	r2, r0
 8002b96:	460b      	mov	r3, r1
 8002b98:	d137      	bne.n	8002c0a <_dtoa_r+0x722>
 8002b9a:	f7fd fb77 	bl	800028c <__adddf3>
 8002b9e:	4642      	mov	r2, r8
 8002ba0:	464b      	mov	r3, r9
 8002ba2:	4606      	mov	r6, r0
 8002ba4:	460f      	mov	r7, r1
 8002ba6:	f7fd ffb7 	bl	8000b18 <__aeabi_dcmpgt>
 8002baa:	b9c8      	cbnz	r0, 8002be0 <_dtoa_r+0x6f8>
 8002bac:	4642      	mov	r2, r8
 8002bae:	464b      	mov	r3, r9
 8002bb0:	4630      	mov	r0, r6
 8002bb2:	4639      	mov	r1, r7
 8002bb4:	f7fd ff88 	bl	8000ac8 <__aeabi_dcmpeq>
 8002bb8:	b110      	cbz	r0, 8002bc0 <_dtoa_r+0x6d8>
 8002bba:	9b02      	ldr	r3, [sp, #8]
 8002bbc:	07d9      	lsls	r1, r3, #31
 8002bbe:	d40f      	bmi.n	8002be0 <_dtoa_r+0x6f8>
 8002bc0:	4620      	mov	r0, r4
 8002bc2:	4659      	mov	r1, fp
 8002bc4:	f000 fad6 	bl	8003174 <_Bfree>
 8002bc8:	2300      	movs	r3, #0
 8002bca:	702b      	strb	r3, [r5, #0]
 8002bcc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002bce:	f10a 0001 	add.w	r0, sl, #1
 8002bd2:	6018      	str	r0, [r3, #0]
 8002bd4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002bd6:	2b00      	cmp	r3, #0
 8002bd8:	f43f acd8 	beq.w	800258c <_dtoa_r+0xa4>
 8002bdc:	601d      	str	r5, [r3, #0]
 8002bde:	e4d5      	b.n	800258c <_dtoa_r+0xa4>
 8002be0:	f8cd a01c 	str.w	sl, [sp, #28]
 8002be4:	462b      	mov	r3, r5
 8002be6:	461d      	mov	r5, r3
 8002be8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002bec:	2a39      	cmp	r2, #57	; 0x39
 8002bee:	d108      	bne.n	8002c02 <_dtoa_r+0x71a>
 8002bf0:	9a00      	ldr	r2, [sp, #0]
 8002bf2:	429a      	cmp	r2, r3
 8002bf4:	d1f7      	bne.n	8002be6 <_dtoa_r+0x6fe>
 8002bf6:	9a07      	ldr	r2, [sp, #28]
 8002bf8:	9900      	ldr	r1, [sp, #0]
 8002bfa:	3201      	adds	r2, #1
 8002bfc:	9207      	str	r2, [sp, #28]
 8002bfe:	2230      	movs	r2, #48	; 0x30
 8002c00:	700a      	strb	r2, [r1, #0]
 8002c02:	781a      	ldrb	r2, [r3, #0]
 8002c04:	3201      	adds	r2, #1
 8002c06:	701a      	strb	r2, [r3, #0]
 8002c08:	e78c      	b.n	8002b24 <_dtoa_r+0x63c>
 8002c0a:	4b7f      	ldr	r3, [pc, #508]	; (8002e08 <_dtoa_r+0x920>)
 8002c0c:	2200      	movs	r2, #0
 8002c0e:	f7fd fcf3 	bl	80005f8 <__aeabi_dmul>
 8002c12:	2200      	movs	r2, #0
 8002c14:	2300      	movs	r3, #0
 8002c16:	4606      	mov	r6, r0
 8002c18:	460f      	mov	r7, r1
 8002c1a:	f7fd ff55 	bl	8000ac8 <__aeabi_dcmpeq>
 8002c1e:	2800      	cmp	r0, #0
 8002c20:	d09b      	beq.n	8002b5a <_dtoa_r+0x672>
 8002c22:	e7cd      	b.n	8002bc0 <_dtoa_r+0x6d8>
 8002c24:	9a08      	ldr	r2, [sp, #32]
 8002c26:	2a00      	cmp	r2, #0
 8002c28:	f000 80c4 	beq.w	8002db4 <_dtoa_r+0x8cc>
 8002c2c:	9a05      	ldr	r2, [sp, #20]
 8002c2e:	2a01      	cmp	r2, #1
 8002c30:	f300 80a8 	bgt.w	8002d84 <_dtoa_r+0x89c>
 8002c34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8002c36:	2a00      	cmp	r2, #0
 8002c38:	f000 80a0 	beq.w	8002d7c <_dtoa_r+0x894>
 8002c3c:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002c40:	9e06      	ldr	r6, [sp, #24]
 8002c42:	4645      	mov	r5, r8
 8002c44:	9a04      	ldr	r2, [sp, #16]
 8002c46:	2101      	movs	r1, #1
 8002c48:	441a      	add	r2, r3
 8002c4a:	4620      	mov	r0, r4
 8002c4c:	4498      	add	r8, r3
 8002c4e:	9204      	str	r2, [sp, #16]
 8002c50:	f000 fb4c 	bl	80032ec <__i2b>
 8002c54:	4607      	mov	r7, r0
 8002c56:	2d00      	cmp	r5, #0
 8002c58:	dd0b      	ble.n	8002c72 <_dtoa_r+0x78a>
 8002c5a:	9b04      	ldr	r3, [sp, #16]
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	dd08      	ble.n	8002c72 <_dtoa_r+0x78a>
 8002c60:	42ab      	cmp	r3, r5
 8002c62:	9a04      	ldr	r2, [sp, #16]
 8002c64:	bfa8      	it	ge
 8002c66:	462b      	movge	r3, r5
 8002c68:	eba8 0803 	sub.w	r8, r8, r3
 8002c6c:	1aed      	subs	r5, r5, r3
 8002c6e:	1ad3      	subs	r3, r2, r3
 8002c70:	9304      	str	r3, [sp, #16]
 8002c72:	9b06      	ldr	r3, [sp, #24]
 8002c74:	b1fb      	cbz	r3, 8002cb6 <_dtoa_r+0x7ce>
 8002c76:	9b08      	ldr	r3, [sp, #32]
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	f000 809f 	beq.w	8002dbc <_dtoa_r+0x8d4>
 8002c7e:	2e00      	cmp	r6, #0
 8002c80:	dd11      	ble.n	8002ca6 <_dtoa_r+0x7be>
 8002c82:	4639      	mov	r1, r7
 8002c84:	4632      	mov	r2, r6
 8002c86:	4620      	mov	r0, r4
 8002c88:	f000 fbec 	bl	8003464 <__pow5mult>
 8002c8c:	465a      	mov	r2, fp
 8002c8e:	4601      	mov	r1, r0
 8002c90:	4607      	mov	r7, r0
 8002c92:	4620      	mov	r0, r4
 8002c94:	f000 fb40 	bl	8003318 <__multiply>
 8002c98:	4659      	mov	r1, fp
 8002c9a:	9007      	str	r0, [sp, #28]
 8002c9c:	4620      	mov	r0, r4
 8002c9e:	f000 fa69 	bl	8003174 <_Bfree>
 8002ca2:	9b07      	ldr	r3, [sp, #28]
 8002ca4:	469b      	mov	fp, r3
 8002ca6:	9b06      	ldr	r3, [sp, #24]
 8002ca8:	1b9a      	subs	r2, r3, r6
 8002caa:	d004      	beq.n	8002cb6 <_dtoa_r+0x7ce>
 8002cac:	4659      	mov	r1, fp
 8002cae:	4620      	mov	r0, r4
 8002cb0:	f000 fbd8 	bl	8003464 <__pow5mult>
 8002cb4:	4683      	mov	fp, r0
 8002cb6:	2101      	movs	r1, #1
 8002cb8:	4620      	mov	r0, r4
 8002cba:	f000 fb17 	bl	80032ec <__i2b>
 8002cbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002cc0:	2b00      	cmp	r3, #0
 8002cc2:	4606      	mov	r6, r0
 8002cc4:	dd7c      	ble.n	8002dc0 <_dtoa_r+0x8d8>
 8002cc6:	461a      	mov	r2, r3
 8002cc8:	4601      	mov	r1, r0
 8002cca:	4620      	mov	r0, r4
 8002ccc:	f000 fbca 	bl	8003464 <__pow5mult>
 8002cd0:	9b05      	ldr	r3, [sp, #20]
 8002cd2:	2b01      	cmp	r3, #1
 8002cd4:	4606      	mov	r6, r0
 8002cd6:	dd76      	ble.n	8002dc6 <_dtoa_r+0x8de>
 8002cd8:	2300      	movs	r3, #0
 8002cda:	9306      	str	r3, [sp, #24]
 8002cdc:	6933      	ldr	r3, [r6, #16]
 8002cde:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002ce2:	6918      	ldr	r0, [r3, #16]
 8002ce4:	f000 fab2 	bl	800324c <__hi0bits>
 8002ce8:	f1c0 0020 	rsb	r0, r0, #32
 8002cec:	9b04      	ldr	r3, [sp, #16]
 8002cee:	4418      	add	r0, r3
 8002cf0:	f010 001f 	ands.w	r0, r0, #31
 8002cf4:	f000 8086 	beq.w	8002e04 <_dtoa_r+0x91c>
 8002cf8:	f1c0 0320 	rsb	r3, r0, #32
 8002cfc:	2b04      	cmp	r3, #4
 8002cfe:	dd7f      	ble.n	8002e00 <_dtoa_r+0x918>
 8002d00:	f1c0 001c 	rsb	r0, r0, #28
 8002d04:	9b04      	ldr	r3, [sp, #16]
 8002d06:	4403      	add	r3, r0
 8002d08:	4480      	add	r8, r0
 8002d0a:	4405      	add	r5, r0
 8002d0c:	9304      	str	r3, [sp, #16]
 8002d0e:	f1b8 0f00 	cmp.w	r8, #0
 8002d12:	dd05      	ble.n	8002d20 <_dtoa_r+0x838>
 8002d14:	4659      	mov	r1, fp
 8002d16:	4642      	mov	r2, r8
 8002d18:	4620      	mov	r0, r4
 8002d1a:	f000 fbfd 	bl	8003518 <__lshift>
 8002d1e:	4683      	mov	fp, r0
 8002d20:	9b04      	ldr	r3, [sp, #16]
 8002d22:	2b00      	cmp	r3, #0
 8002d24:	dd05      	ble.n	8002d32 <_dtoa_r+0x84a>
 8002d26:	4631      	mov	r1, r6
 8002d28:	461a      	mov	r2, r3
 8002d2a:	4620      	mov	r0, r4
 8002d2c:	f000 fbf4 	bl	8003518 <__lshift>
 8002d30:	4606      	mov	r6, r0
 8002d32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002d34:	2b00      	cmp	r3, #0
 8002d36:	d069      	beq.n	8002e0c <_dtoa_r+0x924>
 8002d38:	4631      	mov	r1, r6
 8002d3a:	4658      	mov	r0, fp
 8002d3c:	f000 fc58 	bl	80035f0 <__mcmp>
 8002d40:	2800      	cmp	r0, #0
 8002d42:	da63      	bge.n	8002e0c <_dtoa_r+0x924>
 8002d44:	2300      	movs	r3, #0
 8002d46:	4659      	mov	r1, fp
 8002d48:	220a      	movs	r2, #10
 8002d4a:	4620      	mov	r0, r4
 8002d4c:	f000 fa34 	bl	80031b8 <__multadd>
 8002d50:	9b08      	ldr	r3, [sp, #32]
 8002d52:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8002d56:	4683      	mov	fp, r0
 8002d58:	2b00      	cmp	r3, #0
 8002d5a:	f000 818f 	beq.w	800307c <_dtoa_r+0xb94>
 8002d5e:	4639      	mov	r1, r7
 8002d60:	2300      	movs	r3, #0
 8002d62:	220a      	movs	r2, #10
 8002d64:	4620      	mov	r0, r4
 8002d66:	f000 fa27 	bl	80031b8 <__multadd>
 8002d6a:	f1b9 0f00 	cmp.w	r9, #0
 8002d6e:	4607      	mov	r7, r0
 8002d70:	f300 808e 	bgt.w	8002e90 <_dtoa_r+0x9a8>
 8002d74:	9b05      	ldr	r3, [sp, #20]
 8002d76:	2b02      	cmp	r3, #2
 8002d78:	dc50      	bgt.n	8002e1c <_dtoa_r+0x934>
 8002d7a:	e089      	b.n	8002e90 <_dtoa_r+0x9a8>
 8002d7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002d7e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002d82:	e75d      	b.n	8002c40 <_dtoa_r+0x758>
 8002d84:	9b01      	ldr	r3, [sp, #4]
 8002d86:	1e5e      	subs	r6, r3, #1
 8002d88:	9b06      	ldr	r3, [sp, #24]
 8002d8a:	42b3      	cmp	r3, r6
 8002d8c:	bfbf      	itttt	lt
 8002d8e:	9b06      	ldrlt	r3, [sp, #24]
 8002d90:	9606      	strlt	r6, [sp, #24]
 8002d92:	1af2      	sublt	r2, r6, r3
 8002d94:	9b0d      	ldrlt	r3, [sp, #52]	; 0x34
 8002d96:	bfb6      	itet	lt
 8002d98:	189b      	addlt	r3, r3, r2
 8002d9a:	1b9e      	subge	r6, r3, r6
 8002d9c:	930d      	strlt	r3, [sp, #52]	; 0x34
 8002d9e:	9b01      	ldr	r3, [sp, #4]
 8002da0:	bfb8      	it	lt
 8002da2:	2600      	movlt	r6, #0
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	bfb5      	itete	lt
 8002da8:	eba8 0503 	sublt.w	r5, r8, r3
 8002dac:	9b01      	ldrge	r3, [sp, #4]
 8002dae:	2300      	movlt	r3, #0
 8002db0:	4645      	movge	r5, r8
 8002db2:	e747      	b.n	8002c44 <_dtoa_r+0x75c>
 8002db4:	9e06      	ldr	r6, [sp, #24]
 8002db6:	9f08      	ldr	r7, [sp, #32]
 8002db8:	4645      	mov	r5, r8
 8002dba:	e74c      	b.n	8002c56 <_dtoa_r+0x76e>
 8002dbc:	9a06      	ldr	r2, [sp, #24]
 8002dbe:	e775      	b.n	8002cac <_dtoa_r+0x7c4>
 8002dc0:	9b05      	ldr	r3, [sp, #20]
 8002dc2:	2b01      	cmp	r3, #1
 8002dc4:	dc18      	bgt.n	8002df8 <_dtoa_r+0x910>
 8002dc6:	9b02      	ldr	r3, [sp, #8]
 8002dc8:	b9b3      	cbnz	r3, 8002df8 <_dtoa_r+0x910>
 8002dca:	9b03      	ldr	r3, [sp, #12]
 8002dcc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002dd0:	b9a3      	cbnz	r3, 8002dfc <_dtoa_r+0x914>
 8002dd2:	9b03      	ldr	r3, [sp, #12]
 8002dd4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002dd8:	0d1b      	lsrs	r3, r3, #20
 8002dda:	051b      	lsls	r3, r3, #20
 8002ddc:	b12b      	cbz	r3, 8002dea <_dtoa_r+0x902>
 8002dde:	9b04      	ldr	r3, [sp, #16]
 8002de0:	3301      	adds	r3, #1
 8002de2:	9304      	str	r3, [sp, #16]
 8002de4:	f108 0801 	add.w	r8, r8, #1
 8002de8:	2301      	movs	r3, #1
 8002dea:	9306      	str	r3, [sp, #24]
 8002dec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	f47f af74 	bne.w	8002cdc <_dtoa_r+0x7f4>
 8002df4:	2001      	movs	r0, #1
 8002df6:	e779      	b.n	8002cec <_dtoa_r+0x804>
 8002df8:	2300      	movs	r3, #0
 8002dfa:	e7f6      	b.n	8002dea <_dtoa_r+0x902>
 8002dfc:	9b02      	ldr	r3, [sp, #8]
 8002dfe:	e7f4      	b.n	8002dea <_dtoa_r+0x902>
 8002e00:	d085      	beq.n	8002d0e <_dtoa_r+0x826>
 8002e02:	4618      	mov	r0, r3
 8002e04:	301c      	adds	r0, #28
 8002e06:	e77d      	b.n	8002d04 <_dtoa_r+0x81c>
 8002e08:	40240000 	.word	0x40240000
 8002e0c:	9b01      	ldr	r3, [sp, #4]
 8002e0e:	2b00      	cmp	r3, #0
 8002e10:	dc38      	bgt.n	8002e84 <_dtoa_r+0x99c>
 8002e12:	9b05      	ldr	r3, [sp, #20]
 8002e14:	2b02      	cmp	r3, #2
 8002e16:	dd35      	ble.n	8002e84 <_dtoa_r+0x99c>
 8002e18:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8002e1c:	f1b9 0f00 	cmp.w	r9, #0
 8002e20:	d10d      	bne.n	8002e3e <_dtoa_r+0x956>
 8002e22:	4631      	mov	r1, r6
 8002e24:	464b      	mov	r3, r9
 8002e26:	2205      	movs	r2, #5
 8002e28:	4620      	mov	r0, r4
 8002e2a:	f000 f9c5 	bl	80031b8 <__multadd>
 8002e2e:	4601      	mov	r1, r0
 8002e30:	4606      	mov	r6, r0
 8002e32:	4658      	mov	r0, fp
 8002e34:	f000 fbdc 	bl	80035f0 <__mcmp>
 8002e38:	2800      	cmp	r0, #0
 8002e3a:	f73f adbd 	bgt.w	80029b8 <_dtoa_r+0x4d0>
 8002e3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002e40:	9d00      	ldr	r5, [sp, #0]
 8002e42:	ea6f 0a03 	mvn.w	sl, r3
 8002e46:	f04f 0800 	mov.w	r8, #0
 8002e4a:	4631      	mov	r1, r6
 8002e4c:	4620      	mov	r0, r4
 8002e4e:	f000 f991 	bl	8003174 <_Bfree>
 8002e52:	2f00      	cmp	r7, #0
 8002e54:	f43f aeb4 	beq.w	8002bc0 <_dtoa_r+0x6d8>
 8002e58:	f1b8 0f00 	cmp.w	r8, #0
 8002e5c:	d005      	beq.n	8002e6a <_dtoa_r+0x982>
 8002e5e:	45b8      	cmp	r8, r7
 8002e60:	d003      	beq.n	8002e6a <_dtoa_r+0x982>
 8002e62:	4641      	mov	r1, r8
 8002e64:	4620      	mov	r0, r4
 8002e66:	f000 f985 	bl	8003174 <_Bfree>
 8002e6a:	4639      	mov	r1, r7
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	f000 f981 	bl	8003174 <_Bfree>
 8002e72:	e6a5      	b.n	8002bc0 <_dtoa_r+0x6d8>
 8002e74:	2600      	movs	r6, #0
 8002e76:	4637      	mov	r7, r6
 8002e78:	e7e1      	b.n	8002e3e <_dtoa_r+0x956>
 8002e7a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8002e7c:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8002e80:	4637      	mov	r7, r6
 8002e82:	e599      	b.n	80029b8 <_dtoa_r+0x4d0>
 8002e84:	9b08      	ldr	r3, [sp, #32]
 8002e86:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	f000 80fd 	beq.w	800308a <_dtoa_r+0xba2>
 8002e90:	2d00      	cmp	r5, #0
 8002e92:	dd05      	ble.n	8002ea0 <_dtoa_r+0x9b8>
 8002e94:	4639      	mov	r1, r7
 8002e96:	462a      	mov	r2, r5
 8002e98:	4620      	mov	r0, r4
 8002e9a:	f000 fb3d 	bl	8003518 <__lshift>
 8002e9e:	4607      	mov	r7, r0
 8002ea0:	9b06      	ldr	r3, [sp, #24]
 8002ea2:	2b00      	cmp	r3, #0
 8002ea4:	d05c      	beq.n	8002f60 <_dtoa_r+0xa78>
 8002ea6:	6879      	ldr	r1, [r7, #4]
 8002ea8:	4620      	mov	r0, r4
 8002eaa:	f000 f923 	bl	80030f4 <_Balloc>
 8002eae:	4605      	mov	r5, r0
 8002eb0:	b928      	cbnz	r0, 8002ebe <_dtoa_r+0x9d6>
 8002eb2:	4b80      	ldr	r3, [pc, #512]	; (80030b4 <_dtoa_r+0xbcc>)
 8002eb4:	4602      	mov	r2, r0
 8002eb6:	f240 21ea 	movw	r1, #746	; 0x2ea
 8002eba:	f7ff bb2e 	b.w	800251a <_dtoa_r+0x32>
 8002ebe:	693a      	ldr	r2, [r7, #16]
 8002ec0:	3202      	adds	r2, #2
 8002ec2:	0092      	lsls	r2, r2, #2
 8002ec4:	f107 010c 	add.w	r1, r7, #12
 8002ec8:	300c      	adds	r0, #12
 8002eca:	f000 f905 	bl	80030d8 <memcpy>
 8002ece:	2201      	movs	r2, #1
 8002ed0:	4629      	mov	r1, r5
 8002ed2:	4620      	mov	r0, r4
 8002ed4:	f000 fb20 	bl	8003518 <__lshift>
 8002ed8:	9b00      	ldr	r3, [sp, #0]
 8002eda:	3301      	adds	r3, #1
 8002edc:	9301      	str	r3, [sp, #4]
 8002ede:	9b00      	ldr	r3, [sp, #0]
 8002ee0:	444b      	add	r3, r9
 8002ee2:	9307      	str	r3, [sp, #28]
 8002ee4:	9b02      	ldr	r3, [sp, #8]
 8002ee6:	f003 0301 	and.w	r3, r3, #1
 8002eea:	46b8      	mov	r8, r7
 8002eec:	9306      	str	r3, [sp, #24]
 8002eee:	4607      	mov	r7, r0
 8002ef0:	9b01      	ldr	r3, [sp, #4]
 8002ef2:	4631      	mov	r1, r6
 8002ef4:	3b01      	subs	r3, #1
 8002ef6:	4658      	mov	r0, fp
 8002ef8:	9302      	str	r3, [sp, #8]
 8002efa:	f7ff fa69 	bl	80023d0 <quorem>
 8002efe:	4603      	mov	r3, r0
 8002f00:	3330      	adds	r3, #48	; 0x30
 8002f02:	9004      	str	r0, [sp, #16]
 8002f04:	4641      	mov	r1, r8
 8002f06:	4658      	mov	r0, fp
 8002f08:	9308      	str	r3, [sp, #32]
 8002f0a:	f000 fb71 	bl	80035f0 <__mcmp>
 8002f0e:	463a      	mov	r2, r7
 8002f10:	4681      	mov	r9, r0
 8002f12:	4631      	mov	r1, r6
 8002f14:	4620      	mov	r0, r4
 8002f16:	f000 fb87 	bl	8003628 <__mdiff>
 8002f1a:	68c2      	ldr	r2, [r0, #12]
 8002f1c:	9b08      	ldr	r3, [sp, #32]
 8002f1e:	4605      	mov	r5, r0
 8002f20:	bb02      	cbnz	r2, 8002f64 <_dtoa_r+0xa7c>
 8002f22:	4601      	mov	r1, r0
 8002f24:	4658      	mov	r0, fp
 8002f26:	f000 fb63 	bl	80035f0 <__mcmp>
 8002f2a:	9b08      	ldr	r3, [sp, #32]
 8002f2c:	4602      	mov	r2, r0
 8002f2e:	4629      	mov	r1, r5
 8002f30:	4620      	mov	r0, r4
 8002f32:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8002f36:	f000 f91d 	bl	8003174 <_Bfree>
 8002f3a:	9b05      	ldr	r3, [sp, #20]
 8002f3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002f3e:	9d01      	ldr	r5, [sp, #4]
 8002f40:	ea43 0102 	orr.w	r1, r3, r2
 8002f44:	9b06      	ldr	r3, [sp, #24]
 8002f46:	430b      	orrs	r3, r1
 8002f48:	9b08      	ldr	r3, [sp, #32]
 8002f4a:	d10d      	bne.n	8002f68 <_dtoa_r+0xa80>
 8002f4c:	2b39      	cmp	r3, #57	; 0x39
 8002f4e:	d029      	beq.n	8002fa4 <_dtoa_r+0xabc>
 8002f50:	f1b9 0f00 	cmp.w	r9, #0
 8002f54:	dd01      	ble.n	8002f5a <_dtoa_r+0xa72>
 8002f56:	9b04      	ldr	r3, [sp, #16]
 8002f58:	3331      	adds	r3, #49	; 0x31
 8002f5a:	9a02      	ldr	r2, [sp, #8]
 8002f5c:	7013      	strb	r3, [r2, #0]
 8002f5e:	e774      	b.n	8002e4a <_dtoa_r+0x962>
 8002f60:	4638      	mov	r0, r7
 8002f62:	e7b9      	b.n	8002ed8 <_dtoa_r+0x9f0>
 8002f64:	2201      	movs	r2, #1
 8002f66:	e7e2      	b.n	8002f2e <_dtoa_r+0xa46>
 8002f68:	f1b9 0f00 	cmp.w	r9, #0
 8002f6c:	db06      	blt.n	8002f7c <_dtoa_r+0xa94>
 8002f6e:	9905      	ldr	r1, [sp, #20]
 8002f70:	ea41 0909 	orr.w	r9, r1, r9
 8002f74:	9906      	ldr	r1, [sp, #24]
 8002f76:	ea59 0101 	orrs.w	r1, r9, r1
 8002f7a:	d120      	bne.n	8002fbe <_dtoa_r+0xad6>
 8002f7c:	2a00      	cmp	r2, #0
 8002f7e:	ddec      	ble.n	8002f5a <_dtoa_r+0xa72>
 8002f80:	4659      	mov	r1, fp
 8002f82:	2201      	movs	r2, #1
 8002f84:	4620      	mov	r0, r4
 8002f86:	9301      	str	r3, [sp, #4]
 8002f88:	f000 fac6 	bl	8003518 <__lshift>
 8002f8c:	4631      	mov	r1, r6
 8002f8e:	4683      	mov	fp, r0
 8002f90:	f000 fb2e 	bl	80035f0 <__mcmp>
 8002f94:	2800      	cmp	r0, #0
 8002f96:	9b01      	ldr	r3, [sp, #4]
 8002f98:	dc02      	bgt.n	8002fa0 <_dtoa_r+0xab8>
 8002f9a:	d1de      	bne.n	8002f5a <_dtoa_r+0xa72>
 8002f9c:	07da      	lsls	r2, r3, #31
 8002f9e:	d5dc      	bpl.n	8002f5a <_dtoa_r+0xa72>
 8002fa0:	2b39      	cmp	r3, #57	; 0x39
 8002fa2:	d1d8      	bne.n	8002f56 <_dtoa_r+0xa6e>
 8002fa4:	9a02      	ldr	r2, [sp, #8]
 8002fa6:	2339      	movs	r3, #57	; 0x39
 8002fa8:	7013      	strb	r3, [r2, #0]
 8002faa:	462b      	mov	r3, r5
 8002fac:	461d      	mov	r5, r3
 8002fae:	3b01      	subs	r3, #1
 8002fb0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002fb4:	2a39      	cmp	r2, #57	; 0x39
 8002fb6:	d050      	beq.n	800305a <_dtoa_r+0xb72>
 8002fb8:	3201      	adds	r2, #1
 8002fba:	701a      	strb	r2, [r3, #0]
 8002fbc:	e745      	b.n	8002e4a <_dtoa_r+0x962>
 8002fbe:	2a00      	cmp	r2, #0
 8002fc0:	dd03      	ble.n	8002fca <_dtoa_r+0xae2>
 8002fc2:	2b39      	cmp	r3, #57	; 0x39
 8002fc4:	d0ee      	beq.n	8002fa4 <_dtoa_r+0xabc>
 8002fc6:	3301      	adds	r3, #1
 8002fc8:	e7c7      	b.n	8002f5a <_dtoa_r+0xa72>
 8002fca:	9a01      	ldr	r2, [sp, #4]
 8002fcc:	9907      	ldr	r1, [sp, #28]
 8002fce:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002fd2:	428a      	cmp	r2, r1
 8002fd4:	d02a      	beq.n	800302c <_dtoa_r+0xb44>
 8002fd6:	4659      	mov	r1, fp
 8002fd8:	2300      	movs	r3, #0
 8002fda:	220a      	movs	r2, #10
 8002fdc:	4620      	mov	r0, r4
 8002fde:	f000 f8eb 	bl	80031b8 <__multadd>
 8002fe2:	45b8      	cmp	r8, r7
 8002fe4:	4683      	mov	fp, r0
 8002fe6:	f04f 0300 	mov.w	r3, #0
 8002fea:	f04f 020a 	mov.w	r2, #10
 8002fee:	4641      	mov	r1, r8
 8002ff0:	4620      	mov	r0, r4
 8002ff2:	d107      	bne.n	8003004 <_dtoa_r+0xb1c>
 8002ff4:	f000 f8e0 	bl	80031b8 <__multadd>
 8002ff8:	4680      	mov	r8, r0
 8002ffa:	4607      	mov	r7, r0
 8002ffc:	9b01      	ldr	r3, [sp, #4]
 8002ffe:	3301      	adds	r3, #1
 8003000:	9301      	str	r3, [sp, #4]
 8003002:	e775      	b.n	8002ef0 <_dtoa_r+0xa08>
 8003004:	f000 f8d8 	bl	80031b8 <__multadd>
 8003008:	4639      	mov	r1, r7
 800300a:	4680      	mov	r8, r0
 800300c:	2300      	movs	r3, #0
 800300e:	220a      	movs	r2, #10
 8003010:	4620      	mov	r0, r4
 8003012:	f000 f8d1 	bl	80031b8 <__multadd>
 8003016:	4607      	mov	r7, r0
 8003018:	e7f0      	b.n	8002ffc <_dtoa_r+0xb14>
 800301a:	f1b9 0f00 	cmp.w	r9, #0
 800301e:	9a00      	ldr	r2, [sp, #0]
 8003020:	bfcc      	ite	gt
 8003022:	464d      	movgt	r5, r9
 8003024:	2501      	movle	r5, #1
 8003026:	4415      	add	r5, r2
 8003028:	f04f 0800 	mov.w	r8, #0
 800302c:	4659      	mov	r1, fp
 800302e:	2201      	movs	r2, #1
 8003030:	4620      	mov	r0, r4
 8003032:	9301      	str	r3, [sp, #4]
 8003034:	f000 fa70 	bl	8003518 <__lshift>
 8003038:	4631      	mov	r1, r6
 800303a:	4683      	mov	fp, r0
 800303c:	f000 fad8 	bl	80035f0 <__mcmp>
 8003040:	2800      	cmp	r0, #0
 8003042:	dcb2      	bgt.n	8002faa <_dtoa_r+0xac2>
 8003044:	d102      	bne.n	800304c <_dtoa_r+0xb64>
 8003046:	9b01      	ldr	r3, [sp, #4]
 8003048:	07db      	lsls	r3, r3, #31
 800304a:	d4ae      	bmi.n	8002faa <_dtoa_r+0xac2>
 800304c:	462b      	mov	r3, r5
 800304e:	461d      	mov	r5, r3
 8003050:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003054:	2a30      	cmp	r2, #48	; 0x30
 8003056:	d0fa      	beq.n	800304e <_dtoa_r+0xb66>
 8003058:	e6f7      	b.n	8002e4a <_dtoa_r+0x962>
 800305a:	9a00      	ldr	r2, [sp, #0]
 800305c:	429a      	cmp	r2, r3
 800305e:	d1a5      	bne.n	8002fac <_dtoa_r+0xac4>
 8003060:	f10a 0a01 	add.w	sl, sl, #1
 8003064:	2331      	movs	r3, #49	; 0x31
 8003066:	e779      	b.n	8002f5c <_dtoa_r+0xa74>
 8003068:	4b13      	ldr	r3, [pc, #76]	; (80030b8 <_dtoa_r+0xbd0>)
 800306a:	f7ff baaf 	b.w	80025cc <_dtoa_r+0xe4>
 800306e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003070:	2b00      	cmp	r3, #0
 8003072:	f47f aa86 	bne.w	8002582 <_dtoa_r+0x9a>
 8003076:	4b11      	ldr	r3, [pc, #68]	; (80030bc <_dtoa_r+0xbd4>)
 8003078:	f7ff baa8 	b.w	80025cc <_dtoa_r+0xe4>
 800307c:	f1b9 0f00 	cmp.w	r9, #0
 8003080:	dc03      	bgt.n	800308a <_dtoa_r+0xba2>
 8003082:	9b05      	ldr	r3, [sp, #20]
 8003084:	2b02      	cmp	r3, #2
 8003086:	f73f aec9 	bgt.w	8002e1c <_dtoa_r+0x934>
 800308a:	9d00      	ldr	r5, [sp, #0]
 800308c:	4631      	mov	r1, r6
 800308e:	4658      	mov	r0, fp
 8003090:	f7ff f99e 	bl	80023d0 <quorem>
 8003094:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8003098:	f805 3b01 	strb.w	r3, [r5], #1
 800309c:	9a00      	ldr	r2, [sp, #0]
 800309e:	1aaa      	subs	r2, r5, r2
 80030a0:	4591      	cmp	r9, r2
 80030a2:	ddba      	ble.n	800301a <_dtoa_r+0xb32>
 80030a4:	4659      	mov	r1, fp
 80030a6:	2300      	movs	r3, #0
 80030a8:	220a      	movs	r2, #10
 80030aa:	4620      	mov	r0, r4
 80030ac:	f000 f884 	bl	80031b8 <__multadd>
 80030b0:	4683      	mov	fp, r0
 80030b2:	e7eb      	b.n	800308c <_dtoa_r+0xba4>
 80030b4:	08004583 	.word	0x08004583
 80030b8:	080044dc 	.word	0x080044dc
 80030bc:	08004500 	.word	0x08004500

080030c0 <_localeconv_r>:
 80030c0:	4800      	ldr	r0, [pc, #0]	; (80030c4 <_localeconv_r+0x4>)
 80030c2:	4770      	bx	lr
 80030c4:	20000160 	.word	0x20000160

080030c8 <malloc>:
 80030c8:	4b02      	ldr	r3, [pc, #8]	; (80030d4 <malloc+0xc>)
 80030ca:	4601      	mov	r1, r0
 80030cc:	6818      	ldr	r0, [r3, #0]
 80030ce:	f000 bbef 	b.w	80038b0 <_malloc_r>
 80030d2:	bf00      	nop
 80030d4:	2000000c 	.word	0x2000000c

080030d8 <memcpy>:
 80030d8:	440a      	add	r2, r1
 80030da:	4291      	cmp	r1, r2
 80030dc:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 80030e0:	d100      	bne.n	80030e4 <memcpy+0xc>
 80030e2:	4770      	bx	lr
 80030e4:	b510      	push	{r4, lr}
 80030e6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80030ea:	f803 4f01 	strb.w	r4, [r3, #1]!
 80030ee:	4291      	cmp	r1, r2
 80030f0:	d1f9      	bne.n	80030e6 <memcpy+0xe>
 80030f2:	bd10      	pop	{r4, pc}

080030f4 <_Balloc>:
 80030f4:	b570      	push	{r4, r5, r6, lr}
 80030f6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80030f8:	4604      	mov	r4, r0
 80030fa:	460d      	mov	r5, r1
 80030fc:	b976      	cbnz	r6, 800311c <_Balloc+0x28>
 80030fe:	2010      	movs	r0, #16
 8003100:	f7ff ffe2 	bl	80030c8 <malloc>
 8003104:	4602      	mov	r2, r0
 8003106:	6260      	str	r0, [r4, #36]	; 0x24
 8003108:	b920      	cbnz	r0, 8003114 <_Balloc+0x20>
 800310a:	4b18      	ldr	r3, [pc, #96]	; (800316c <_Balloc+0x78>)
 800310c:	4818      	ldr	r0, [pc, #96]	; (8003170 <_Balloc+0x7c>)
 800310e:	2166      	movs	r1, #102	; 0x66
 8003110:	f000 fc38 	bl	8003984 <__assert_func>
 8003114:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003118:	6006      	str	r6, [r0, #0]
 800311a:	60c6      	str	r6, [r0, #12]
 800311c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800311e:	68f3      	ldr	r3, [r6, #12]
 8003120:	b183      	cbz	r3, 8003144 <_Balloc+0x50>
 8003122:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003124:	68db      	ldr	r3, [r3, #12]
 8003126:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800312a:	b9b8      	cbnz	r0, 800315c <_Balloc+0x68>
 800312c:	2101      	movs	r1, #1
 800312e:	fa01 f605 	lsl.w	r6, r1, r5
 8003132:	1d72      	adds	r2, r6, #5
 8003134:	0092      	lsls	r2, r2, #2
 8003136:	4620      	mov	r0, r4
 8003138:	f000 fb5a 	bl	80037f0 <_calloc_r>
 800313c:	b160      	cbz	r0, 8003158 <_Balloc+0x64>
 800313e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003142:	e00e      	b.n	8003162 <_Balloc+0x6e>
 8003144:	2221      	movs	r2, #33	; 0x21
 8003146:	2104      	movs	r1, #4
 8003148:	4620      	mov	r0, r4
 800314a:	f000 fb51 	bl	80037f0 <_calloc_r>
 800314e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003150:	60f0      	str	r0, [r6, #12]
 8003152:	68db      	ldr	r3, [r3, #12]
 8003154:	2b00      	cmp	r3, #0
 8003156:	d1e4      	bne.n	8003122 <_Balloc+0x2e>
 8003158:	2000      	movs	r0, #0
 800315a:	bd70      	pop	{r4, r5, r6, pc}
 800315c:	6802      	ldr	r2, [r0, #0]
 800315e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003162:	2300      	movs	r3, #0
 8003164:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003168:	e7f7      	b.n	800315a <_Balloc+0x66>
 800316a:	bf00      	nop
 800316c:	0800450d 	.word	0x0800450d
 8003170:	08004594 	.word	0x08004594

08003174 <_Bfree>:
 8003174:	b570      	push	{r4, r5, r6, lr}
 8003176:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003178:	4605      	mov	r5, r0
 800317a:	460c      	mov	r4, r1
 800317c:	b976      	cbnz	r6, 800319c <_Bfree+0x28>
 800317e:	2010      	movs	r0, #16
 8003180:	f7ff ffa2 	bl	80030c8 <malloc>
 8003184:	4602      	mov	r2, r0
 8003186:	6268      	str	r0, [r5, #36]	; 0x24
 8003188:	b920      	cbnz	r0, 8003194 <_Bfree+0x20>
 800318a:	4b09      	ldr	r3, [pc, #36]	; (80031b0 <_Bfree+0x3c>)
 800318c:	4809      	ldr	r0, [pc, #36]	; (80031b4 <_Bfree+0x40>)
 800318e:	218a      	movs	r1, #138	; 0x8a
 8003190:	f000 fbf8 	bl	8003984 <__assert_func>
 8003194:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003198:	6006      	str	r6, [r0, #0]
 800319a:	60c6      	str	r6, [r0, #12]
 800319c:	b13c      	cbz	r4, 80031ae <_Bfree+0x3a>
 800319e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80031a0:	6862      	ldr	r2, [r4, #4]
 80031a2:	68db      	ldr	r3, [r3, #12]
 80031a4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80031a8:	6021      	str	r1, [r4, #0]
 80031aa:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80031ae:	bd70      	pop	{r4, r5, r6, pc}
 80031b0:	0800450d 	.word	0x0800450d
 80031b4:	08004594 	.word	0x08004594

080031b8 <__multadd>:
 80031b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80031bc:	690e      	ldr	r6, [r1, #16]
 80031be:	4607      	mov	r7, r0
 80031c0:	4698      	mov	r8, r3
 80031c2:	460c      	mov	r4, r1
 80031c4:	f101 0014 	add.w	r0, r1, #20
 80031c8:	2300      	movs	r3, #0
 80031ca:	6805      	ldr	r5, [r0, #0]
 80031cc:	b2a9      	uxth	r1, r5
 80031ce:	fb02 8101 	mla	r1, r2, r1, r8
 80031d2:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 80031d6:	0c2d      	lsrs	r5, r5, #16
 80031d8:	fb02 c505 	mla	r5, r2, r5, ip
 80031dc:	b289      	uxth	r1, r1
 80031de:	3301      	adds	r3, #1
 80031e0:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 80031e4:	429e      	cmp	r6, r3
 80031e6:	f840 1b04 	str.w	r1, [r0], #4
 80031ea:	ea4f 4815 	mov.w	r8, r5, lsr #16
 80031ee:	dcec      	bgt.n	80031ca <__multadd+0x12>
 80031f0:	f1b8 0f00 	cmp.w	r8, #0
 80031f4:	d022      	beq.n	800323c <__multadd+0x84>
 80031f6:	68a3      	ldr	r3, [r4, #8]
 80031f8:	42b3      	cmp	r3, r6
 80031fa:	dc19      	bgt.n	8003230 <__multadd+0x78>
 80031fc:	6861      	ldr	r1, [r4, #4]
 80031fe:	4638      	mov	r0, r7
 8003200:	3101      	adds	r1, #1
 8003202:	f7ff ff77 	bl	80030f4 <_Balloc>
 8003206:	4605      	mov	r5, r0
 8003208:	b928      	cbnz	r0, 8003216 <__multadd+0x5e>
 800320a:	4602      	mov	r2, r0
 800320c:	4b0d      	ldr	r3, [pc, #52]	; (8003244 <__multadd+0x8c>)
 800320e:	480e      	ldr	r0, [pc, #56]	; (8003248 <__multadd+0x90>)
 8003210:	21b5      	movs	r1, #181	; 0xb5
 8003212:	f000 fbb7 	bl	8003984 <__assert_func>
 8003216:	6922      	ldr	r2, [r4, #16]
 8003218:	3202      	adds	r2, #2
 800321a:	f104 010c 	add.w	r1, r4, #12
 800321e:	0092      	lsls	r2, r2, #2
 8003220:	300c      	adds	r0, #12
 8003222:	f7ff ff59 	bl	80030d8 <memcpy>
 8003226:	4621      	mov	r1, r4
 8003228:	4638      	mov	r0, r7
 800322a:	f7ff ffa3 	bl	8003174 <_Bfree>
 800322e:	462c      	mov	r4, r5
 8003230:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8003234:	3601      	adds	r6, #1
 8003236:	f8c3 8014 	str.w	r8, [r3, #20]
 800323a:	6126      	str	r6, [r4, #16]
 800323c:	4620      	mov	r0, r4
 800323e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003242:	bf00      	nop
 8003244:	08004583 	.word	0x08004583
 8003248:	08004594 	.word	0x08004594

0800324c <__hi0bits>:
 800324c:	0c03      	lsrs	r3, r0, #16
 800324e:	041b      	lsls	r3, r3, #16
 8003250:	b9d3      	cbnz	r3, 8003288 <__hi0bits+0x3c>
 8003252:	0400      	lsls	r0, r0, #16
 8003254:	2310      	movs	r3, #16
 8003256:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800325a:	bf04      	itt	eq
 800325c:	0200      	lsleq	r0, r0, #8
 800325e:	3308      	addeq	r3, #8
 8003260:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003264:	bf04      	itt	eq
 8003266:	0100      	lsleq	r0, r0, #4
 8003268:	3304      	addeq	r3, #4
 800326a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800326e:	bf04      	itt	eq
 8003270:	0080      	lsleq	r0, r0, #2
 8003272:	3302      	addeq	r3, #2
 8003274:	2800      	cmp	r0, #0
 8003276:	db05      	blt.n	8003284 <__hi0bits+0x38>
 8003278:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800327c:	f103 0301 	add.w	r3, r3, #1
 8003280:	bf08      	it	eq
 8003282:	2320      	moveq	r3, #32
 8003284:	4618      	mov	r0, r3
 8003286:	4770      	bx	lr
 8003288:	2300      	movs	r3, #0
 800328a:	e7e4      	b.n	8003256 <__hi0bits+0xa>

0800328c <__lo0bits>:
 800328c:	6803      	ldr	r3, [r0, #0]
 800328e:	f013 0207 	ands.w	r2, r3, #7
 8003292:	4601      	mov	r1, r0
 8003294:	d00b      	beq.n	80032ae <__lo0bits+0x22>
 8003296:	07da      	lsls	r2, r3, #31
 8003298:	d424      	bmi.n	80032e4 <__lo0bits+0x58>
 800329a:	0798      	lsls	r0, r3, #30
 800329c:	bf49      	itett	mi
 800329e:	085b      	lsrmi	r3, r3, #1
 80032a0:	089b      	lsrpl	r3, r3, #2
 80032a2:	2001      	movmi	r0, #1
 80032a4:	600b      	strmi	r3, [r1, #0]
 80032a6:	bf5c      	itt	pl
 80032a8:	600b      	strpl	r3, [r1, #0]
 80032aa:	2002      	movpl	r0, #2
 80032ac:	4770      	bx	lr
 80032ae:	b298      	uxth	r0, r3
 80032b0:	b9b0      	cbnz	r0, 80032e0 <__lo0bits+0x54>
 80032b2:	0c1b      	lsrs	r3, r3, #16
 80032b4:	2010      	movs	r0, #16
 80032b6:	f013 0fff 	tst.w	r3, #255	; 0xff
 80032ba:	bf04      	itt	eq
 80032bc:	0a1b      	lsreq	r3, r3, #8
 80032be:	3008      	addeq	r0, #8
 80032c0:	071a      	lsls	r2, r3, #28
 80032c2:	bf04      	itt	eq
 80032c4:	091b      	lsreq	r3, r3, #4
 80032c6:	3004      	addeq	r0, #4
 80032c8:	079a      	lsls	r2, r3, #30
 80032ca:	bf04      	itt	eq
 80032cc:	089b      	lsreq	r3, r3, #2
 80032ce:	3002      	addeq	r0, #2
 80032d0:	07da      	lsls	r2, r3, #31
 80032d2:	d403      	bmi.n	80032dc <__lo0bits+0x50>
 80032d4:	085b      	lsrs	r3, r3, #1
 80032d6:	f100 0001 	add.w	r0, r0, #1
 80032da:	d005      	beq.n	80032e8 <__lo0bits+0x5c>
 80032dc:	600b      	str	r3, [r1, #0]
 80032de:	4770      	bx	lr
 80032e0:	4610      	mov	r0, r2
 80032e2:	e7e8      	b.n	80032b6 <__lo0bits+0x2a>
 80032e4:	2000      	movs	r0, #0
 80032e6:	4770      	bx	lr
 80032e8:	2020      	movs	r0, #32
 80032ea:	4770      	bx	lr

080032ec <__i2b>:
 80032ec:	b510      	push	{r4, lr}
 80032ee:	460c      	mov	r4, r1
 80032f0:	2101      	movs	r1, #1
 80032f2:	f7ff feff 	bl	80030f4 <_Balloc>
 80032f6:	4602      	mov	r2, r0
 80032f8:	b928      	cbnz	r0, 8003306 <__i2b+0x1a>
 80032fa:	4b05      	ldr	r3, [pc, #20]	; (8003310 <__i2b+0x24>)
 80032fc:	4805      	ldr	r0, [pc, #20]	; (8003314 <__i2b+0x28>)
 80032fe:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003302:	f000 fb3f 	bl	8003984 <__assert_func>
 8003306:	2301      	movs	r3, #1
 8003308:	6144      	str	r4, [r0, #20]
 800330a:	6103      	str	r3, [r0, #16]
 800330c:	bd10      	pop	{r4, pc}
 800330e:	bf00      	nop
 8003310:	08004583 	.word	0x08004583
 8003314:	08004594 	.word	0x08004594

08003318 <__multiply>:
 8003318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800331c:	4614      	mov	r4, r2
 800331e:	690a      	ldr	r2, [r1, #16]
 8003320:	6923      	ldr	r3, [r4, #16]
 8003322:	429a      	cmp	r2, r3
 8003324:	bfb8      	it	lt
 8003326:	460b      	movlt	r3, r1
 8003328:	460d      	mov	r5, r1
 800332a:	bfbc      	itt	lt
 800332c:	4625      	movlt	r5, r4
 800332e:	461c      	movlt	r4, r3
 8003330:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8003334:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8003338:	68ab      	ldr	r3, [r5, #8]
 800333a:	6869      	ldr	r1, [r5, #4]
 800333c:	eb0a 0709 	add.w	r7, sl, r9
 8003340:	42bb      	cmp	r3, r7
 8003342:	b085      	sub	sp, #20
 8003344:	bfb8      	it	lt
 8003346:	3101      	addlt	r1, #1
 8003348:	f7ff fed4 	bl	80030f4 <_Balloc>
 800334c:	b930      	cbnz	r0, 800335c <__multiply+0x44>
 800334e:	4602      	mov	r2, r0
 8003350:	4b42      	ldr	r3, [pc, #264]	; (800345c <__multiply+0x144>)
 8003352:	4843      	ldr	r0, [pc, #268]	; (8003460 <__multiply+0x148>)
 8003354:	f240 115d 	movw	r1, #349	; 0x15d
 8003358:	f000 fb14 	bl	8003984 <__assert_func>
 800335c:	f100 0614 	add.w	r6, r0, #20
 8003360:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8003364:	4633      	mov	r3, r6
 8003366:	2200      	movs	r2, #0
 8003368:	4543      	cmp	r3, r8
 800336a:	d31e      	bcc.n	80033aa <__multiply+0x92>
 800336c:	f105 0c14 	add.w	ip, r5, #20
 8003370:	f104 0314 	add.w	r3, r4, #20
 8003374:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8003378:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 800337c:	9202      	str	r2, [sp, #8]
 800337e:	ebac 0205 	sub.w	r2, ip, r5
 8003382:	3a15      	subs	r2, #21
 8003384:	f022 0203 	bic.w	r2, r2, #3
 8003388:	3204      	adds	r2, #4
 800338a:	f105 0115 	add.w	r1, r5, #21
 800338e:	458c      	cmp	ip, r1
 8003390:	bf38      	it	cc
 8003392:	2204      	movcc	r2, #4
 8003394:	9201      	str	r2, [sp, #4]
 8003396:	9a02      	ldr	r2, [sp, #8]
 8003398:	9303      	str	r3, [sp, #12]
 800339a:	429a      	cmp	r2, r3
 800339c:	d808      	bhi.n	80033b0 <__multiply+0x98>
 800339e:	2f00      	cmp	r7, #0
 80033a0:	dc55      	bgt.n	800344e <__multiply+0x136>
 80033a2:	6107      	str	r7, [r0, #16]
 80033a4:	b005      	add	sp, #20
 80033a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033aa:	f843 2b04 	str.w	r2, [r3], #4
 80033ae:	e7db      	b.n	8003368 <__multiply+0x50>
 80033b0:	f8b3 a000 	ldrh.w	sl, [r3]
 80033b4:	f1ba 0f00 	cmp.w	sl, #0
 80033b8:	d020      	beq.n	80033fc <__multiply+0xe4>
 80033ba:	f105 0e14 	add.w	lr, r5, #20
 80033be:	46b1      	mov	r9, r6
 80033c0:	2200      	movs	r2, #0
 80033c2:	f85e 4b04 	ldr.w	r4, [lr], #4
 80033c6:	f8d9 b000 	ldr.w	fp, [r9]
 80033ca:	b2a1      	uxth	r1, r4
 80033cc:	fa1f fb8b 	uxth.w	fp, fp
 80033d0:	fb0a b101 	mla	r1, sl, r1, fp
 80033d4:	4411      	add	r1, r2
 80033d6:	f8d9 2000 	ldr.w	r2, [r9]
 80033da:	0c24      	lsrs	r4, r4, #16
 80033dc:	0c12      	lsrs	r2, r2, #16
 80033de:	fb0a 2404 	mla	r4, sl, r4, r2
 80033e2:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 80033e6:	b289      	uxth	r1, r1
 80033e8:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 80033ec:	45f4      	cmp	ip, lr
 80033ee:	f849 1b04 	str.w	r1, [r9], #4
 80033f2:	ea4f 4214 	mov.w	r2, r4, lsr #16
 80033f6:	d8e4      	bhi.n	80033c2 <__multiply+0xaa>
 80033f8:	9901      	ldr	r1, [sp, #4]
 80033fa:	5072      	str	r2, [r6, r1]
 80033fc:	9a03      	ldr	r2, [sp, #12]
 80033fe:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8003402:	3304      	adds	r3, #4
 8003404:	f1b9 0f00 	cmp.w	r9, #0
 8003408:	d01f      	beq.n	800344a <__multiply+0x132>
 800340a:	6834      	ldr	r4, [r6, #0]
 800340c:	f105 0114 	add.w	r1, r5, #20
 8003410:	46b6      	mov	lr, r6
 8003412:	f04f 0a00 	mov.w	sl, #0
 8003416:	880a      	ldrh	r2, [r1, #0]
 8003418:	f8be b002 	ldrh.w	fp, [lr, #2]
 800341c:	fb09 b202 	mla	r2, r9, r2, fp
 8003420:	4492      	add	sl, r2
 8003422:	b2a4      	uxth	r4, r4
 8003424:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8003428:	f84e 4b04 	str.w	r4, [lr], #4
 800342c:	f851 4b04 	ldr.w	r4, [r1], #4
 8003430:	f8be 2000 	ldrh.w	r2, [lr]
 8003434:	0c24      	lsrs	r4, r4, #16
 8003436:	fb09 2404 	mla	r4, r9, r4, r2
 800343a:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 800343e:	458c      	cmp	ip, r1
 8003440:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8003444:	d8e7      	bhi.n	8003416 <__multiply+0xfe>
 8003446:	9a01      	ldr	r2, [sp, #4]
 8003448:	50b4      	str	r4, [r6, r2]
 800344a:	3604      	adds	r6, #4
 800344c:	e7a3      	b.n	8003396 <__multiply+0x7e>
 800344e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003452:	2b00      	cmp	r3, #0
 8003454:	d1a5      	bne.n	80033a2 <__multiply+0x8a>
 8003456:	3f01      	subs	r7, #1
 8003458:	e7a1      	b.n	800339e <__multiply+0x86>
 800345a:	bf00      	nop
 800345c:	08004583 	.word	0x08004583
 8003460:	08004594 	.word	0x08004594

08003464 <__pow5mult>:
 8003464:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003468:	4615      	mov	r5, r2
 800346a:	f012 0203 	ands.w	r2, r2, #3
 800346e:	4606      	mov	r6, r0
 8003470:	460f      	mov	r7, r1
 8003472:	d007      	beq.n	8003484 <__pow5mult+0x20>
 8003474:	4c25      	ldr	r4, [pc, #148]	; (800350c <__pow5mult+0xa8>)
 8003476:	3a01      	subs	r2, #1
 8003478:	2300      	movs	r3, #0
 800347a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800347e:	f7ff fe9b 	bl	80031b8 <__multadd>
 8003482:	4607      	mov	r7, r0
 8003484:	10ad      	asrs	r5, r5, #2
 8003486:	d03d      	beq.n	8003504 <__pow5mult+0xa0>
 8003488:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800348a:	b97c      	cbnz	r4, 80034ac <__pow5mult+0x48>
 800348c:	2010      	movs	r0, #16
 800348e:	f7ff fe1b 	bl	80030c8 <malloc>
 8003492:	4602      	mov	r2, r0
 8003494:	6270      	str	r0, [r6, #36]	; 0x24
 8003496:	b928      	cbnz	r0, 80034a4 <__pow5mult+0x40>
 8003498:	4b1d      	ldr	r3, [pc, #116]	; (8003510 <__pow5mult+0xac>)
 800349a:	481e      	ldr	r0, [pc, #120]	; (8003514 <__pow5mult+0xb0>)
 800349c:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80034a0:	f000 fa70 	bl	8003984 <__assert_func>
 80034a4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80034a8:	6004      	str	r4, [r0, #0]
 80034aa:	60c4      	str	r4, [r0, #12]
 80034ac:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80034b0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80034b4:	b94c      	cbnz	r4, 80034ca <__pow5mult+0x66>
 80034b6:	f240 2171 	movw	r1, #625	; 0x271
 80034ba:	4630      	mov	r0, r6
 80034bc:	f7ff ff16 	bl	80032ec <__i2b>
 80034c0:	2300      	movs	r3, #0
 80034c2:	f8c8 0008 	str.w	r0, [r8, #8]
 80034c6:	4604      	mov	r4, r0
 80034c8:	6003      	str	r3, [r0, #0]
 80034ca:	f04f 0900 	mov.w	r9, #0
 80034ce:	07eb      	lsls	r3, r5, #31
 80034d0:	d50a      	bpl.n	80034e8 <__pow5mult+0x84>
 80034d2:	4639      	mov	r1, r7
 80034d4:	4622      	mov	r2, r4
 80034d6:	4630      	mov	r0, r6
 80034d8:	f7ff ff1e 	bl	8003318 <__multiply>
 80034dc:	4639      	mov	r1, r7
 80034de:	4680      	mov	r8, r0
 80034e0:	4630      	mov	r0, r6
 80034e2:	f7ff fe47 	bl	8003174 <_Bfree>
 80034e6:	4647      	mov	r7, r8
 80034e8:	106d      	asrs	r5, r5, #1
 80034ea:	d00b      	beq.n	8003504 <__pow5mult+0xa0>
 80034ec:	6820      	ldr	r0, [r4, #0]
 80034ee:	b938      	cbnz	r0, 8003500 <__pow5mult+0x9c>
 80034f0:	4622      	mov	r2, r4
 80034f2:	4621      	mov	r1, r4
 80034f4:	4630      	mov	r0, r6
 80034f6:	f7ff ff0f 	bl	8003318 <__multiply>
 80034fa:	6020      	str	r0, [r4, #0]
 80034fc:	f8c0 9000 	str.w	r9, [r0]
 8003500:	4604      	mov	r4, r0
 8003502:	e7e4      	b.n	80034ce <__pow5mult+0x6a>
 8003504:	4638      	mov	r0, r7
 8003506:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800350a:	bf00      	nop
 800350c:	080046e8 	.word	0x080046e8
 8003510:	0800450d 	.word	0x0800450d
 8003514:	08004594 	.word	0x08004594

08003518 <__lshift>:
 8003518:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800351c:	460c      	mov	r4, r1
 800351e:	6849      	ldr	r1, [r1, #4]
 8003520:	6923      	ldr	r3, [r4, #16]
 8003522:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003526:	68a3      	ldr	r3, [r4, #8]
 8003528:	4607      	mov	r7, r0
 800352a:	4691      	mov	r9, r2
 800352c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003530:	f108 0601 	add.w	r6, r8, #1
 8003534:	42b3      	cmp	r3, r6
 8003536:	db0b      	blt.n	8003550 <__lshift+0x38>
 8003538:	4638      	mov	r0, r7
 800353a:	f7ff fddb 	bl	80030f4 <_Balloc>
 800353e:	4605      	mov	r5, r0
 8003540:	b948      	cbnz	r0, 8003556 <__lshift+0x3e>
 8003542:	4602      	mov	r2, r0
 8003544:	4b28      	ldr	r3, [pc, #160]	; (80035e8 <__lshift+0xd0>)
 8003546:	4829      	ldr	r0, [pc, #164]	; (80035ec <__lshift+0xd4>)
 8003548:	f240 11d9 	movw	r1, #473	; 0x1d9
 800354c:	f000 fa1a 	bl	8003984 <__assert_func>
 8003550:	3101      	adds	r1, #1
 8003552:	005b      	lsls	r3, r3, #1
 8003554:	e7ee      	b.n	8003534 <__lshift+0x1c>
 8003556:	2300      	movs	r3, #0
 8003558:	f100 0114 	add.w	r1, r0, #20
 800355c:	f100 0210 	add.w	r2, r0, #16
 8003560:	4618      	mov	r0, r3
 8003562:	4553      	cmp	r3, sl
 8003564:	db33      	blt.n	80035ce <__lshift+0xb6>
 8003566:	6920      	ldr	r0, [r4, #16]
 8003568:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800356c:	f104 0314 	add.w	r3, r4, #20
 8003570:	f019 091f 	ands.w	r9, r9, #31
 8003574:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003578:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800357c:	d02b      	beq.n	80035d6 <__lshift+0xbe>
 800357e:	f1c9 0e20 	rsb	lr, r9, #32
 8003582:	468a      	mov	sl, r1
 8003584:	2200      	movs	r2, #0
 8003586:	6818      	ldr	r0, [r3, #0]
 8003588:	fa00 f009 	lsl.w	r0, r0, r9
 800358c:	4302      	orrs	r2, r0
 800358e:	f84a 2b04 	str.w	r2, [sl], #4
 8003592:	f853 2b04 	ldr.w	r2, [r3], #4
 8003596:	459c      	cmp	ip, r3
 8003598:	fa22 f20e 	lsr.w	r2, r2, lr
 800359c:	d8f3      	bhi.n	8003586 <__lshift+0x6e>
 800359e:	ebac 0304 	sub.w	r3, ip, r4
 80035a2:	3b15      	subs	r3, #21
 80035a4:	f023 0303 	bic.w	r3, r3, #3
 80035a8:	3304      	adds	r3, #4
 80035aa:	f104 0015 	add.w	r0, r4, #21
 80035ae:	4584      	cmp	ip, r0
 80035b0:	bf38      	it	cc
 80035b2:	2304      	movcc	r3, #4
 80035b4:	50ca      	str	r2, [r1, r3]
 80035b6:	b10a      	cbz	r2, 80035bc <__lshift+0xa4>
 80035b8:	f108 0602 	add.w	r6, r8, #2
 80035bc:	3e01      	subs	r6, #1
 80035be:	4638      	mov	r0, r7
 80035c0:	612e      	str	r6, [r5, #16]
 80035c2:	4621      	mov	r1, r4
 80035c4:	f7ff fdd6 	bl	8003174 <_Bfree>
 80035c8:	4628      	mov	r0, r5
 80035ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80035ce:	f842 0f04 	str.w	r0, [r2, #4]!
 80035d2:	3301      	adds	r3, #1
 80035d4:	e7c5      	b.n	8003562 <__lshift+0x4a>
 80035d6:	3904      	subs	r1, #4
 80035d8:	f853 2b04 	ldr.w	r2, [r3], #4
 80035dc:	f841 2f04 	str.w	r2, [r1, #4]!
 80035e0:	459c      	cmp	ip, r3
 80035e2:	d8f9      	bhi.n	80035d8 <__lshift+0xc0>
 80035e4:	e7ea      	b.n	80035bc <__lshift+0xa4>
 80035e6:	bf00      	nop
 80035e8:	08004583 	.word	0x08004583
 80035ec:	08004594 	.word	0x08004594

080035f0 <__mcmp>:
 80035f0:	b530      	push	{r4, r5, lr}
 80035f2:	6902      	ldr	r2, [r0, #16]
 80035f4:	690c      	ldr	r4, [r1, #16]
 80035f6:	1b12      	subs	r2, r2, r4
 80035f8:	d10e      	bne.n	8003618 <__mcmp+0x28>
 80035fa:	f100 0314 	add.w	r3, r0, #20
 80035fe:	3114      	adds	r1, #20
 8003600:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003604:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8003608:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800360c:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8003610:	42a5      	cmp	r5, r4
 8003612:	d003      	beq.n	800361c <__mcmp+0x2c>
 8003614:	d305      	bcc.n	8003622 <__mcmp+0x32>
 8003616:	2201      	movs	r2, #1
 8003618:	4610      	mov	r0, r2
 800361a:	bd30      	pop	{r4, r5, pc}
 800361c:	4283      	cmp	r3, r0
 800361e:	d3f3      	bcc.n	8003608 <__mcmp+0x18>
 8003620:	e7fa      	b.n	8003618 <__mcmp+0x28>
 8003622:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003626:	e7f7      	b.n	8003618 <__mcmp+0x28>

08003628 <__mdiff>:
 8003628:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800362c:	460c      	mov	r4, r1
 800362e:	4606      	mov	r6, r0
 8003630:	4611      	mov	r1, r2
 8003632:	4620      	mov	r0, r4
 8003634:	4617      	mov	r7, r2
 8003636:	f7ff ffdb 	bl	80035f0 <__mcmp>
 800363a:	1e05      	subs	r5, r0, #0
 800363c:	d110      	bne.n	8003660 <__mdiff+0x38>
 800363e:	4629      	mov	r1, r5
 8003640:	4630      	mov	r0, r6
 8003642:	f7ff fd57 	bl	80030f4 <_Balloc>
 8003646:	b930      	cbnz	r0, 8003656 <__mdiff+0x2e>
 8003648:	4b39      	ldr	r3, [pc, #228]	; (8003730 <__mdiff+0x108>)
 800364a:	4602      	mov	r2, r0
 800364c:	f240 2132 	movw	r1, #562	; 0x232
 8003650:	4838      	ldr	r0, [pc, #224]	; (8003734 <__mdiff+0x10c>)
 8003652:	f000 f997 	bl	8003984 <__assert_func>
 8003656:	2301      	movs	r3, #1
 8003658:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800365c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003660:	bfa4      	itt	ge
 8003662:	463b      	movge	r3, r7
 8003664:	4627      	movge	r7, r4
 8003666:	4630      	mov	r0, r6
 8003668:	6879      	ldr	r1, [r7, #4]
 800366a:	bfa6      	itte	ge
 800366c:	461c      	movge	r4, r3
 800366e:	2500      	movge	r5, #0
 8003670:	2501      	movlt	r5, #1
 8003672:	f7ff fd3f 	bl	80030f4 <_Balloc>
 8003676:	b920      	cbnz	r0, 8003682 <__mdiff+0x5a>
 8003678:	4b2d      	ldr	r3, [pc, #180]	; (8003730 <__mdiff+0x108>)
 800367a:	4602      	mov	r2, r0
 800367c:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003680:	e7e6      	b.n	8003650 <__mdiff+0x28>
 8003682:	693e      	ldr	r6, [r7, #16]
 8003684:	60c5      	str	r5, [r0, #12]
 8003686:	6925      	ldr	r5, [r4, #16]
 8003688:	f107 0114 	add.w	r1, r7, #20
 800368c:	f104 0914 	add.w	r9, r4, #20
 8003690:	f100 0e14 	add.w	lr, r0, #20
 8003694:	f107 0210 	add.w	r2, r7, #16
 8003698:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 800369c:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 80036a0:	46f2      	mov	sl, lr
 80036a2:	2700      	movs	r7, #0
 80036a4:	f859 3b04 	ldr.w	r3, [r9], #4
 80036a8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80036ac:	fa1f f883 	uxth.w	r8, r3
 80036b0:	fa17 f78b 	uxtah	r7, r7, fp
 80036b4:	0c1b      	lsrs	r3, r3, #16
 80036b6:	eba7 0808 	sub.w	r8, r7, r8
 80036ba:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80036be:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80036c2:	fa1f f888 	uxth.w	r8, r8
 80036c6:	141f      	asrs	r7, r3, #16
 80036c8:	454d      	cmp	r5, r9
 80036ca:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80036ce:	f84a 3b04 	str.w	r3, [sl], #4
 80036d2:	d8e7      	bhi.n	80036a4 <__mdiff+0x7c>
 80036d4:	1b2b      	subs	r3, r5, r4
 80036d6:	3b15      	subs	r3, #21
 80036d8:	f023 0303 	bic.w	r3, r3, #3
 80036dc:	3304      	adds	r3, #4
 80036de:	3415      	adds	r4, #21
 80036e0:	42a5      	cmp	r5, r4
 80036e2:	bf38      	it	cc
 80036e4:	2304      	movcc	r3, #4
 80036e6:	4419      	add	r1, r3
 80036e8:	4473      	add	r3, lr
 80036ea:	469e      	mov	lr, r3
 80036ec:	460d      	mov	r5, r1
 80036ee:	4565      	cmp	r5, ip
 80036f0:	d30e      	bcc.n	8003710 <__mdiff+0xe8>
 80036f2:	f10c 0203 	add.w	r2, ip, #3
 80036f6:	1a52      	subs	r2, r2, r1
 80036f8:	f022 0203 	bic.w	r2, r2, #3
 80036fc:	3903      	subs	r1, #3
 80036fe:	458c      	cmp	ip, r1
 8003700:	bf38      	it	cc
 8003702:	2200      	movcc	r2, #0
 8003704:	441a      	add	r2, r3
 8003706:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800370a:	b17b      	cbz	r3, 800372c <__mdiff+0x104>
 800370c:	6106      	str	r6, [r0, #16]
 800370e:	e7a5      	b.n	800365c <__mdiff+0x34>
 8003710:	f855 8b04 	ldr.w	r8, [r5], #4
 8003714:	fa17 f488 	uxtah	r4, r7, r8
 8003718:	1422      	asrs	r2, r4, #16
 800371a:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 800371e:	b2a4      	uxth	r4, r4
 8003720:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8003724:	f84e 4b04 	str.w	r4, [lr], #4
 8003728:	1417      	asrs	r7, r2, #16
 800372a:	e7e0      	b.n	80036ee <__mdiff+0xc6>
 800372c:	3e01      	subs	r6, #1
 800372e:	e7ea      	b.n	8003706 <__mdiff+0xde>
 8003730:	08004583 	.word	0x08004583
 8003734:	08004594 	.word	0x08004594

08003738 <__d2b>:
 8003738:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800373c:	4689      	mov	r9, r1
 800373e:	2101      	movs	r1, #1
 8003740:	ec57 6b10 	vmov	r6, r7, d0
 8003744:	4690      	mov	r8, r2
 8003746:	f7ff fcd5 	bl	80030f4 <_Balloc>
 800374a:	4604      	mov	r4, r0
 800374c:	b930      	cbnz	r0, 800375c <__d2b+0x24>
 800374e:	4602      	mov	r2, r0
 8003750:	4b25      	ldr	r3, [pc, #148]	; (80037e8 <__d2b+0xb0>)
 8003752:	4826      	ldr	r0, [pc, #152]	; (80037ec <__d2b+0xb4>)
 8003754:	f240 310a 	movw	r1, #778	; 0x30a
 8003758:	f000 f914 	bl	8003984 <__assert_func>
 800375c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8003760:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8003764:	bb35      	cbnz	r5, 80037b4 <__d2b+0x7c>
 8003766:	2e00      	cmp	r6, #0
 8003768:	9301      	str	r3, [sp, #4]
 800376a:	d028      	beq.n	80037be <__d2b+0x86>
 800376c:	4668      	mov	r0, sp
 800376e:	9600      	str	r6, [sp, #0]
 8003770:	f7ff fd8c 	bl	800328c <__lo0bits>
 8003774:	9900      	ldr	r1, [sp, #0]
 8003776:	b300      	cbz	r0, 80037ba <__d2b+0x82>
 8003778:	9a01      	ldr	r2, [sp, #4]
 800377a:	f1c0 0320 	rsb	r3, r0, #32
 800377e:	fa02 f303 	lsl.w	r3, r2, r3
 8003782:	430b      	orrs	r3, r1
 8003784:	40c2      	lsrs	r2, r0
 8003786:	6163      	str	r3, [r4, #20]
 8003788:	9201      	str	r2, [sp, #4]
 800378a:	9b01      	ldr	r3, [sp, #4]
 800378c:	61a3      	str	r3, [r4, #24]
 800378e:	2b00      	cmp	r3, #0
 8003790:	bf14      	ite	ne
 8003792:	2202      	movne	r2, #2
 8003794:	2201      	moveq	r2, #1
 8003796:	6122      	str	r2, [r4, #16]
 8003798:	b1d5      	cbz	r5, 80037d0 <__d2b+0x98>
 800379a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800379e:	4405      	add	r5, r0
 80037a0:	f8c9 5000 	str.w	r5, [r9]
 80037a4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80037a8:	f8c8 0000 	str.w	r0, [r8]
 80037ac:	4620      	mov	r0, r4
 80037ae:	b003      	add	sp, #12
 80037b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80037b4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80037b8:	e7d5      	b.n	8003766 <__d2b+0x2e>
 80037ba:	6161      	str	r1, [r4, #20]
 80037bc:	e7e5      	b.n	800378a <__d2b+0x52>
 80037be:	a801      	add	r0, sp, #4
 80037c0:	f7ff fd64 	bl	800328c <__lo0bits>
 80037c4:	9b01      	ldr	r3, [sp, #4]
 80037c6:	6163      	str	r3, [r4, #20]
 80037c8:	2201      	movs	r2, #1
 80037ca:	6122      	str	r2, [r4, #16]
 80037cc:	3020      	adds	r0, #32
 80037ce:	e7e3      	b.n	8003798 <__d2b+0x60>
 80037d0:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80037d4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80037d8:	f8c9 0000 	str.w	r0, [r9]
 80037dc:	6918      	ldr	r0, [r3, #16]
 80037de:	f7ff fd35 	bl	800324c <__hi0bits>
 80037e2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80037e6:	e7df      	b.n	80037a8 <__d2b+0x70>
 80037e8:	08004583 	.word	0x08004583
 80037ec:	08004594 	.word	0x08004594

080037f0 <_calloc_r>:
 80037f0:	b513      	push	{r0, r1, r4, lr}
 80037f2:	434a      	muls	r2, r1
 80037f4:	4611      	mov	r1, r2
 80037f6:	9201      	str	r2, [sp, #4]
 80037f8:	f000 f85a 	bl	80038b0 <_malloc_r>
 80037fc:	4604      	mov	r4, r0
 80037fe:	b118      	cbz	r0, 8003808 <_calloc_r+0x18>
 8003800:	9a01      	ldr	r2, [sp, #4]
 8003802:	2100      	movs	r1, #0
 8003804:	f7fe f972 	bl	8001aec <memset>
 8003808:	4620      	mov	r0, r4
 800380a:	b002      	add	sp, #8
 800380c:	bd10      	pop	{r4, pc}
	...

08003810 <_free_r>:
 8003810:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003812:	2900      	cmp	r1, #0
 8003814:	d048      	beq.n	80038a8 <_free_r+0x98>
 8003816:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800381a:	9001      	str	r0, [sp, #4]
 800381c:	2b00      	cmp	r3, #0
 800381e:	f1a1 0404 	sub.w	r4, r1, #4
 8003822:	bfb8      	it	lt
 8003824:	18e4      	addlt	r4, r4, r3
 8003826:	f000 f8ef 	bl	8003a08 <__malloc_lock>
 800382a:	4a20      	ldr	r2, [pc, #128]	; (80038ac <_free_r+0x9c>)
 800382c:	9801      	ldr	r0, [sp, #4]
 800382e:	6813      	ldr	r3, [r2, #0]
 8003830:	4615      	mov	r5, r2
 8003832:	b933      	cbnz	r3, 8003842 <_free_r+0x32>
 8003834:	6063      	str	r3, [r4, #4]
 8003836:	6014      	str	r4, [r2, #0]
 8003838:	b003      	add	sp, #12
 800383a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800383e:	f000 b8e9 	b.w	8003a14 <__malloc_unlock>
 8003842:	42a3      	cmp	r3, r4
 8003844:	d90b      	bls.n	800385e <_free_r+0x4e>
 8003846:	6821      	ldr	r1, [r4, #0]
 8003848:	1862      	adds	r2, r4, r1
 800384a:	4293      	cmp	r3, r2
 800384c:	bf04      	itt	eq
 800384e:	681a      	ldreq	r2, [r3, #0]
 8003850:	685b      	ldreq	r3, [r3, #4]
 8003852:	6063      	str	r3, [r4, #4]
 8003854:	bf04      	itt	eq
 8003856:	1852      	addeq	r2, r2, r1
 8003858:	6022      	streq	r2, [r4, #0]
 800385a:	602c      	str	r4, [r5, #0]
 800385c:	e7ec      	b.n	8003838 <_free_r+0x28>
 800385e:	461a      	mov	r2, r3
 8003860:	685b      	ldr	r3, [r3, #4]
 8003862:	b10b      	cbz	r3, 8003868 <_free_r+0x58>
 8003864:	42a3      	cmp	r3, r4
 8003866:	d9fa      	bls.n	800385e <_free_r+0x4e>
 8003868:	6811      	ldr	r1, [r2, #0]
 800386a:	1855      	adds	r5, r2, r1
 800386c:	42a5      	cmp	r5, r4
 800386e:	d10b      	bne.n	8003888 <_free_r+0x78>
 8003870:	6824      	ldr	r4, [r4, #0]
 8003872:	4421      	add	r1, r4
 8003874:	1854      	adds	r4, r2, r1
 8003876:	42a3      	cmp	r3, r4
 8003878:	6011      	str	r1, [r2, #0]
 800387a:	d1dd      	bne.n	8003838 <_free_r+0x28>
 800387c:	681c      	ldr	r4, [r3, #0]
 800387e:	685b      	ldr	r3, [r3, #4]
 8003880:	6053      	str	r3, [r2, #4]
 8003882:	4421      	add	r1, r4
 8003884:	6011      	str	r1, [r2, #0]
 8003886:	e7d7      	b.n	8003838 <_free_r+0x28>
 8003888:	d902      	bls.n	8003890 <_free_r+0x80>
 800388a:	230c      	movs	r3, #12
 800388c:	6003      	str	r3, [r0, #0]
 800388e:	e7d3      	b.n	8003838 <_free_r+0x28>
 8003890:	6825      	ldr	r5, [r4, #0]
 8003892:	1961      	adds	r1, r4, r5
 8003894:	428b      	cmp	r3, r1
 8003896:	bf04      	itt	eq
 8003898:	6819      	ldreq	r1, [r3, #0]
 800389a:	685b      	ldreq	r3, [r3, #4]
 800389c:	6063      	str	r3, [r4, #4]
 800389e:	bf04      	itt	eq
 80038a0:	1949      	addeq	r1, r1, r5
 80038a2:	6021      	streq	r1, [r4, #0]
 80038a4:	6054      	str	r4, [r2, #4]
 80038a6:	e7c7      	b.n	8003838 <_free_r+0x28>
 80038a8:	b003      	add	sp, #12
 80038aa:	bd30      	pop	{r4, r5, pc}
 80038ac:	200001fc 	.word	0x200001fc

080038b0 <_malloc_r>:
 80038b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80038b2:	1ccd      	adds	r5, r1, #3
 80038b4:	f025 0503 	bic.w	r5, r5, #3
 80038b8:	3508      	adds	r5, #8
 80038ba:	2d0c      	cmp	r5, #12
 80038bc:	bf38      	it	cc
 80038be:	250c      	movcc	r5, #12
 80038c0:	2d00      	cmp	r5, #0
 80038c2:	4606      	mov	r6, r0
 80038c4:	db01      	blt.n	80038ca <_malloc_r+0x1a>
 80038c6:	42a9      	cmp	r1, r5
 80038c8:	d903      	bls.n	80038d2 <_malloc_r+0x22>
 80038ca:	230c      	movs	r3, #12
 80038cc:	6033      	str	r3, [r6, #0]
 80038ce:	2000      	movs	r0, #0
 80038d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80038d2:	f000 f899 	bl	8003a08 <__malloc_lock>
 80038d6:	4921      	ldr	r1, [pc, #132]	; (800395c <_malloc_r+0xac>)
 80038d8:	680a      	ldr	r2, [r1, #0]
 80038da:	4614      	mov	r4, r2
 80038dc:	b99c      	cbnz	r4, 8003906 <_malloc_r+0x56>
 80038de:	4f20      	ldr	r7, [pc, #128]	; (8003960 <_malloc_r+0xb0>)
 80038e0:	683b      	ldr	r3, [r7, #0]
 80038e2:	b923      	cbnz	r3, 80038ee <_malloc_r+0x3e>
 80038e4:	4621      	mov	r1, r4
 80038e6:	4630      	mov	r0, r6
 80038e8:	f000 f83c 	bl	8003964 <_sbrk_r>
 80038ec:	6038      	str	r0, [r7, #0]
 80038ee:	4629      	mov	r1, r5
 80038f0:	4630      	mov	r0, r6
 80038f2:	f000 f837 	bl	8003964 <_sbrk_r>
 80038f6:	1c43      	adds	r3, r0, #1
 80038f8:	d123      	bne.n	8003942 <_malloc_r+0x92>
 80038fa:	230c      	movs	r3, #12
 80038fc:	6033      	str	r3, [r6, #0]
 80038fe:	4630      	mov	r0, r6
 8003900:	f000 f888 	bl	8003a14 <__malloc_unlock>
 8003904:	e7e3      	b.n	80038ce <_malloc_r+0x1e>
 8003906:	6823      	ldr	r3, [r4, #0]
 8003908:	1b5b      	subs	r3, r3, r5
 800390a:	d417      	bmi.n	800393c <_malloc_r+0x8c>
 800390c:	2b0b      	cmp	r3, #11
 800390e:	d903      	bls.n	8003918 <_malloc_r+0x68>
 8003910:	6023      	str	r3, [r4, #0]
 8003912:	441c      	add	r4, r3
 8003914:	6025      	str	r5, [r4, #0]
 8003916:	e004      	b.n	8003922 <_malloc_r+0x72>
 8003918:	6863      	ldr	r3, [r4, #4]
 800391a:	42a2      	cmp	r2, r4
 800391c:	bf0c      	ite	eq
 800391e:	600b      	streq	r3, [r1, #0]
 8003920:	6053      	strne	r3, [r2, #4]
 8003922:	4630      	mov	r0, r6
 8003924:	f000 f876 	bl	8003a14 <__malloc_unlock>
 8003928:	f104 000b 	add.w	r0, r4, #11
 800392c:	1d23      	adds	r3, r4, #4
 800392e:	f020 0007 	bic.w	r0, r0, #7
 8003932:	1ac2      	subs	r2, r0, r3
 8003934:	d0cc      	beq.n	80038d0 <_malloc_r+0x20>
 8003936:	1a1b      	subs	r3, r3, r0
 8003938:	50a3      	str	r3, [r4, r2]
 800393a:	e7c9      	b.n	80038d0 <_malloc_r+0x20>
 800393c:	4622      	mov	r2, r4
 800393e:	6864      	ldr	r4, [r4, #4]
 8003940:	e7cc      	b.n	80038dc <_malloc_r+0x2c>
 8003942:	1cc4      	adds	r4, r0, #3
 8003944:	f024 0403 	bic.w	r4, r4, #3
 8003948:	42a0      	cmp	r0, r4
 800394a:	d0e3      	beq.n	8003914 <_malloc_r+0x64>
 800394c:	1a21      	subs	r1, r4, r0
 800394e:	4630      	mov	r0, r6
 8003950:	f000 f808 	bl	8003964 <_sbrk_r>
 8003954:	3001      	adds	r0, #1
 8003956:	d1dd      	bne.n	8003914 <_malloc_r+0x64>
 8003958:	e7cf      	b.n	80038fa <_malloc_r+0x4a>
 800395a:	bf00      	nop
 800395c:	200001fc 	.word	0x200001fc
 8003960:	20000200 	.word	0x20000200

08003964 <_sbrk_r>:
 8003964:	b538      	push	{r3, r4, r5, lr}
 8003966:	4d06      	ldr	r5, [pc, #24]	; (8003980 <_sbrk_r+0x1c>)
 8003968:	2300      	movs	r3, #0
 800396a:	4604      	mov	r4, r0
 800396c:	4608      	mov	r0, r1
 800396e:	602b      	str	r3, [r5, #0]
 8003970:	f7fd fba6 	bl	80010c0 <_sbrk>
 8003974:	1c43      	adds	r3, r0, #1
 8003976:	d102      	bne.n	800397e <_sbrk_r+0x1a>
 8003978:	682b      	ldr	r3, [r5, #0]
 800397a:	b103      	cbz	r3, 800397e <_sbrk_r+0x1a>
 800397c:	6023      	str	r3, [r4, #0]
 800397e:	bd38      	pop	{r3, r4, r5, pc}
 8003980:	20000208 	.word	0x20000208

08003984 <__assert_func>:
 8003984:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003986:	4614      	mov	r4, r2
 8003988:	461a      	mov	r2, r3
 800398a:	4b09      	ldr	r3, [pc, #36]	; (80039b0 <__assert_func+0x2c>)
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	4605      	mov	r5, r0
 8003990:	68d8      	ldr	r0, [r3, #12]
 8003992:	b14c      	cbz	r4, 80039a8 <__assert_func+0x24>
 8003994:	4b07      	ldr	r3, [pc, #28]	; (80039b4 <__assert_func+0x30>)
 8003996:	9100      	str	r1, [sp, #0]
 8003998:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800399c:	4906      	ldr	r1, [pc, #24]	; (80039b8 <__assert_func+0x34>)
 800399e:	462b      	mov	r3, r5
 80039a0:	f000 f80e 	bl	80039c0 <fiprintf>
 80039a4:	f000 fa64 	bl	8003e70 <abort>
 80039a8:	4b04      	ldr	r3, [pc, #16]	; (80039bc <__assert_func+0x38>)
 80039aa:	461c      	mov	r4, r3
 80039ac:	e7f3      	b.n	8003996 <__assert_func+0x12>
 80039ae:	bf00      	nop
 80039b0:	2000000c 	.word	0x2000000c
 80039b4:	080046f4 	.word	0x080046f4
 80039b8:	08004701 	.word	0x08004701
 80039bc:	0800472f 	.word	0x0800472f

080039c0 <fiprintf>:
 80039c0:	b40e      	push	{r1, r2, r3}
 80039c2:	b503      	push	{r0, r1, lr}
 80039c4:	4601      	mov	r1, r0
 80039c6:	ab03      	add	r3, sp, #12
 80039c8:	4805      	ldr	r0, [pc, #20]	; (80039e0 <fiprintf+0x20>)
 80039ca:	f853 2b04 	ldr.w	r2, [r3], #4
 80039ce:	6800      	ldr	r0, [r0, #0]
 80039d0:	9301      	str	r3, [sp, #4]
 80039d2:	f000 f84f 	bl	8003a74 <_vfiprintf_r>
 80039d6:	b002      	add	sp, #8
 80039d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80039dc:	b003      	add	sp, #12
 80039de:	4770      	bx	lr
 80039e0:	2000000c 	.word	0x2000000c

080039e4 <__ascii_mbtowc>:
 80039e4:	b082      	sub	sp, #8
 80039e6:	b901      	cbnz	r1, 80039ea <__ascii_mbtowc+0x6>
 80039e8:	a901      	add	r1, sp, #4
 80039ea:	b142      	cbz	r2, 80039fe <__ascii_mbtowc+0x1a>
 80039ec:	b14b      	cbz	r3, 8003a02 <__ascii_mbtowc+0x1e>
 80039ee:	7813      	ldrb	r3, [r2, #0]
 80039f0:	600b      	str	r3, [r1, #0]
 80039f2:	7812      	ldrb	r2, [r2, #0]
 80039f4:	1e10      	subs	r0, r2, #0
 80039f6:	bf18      	it	ne
 80039f8:	2001      	movne	r0, #1
 80039fa:	b002      	add	sp, #8
 80039fc:	4770      	bx	lr
 80039fe:	4610      	mov	r0, r2
 8003a00:	e7fb      	b.n	80039fa <__ascii_mbtowc+0x16>
 8003a02:	f06f 0001 	mvn.w	r0, #1
 8003a06:	e7f8      	b.n	80039fa <__ascii_mbtowc+0x16>

08003a08 <__malloc_lock>:
 8003a08:	4801      	ldr	r0, [pc, #4]	; (8003a10 <__malloc_lock+0x8>)
 8003a0a:	f000 bbf1 	b.w	80041f0 <__retarget_lock_acquire_recursive>
 8003a0e:	bf00      	nop
 8003a10:	20000210 	.word	0x20000210

08003a14 <__malloc_unlock>:
 8003a14:	4801      	ldr	r0, [pc, #4]	; (8003a1c <__malloc_unlock+0x8>)
 8003a16:	f000 bbec 	b.w	80041f2 <__retarget_lock_release_recursive>
 8003a1a:	bf00      	nop
 8003a1c:	20000210 	.word	0x20000210

08003a20 <__sfputc_r>:
 8003a20:	6893      	ldr	r3, [r2, #8]
 8003a22:	3b01      	subs	r3, #1
 8003a24:	2b00      	cmp	r3, #0
 8003a26:	b410      	push	{r4}
 8003a28:	6093      	str	r3, [r2, #8]
 8003a2a:	da08      	bge.n	8003a3e <__sfputc_r+0x1e>
 8003a2c:	6994      	ldr	r4, [r2, #24]
 8003a2e:	42a3      	cmp	r3, r4
 8003a30:	db01      	blt.n	8003a36 <__sfputc_r+0x16>
 8003a32:	290a      	cmp	r1, #10
 8003a34:	d103      	bne.n	8003a3e <__sfputc_r+0x1e>
 8003a36:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003a3a:	f000 b94b 	b.w	8003cd4 <__swbuf_r>
 8003a3e:	6813      	ldr	r3, [r2, #0]
 8003a40:	1c58      	adds	r0, r3, #1
 8003a42:	6010      	str	r0, [r2, #0]
 8003a44:	7019      	strb	r1, [r3, #0]
 8003a46:	4608      	mov	r0, r1
 8003a48:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003a4c:	4770      	bx	lr

08003a4e <__sfputs_r>:
 8003a4e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a50:	4606      	mov	r6, r0
 8003a52:	460f      	mov	r7, r1
 8003a54:	4614      	mov	r4, r2
 8003a56:	18d5      	adds	r5, r2, r3
 8003a58:	42ac      	cmp	r4, r5
 8003a5a:	d101      	bne.n	8003a60 <__sfputs_r+0x12>
 8003a5c:	2000      	movs	r0, #0
 8003a5e:	e007      	b.n	8003a70 <__sfputs_r+0x22>
 8003a60:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003a64:	463a      	mov	r2, r7
 8003a66:	4630      	mov	r0, r6
 8003a68:	f7ff ffda 	bl	8003a20 <__sfputc_r>
 8003a6c:	1c43      	adds	r3, r0, #1
 8003a6e:	d1f3      	bne.n	8003a58 <__sfputs_r+0xa>
 8003a70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003a74 <_vfiprintf_r>:
 8003a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a78:	460d      	mov	r5, r1
 8003a7a:	b09d      	sub	sp, #116	; 0x74
 8003a7c:	4614      	mov	r4, r2
 8003a7e:	4698      	mov	r8, r3
 8003a80:	4606      	mov	r6, r0
 8003a82:	b118      	cbz	r0, 8003a8c <_vfiprintf_r+0x18>
 8003a84:	6983      	ldr	r3, [r0, #24]
 8003a86:	b90b      	cbnz	r3, 8003a8c <_vfiprintf_r+0x18>
 8003a88:	f000 fb14 	bl	80040b4 <__sinit>
 8003a8c:	4b89      	ldr	r3, [pc, #548]	; (8003cb4 <_vfiprintf_r+0x240>)
 8003a8e:	429d      	cmp	r5, r3
 8003a90:	d11b      	bne.n	8003aca <_vfiprintf_r+0x56>
 8003a92:	6875      	ldr	r5, [r6, #4]
 8003a94:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003a96:	07d9      	lsls	r1, r3, #31
 8003a98:	d405      	bmi.n	8003aa6 <_vfiprintf_r+0x32>
 8003a9a:	89ab      	ldrh	r3, [r5, #12]
 8003a9c:	059a      	lsls	r2, r3, #22
 8003a9e:	d402      	bmi.n	8003aa6 <_vfiprintf_r+0x32>
 8003aa0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003aa2:	f000 fba5 	bl	80041f0 <__retarget_lock_acquire_recursive>
 8003aa6:	89ab      	ldrh	r3, [r5, #12]
 8003aa8:	071b      	lsls	r3, r3, #28
 8003aaa:	d501      	bpl.n	8003ab0 <_vfiprintf_r+0x3c>
 8003aac:	692b      	ldr	r3, [r5, #16]
 8003aae:	b9eb      	cbnz	r3, 8003aec <_vfiprintf_r+0x78>
 8003ab0:	4629      	mov	r1, r5
 8003ab2:	4630      	mov	r0, r6
 8003ab4:	f000 f96e 	bl	8003d94 <__swsetup_r>
 8003ab8:	b1c0      	cbz	r0, 8003aec <_vfiprintf_r+0x78>
 8003aba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003abc:	07dc      	lsls	r4, r3, #31
 8003abe:	d50e      	bpl.n	8003ade <_vfiprintf_r+0x6a>
 8003ac0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003ac4:	b01d      	add	sp, #116	; 0x74
 8003ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003aca:	4b7b      	ldr	r3, [pc, #492]	; (8003cb8 <_vfiprintf_r+0x244>)
 8003acc:	429d      	cmp	r5, r3
 8003ace:	d101      	bne.n	8003ad4 <_vfiprintf_r+0x60>
 8003ad0:	68b5      	ldr	r5, [r6, #8]
 8003ad2:	e7df      	b.n	8003a94 <_vfiprintf_r+0x20>
 8003ad4:	4b79      	ldr	r3, [pc, #484]	; (8003cbc <_vfiprintf_r+0x248>)
 8003ad6:	429d      	cmp	r5, r3
 8003ad8:	bf08      	it	eq
 8003ada:	68f5      	ldreq	r5, [r6, #12]
 8003adc:	e7da      	b.n	8003a94 <_vfiprintf_r+0x20>
 8003ade:	89ab      	ldrh	r3, [r5, #12]
 8003ae0:	0598      	lsls	r0, r3, #22
 8003ae2:	d4ed      	bmi.n	8003ac0 <_vfiprintf_r+0x4c>
 8003ae4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003ae6:	f000 fb84 	bl	80041f2 <__retarget_lock_release_recursive>
 8003aea:	e7e9      	b.n	8003ac0 <_vfiprintf_r+0x4c>
 8003aec:	2300      	movs	r3, #0
 8003aee:	9309      	str	r3, [sp, #36]	; 0x24
 8003af0:	2320      	movs	r3, #32
 8003af2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003af6:	f8cd 800c 	str.w	r8, [sp, #12]
 8003afa:	2330      	movs	r3, #48	; 0x30
 8003afc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8003cc0 <_vfiprintf_r+0x24c>
 8003b00:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003b04:	f04f 0901 	mov.w	r9, #1
 8003b08:	4623      	mov	r3, r4
 8003b0a:	469a      	mov	sl, r3
 8003b0c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003b10:	b10a      	cbz	r2, 8003b16 <_vfiprintf_r+0xa2>
 8003b12:	2a25      	cmp	r2, #37	; 0x25
 8003b14:	d1f9      	bne.n	8003b0a <_vfiprintf_r+0x96>
 8003b16:	ebba 0b04 	subs.w	fp, sl, r4
 8003b1a:	d00b      	beq.n	8003b34 <_vfiprintf_r+0xc0>
 8003b1c:	465b      	mov	r3, fp
 8003b1e:	4622      	mov	r2, r4
 8003b20:	4629      	mov	r1, r5
 8003b22:	4630      	mov	r0, r6
 8003b24:	f7ff ff93 	bl	8003a4e <__sfputs_r>
 8003b28:	3001      	adds	r0, #1
 8003b2a:	f000 80aa 	beq.w	8003c82 <_vfiprintf_r+0x20e>
 8003b2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003b30:	445a      	add	r2, fp
 8003b32:	9209      	str	r2, [sp, #36]	; 0x24
 8003b34:	f89a 3000 	ldrb.w	r3, [sl]
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	f000 80a2 	beq.w	8003c82 <_vfiprintf_r+0x20e>
 8003b3e:	2300      	movs	r3, #0
 8003b40:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003b44:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003b48:	f10a 0a01 	add.w	sl, sl, #1
 8003b4c:	9304      	str	r3, [sp, #16]
 8003b4e:	9307      	str	r3, [sp, #28]
 8003b50:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003b54:	931a      	str	r3, [sp, #104]	; 0x68
 8003b56:	4654      	mov	r4, sl
 8003b58:	2205      	movs	r2, #5
 8003b5a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003b5e:	4858      	ldr	r0, [pc, #352]	; (8003cc0 <_vfiprintf_r+0x24c>)
 8003b60:	f7fc fb3e 	bl	80001e0 <memchr>
 8003b64:	9a04      	ldr	r2, [sp, #16]
 8003b66:	b9d8      	cbnz	r0, 8003ba0 <_vfiprintf_r+0x12c>
 8003b68:	06d1      	lsls	r1, r2, #27
 8003b6a:	bf44      	itt	mi
 8003b6c:	2320      	movmi	r3, #32
 8003b6e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003b72:	0713      	lsls	r3, r2, #28
 8003b74:	bf44      	itt	mi
 8003b76:	232b      	movmi	r3, #43	; 0x2b
 8003b78:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003b7c:	f89a 3000 	ldrb.w	r3, [sl]
 8003b80:	2b2a      	cmp	r3, #42	; 0x2a
 8003b82:	d015      	beq.n	8003bb0 <_vfiprintf_r+0x13c>
 8003b84:	9a07      	ldr	r2, [sp, #28]
 8003b86:	4654      	mov	r4, sl
 8003b88:	2000      	movs	r0, #0
 8003b8a:	f04f 0c0a 	mov.w	ip, #10
 8003b8e:	4621      	mov	r1, r4
 8003b90:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003b94:	3b30      	subs	r3, #48	; 0x30
 8003b96:	2b09      	cmp	r3, #9
 8003b98:	d94e      	bls.n	8003c38 <_vfiprintf_r+0x1c4>
 8003b9a:	b1b0      	cbz	r0, 8003bca <_vfiprintf_r+0x156>
 8003b9c:	9207      	str	r2, [sp, #28]
 8003b9e:	e014      	b.n	8003bca <_vfiprintf_r+0x156>
 8003ba0:	eba0 0308 	sub.w	r3, r0, r8
 8003ba4:	fa09 f303 	lsl.w	r3, r9, r3
 8003ba8:	4313      	orrs	r3, r2
 8003baa:	9304      	str	r3, [sp, #16]
 8003bac:	46a2      	mov	sl, r4
 8003bae:	e7d2      	b.n	8003b56 <_vfiprintf_r+0xe2>
 8003bb0:	9b03      	ldr	r3, [sp, #12]
 8003bb2:	1d19      	adds	r1, r3, #4
 8003bb4:	681b      	ldr	r3, [r3, #0]
 8003bb6:	9103      	str	r1, [sp, #12]
 8003bb8:	2b00      	cmp	r3, #0
 8003bba:	bfbb      	ittet	lt
 8003bbc:	425b      	neglt	r3, r3
 8003bbe:	f042 0202 	orrlt.w	r2, r2, #2
 8003bc2:	9307      	strge	r3, [sp, #28]
 8003bc4:	9307      	strlt	r3, [sp, #28]
 8003bc6:	bfb8      	it	lt
 8003bc8:	9204      	strlt	r2, [sp, #16]
 8003bca:	7823      	ldrb	r3, [r4, #0]
 8003bcc:	2b2e      	cmp	r3, #46	; 0x2e
 8003bce:	d10c      	bne.n	8003bea <_vfiprintf_r+0x176>
 8003bd0:	7863      	ldrb	r3, [r4, #1]
 8003bd2:	2b2a      	cmp	r3, #42	; 0x2a
 8003bd4:	d135      	bne.n	8003c42 <_vfiprintf_r+0x1ce>
 8003bd6:	9b03      	ldr	r3, [sp, #12]
 8003bd8:	1d1a      	adds	r2, r3, #4
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	9203      	str	r2, [sp, #12]
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	bfb8      	it	lt
 8003be2:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8003be6:	3402      	adds	r4, #2
 8003be8:	9305      	str	r3, [sp, #20]
 8003bea:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8003cd0 <_vfiprintf_r+0x25c>
 8003bee:	7821      	ldrb	r1, [r4, #0]
 8003bf0:	2203      	movs	r2, #3
 8003bf2:	4650      	mov	r0, sl
 8003bf4:	f7fc faf4 	bl	80001e0 <memchr>
 8003bf8:	b140      	cbz	r0, 8003c0c <_vfiprintf_r+0x198>
 8003bfa:	2340      	movs	r3, #64	; 0x40
 8003bfc:	eba0 000a 	sub.w	r0, r0, sl
 8003c00:	fa03 f000 	lsl.w	r0, r3, r0
 8003c04:	9b04      	ldr	r3, [sp, #16]
 8003c06:	4303      	orrs	r3, r0
 8003c08:	3401      	adds	r4, #1
 8003c0a:	9304      	str	r3, [sp, #16]
 8003c0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c10:	482c      	ldr	r0, [pc, #176]	; (8003cc4 <_vfiprintf_r+0x250>)
 8003c12:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003c16:	2206      	movs	r2, #6
 8003c18:	f7fc fae2 	bl	80001e0 <memchr>
 8003c1c:	2800      	cmp	r0, #0
 8003c1e:	d03f      	beq.n	8003ca0 <_vfiprintf_r+0x22c>
 8003c20:	4b29      	ldr	r3, [pc, #164]	; (8003cc8 <_vfiprintf_r+0x254>)
 8003c22:	bb1b      	cbnz	r3, 8003c6c <_vfiprintf_r+0x1f8>
 8003c24:	9b03      	ldr	r3, [sp, #12]
 8003c26:	3307      	adds	r3, #7
 8003c28:	f023 0307 	bic.w	r3, r3, #7
 8003c2c:	3308      	adds	r3, #8
 8003c2e:	9303      	str	r3, [sp, #12]
 8003c30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c32:	443b      	add	r3, r7
 8003c34:	9309      	str	r3, [sp, #36]	; 0x24
 8003c36:	e767      	b.n	8003b08 <_vfiprintf_r+0x94>
 8003c38:	fb0c 3202 	mla	r2, ip, r2, r3
 8003c3c:	460c      	mov	r4, r1
 8003c3e:	2001      	movs	r0, #1
 8003c40:	e7a5      	b.n	8003b8e <_vfiprintf_r+0x11a>
 8003c42:	2300      	movs	r3, #0
 8003c44:	3401      	adds	r4, #1
 8003c46:	9305      	str	r3, [sp, #20]
 8003c48:	4619      	mov	r1, r3
 8003c4a:	f04f 0c0a 	mov.w	ip, #10
 8003c4e:	4620      	mov	r0, r4
 8003c50:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003c54:	3a30      	subs	r2, #48	; 0x30
 8003c56:	2a09      	cmp	r2, #9
 8003c58:	d903      	bls.n	8003c62 <_vfiprintf_r+0x1ee>
 8003c5a:	2b00      	cmp	r3, #0
 8003c5c:	d0c5      	beq.n	8003bea <_vfiprintf_r+0x176>
 8003c5e:	9105      	str	r1, [sp, #20]
 8003c60:	e7c3      	b.n	8003bea <_vfiprintf_r+0x176>
 8003c62:	fb0c 2101 	mla	r1, ip, r1, r2
 8003c66:	4604      	mov	r4, r0
 8003c68:	2301      	movs	r3, #1
 8003c6a:	e7f0      	b.n	8003c4e <_vfiprintf_r+0x1da>
 8003c6c:	ab03      	add	r3, sp, #12
 8003c6e:	9300      	str	r3, [sp, #0]
 8003c70:	462a      	mov	r2, r5
 8003c72:	4b16      	ldr	r3, [pc, #88]	; (8003ccc <_vfiprintf_r+0x258>)
 8003c74:	a904      	add	r1, sp, #16
 8003c76:	4630      	mov	r0, r6
 8003c78:	f7fd ffe0 	bl	8001c3c <_printf_float>
 8003c7c:	4607      	mov	r7, r0
 8003c7e:	1c78      	adds	r0, r7, #1
 8003c80:	d1d6      	bne.n	8003c30 <_vfiprintf_r+0x1bc>
 8003c82:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003c84:	07d9      	lsls	r1, r3, #31
 8003c86:	d405      	bmi.n	8003c94 <_vfiprintf_r+0x220>
 8003c88:	89ab      	ldrh	r3, [r5, #12]
 8003c8a:	059a      	lsls	r2, r3, #22
 8003c8c:	d402      	bmi.n	8003c94 <_vfiprintf_r+0x220>
 8003c8e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003c90:	f000 faaf 	bl	80041f2 <__retarget_lock_release_recursive>
 8003c94:	89ab      	ldrh	r3, [r5, #12]
 8003c96:	065b      	lsls	r3, r3, #25
 8003c98:	f53f af12 	bmi.w	8003ac0 <_vfiprintf_r+0x4c>
 8003c9c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003c9e:	e711      	b.n	8003ac4 <_vfiprintf_r+0x50>
 8003ca0:	ab03      	add	r3, sp, #12
 8003ca2:	9300      	str	r3, [sp, #0]
 8003ca4:	462a      	mov	r2, r5
 8003ca6:	4b09      	ldr	r3, [pc, #36]	; (8003ccc <_vfiprintf_r+0x258>)
 8003ca8:	a904      	add	r1, sp, #16
 8003caa:	4630      	mov	r0, r6
 8003cac:	f7fe fa6a 	bl	8002184 <_printf_i>
 8003cb0:	e7e4      	b.n	8003c7c <_vfiprintf_r+0x208>
 8003cb2:	bf00      	nop
 8003cb4:	0800486c 	.word	0x0800486c
 8003cb8:	0800488c 	.word	0x0800488c
 8003cbc:	0800484c 	.word	0x0800484c
 8003cc0:	0800473a 	.word	0x0800473a
 8003cc4:	08004744 	.word	0x08004744
 8003cc8:	08001c3d 	.word	0x08001c3d
 8003ccc:	08003a4f 	.word	0x08003a4f
 8003cd0:	08004740 	.word	0x08004740

08003cd4 <__swbuf_r>:
 8003cd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cd6:	460e      	mov	r6, r1
 8003cd8:	4614      	mov	r4, r2
 8003cda:	4605      	mov	r5, r0
 8003cdc:	b118      	cbz	r0, 8003ce6 <__swbuf_r+0x12>
 8003cde:	6983      	ldr	r3, [r0, #24]
 8003ce0:	b90b      	cbnz	r3, 8003ce6 <__swbuf_r+0x12>
 8003ce2:	f000 f9e7 	bl	80040b4 <__sinit>
 8003ce6:	4b21      	ldr	r3, [pc, #132]	; (8003d6c <__swbuf_r+0x98>)
 8003ce8:	429c      	cmp	r4, r3
 8003cea:	d12b      	bne.n	8003d44 <__swbuf_r+0x70>
 8003cec:	686c      	ldr	r4, [r5, #4]
 8003cee:	69a3      	ldr	r3, [r4, #24]
 8003cf0:	60a3      	str	r3, [r4, #8]
 8003cf2:	89a3      	ldrh	r3, [r4, #12]
 8003cf4:	071a      	lsls	r2, r3, #28
 8003cf6:	d52f      	bpl.n	8003d58 <__swbuf_r+0x84>
 8003cf8:	6923      	ldr	r3, [r4, #16]
 8003cfa:	b36b      	cbz	r3, 8003d58 <__swbuf_r+0x84>
 8003cfc:	6923      	ldr	r3, [r4, #16]
 8003cfe:	6820      	ldr	r0, [r4, #0]
 8003d00:	1ac0      	subs	r0, r0, r3
 8003d02:	6963      	ldr	r3, [r4, #20]
 8003d04:	b2f6      	uxtb	r6, r6
 8003d06:	4283      	cmp	r3, r0
 8003d08:	4637      	mov	r7, r6
 8003d0a:	dc04      	bgt.n	8003d16 <__swbuf_r+0x42>
 8003d0c:	4621      	mov	r1, r4
 8003d0e:	4628      	mov	r0, r5
 8003d10:	f000 f93c 	bl	8003f8c <_fflush_r>
 8003d14:	bb30      	cbnz	r0, 8003d64 <__swbuf_r+0x90>
 8003d16:	68a3      	ldr	r3, [r4, #8]
 8003d18:	3b01      	subs	r3, #1
 8003d1a:	60a3      	str	r3, [r4, #8]
 8003d1c:	6823      	ldr	r3, [r4, #0]
 8003d1e:	1c5a      	adds	r2, r3, #1
 8003d20:	6022      	str	r2, [r4, #0]
 8003d22:	701e      	strb	r6, [r3, #0]
 8003d24:	6963      	ldr	r3, [r4, #20]
 8003d26:	3001      	adds	r0, #1
 8003d28:	4283      	cmp	r3, r0
 8003d2a:	d004      	beq.n	8003d36 <__swbuf_r+0x62>
 8003d2c:	89a3      	ldrh	r3, [r4, #12]
 8003d2e:	07db      	lsls	r3, r3, #31
 8003d30:	d506      	bpl.n	8003d40 <__swbuf_r+0x6c>
 8003d32:	2e0a      	cmp	r6, #10
 8003d34:	d104      	bne.n	8003d40 <__swbuf_r+0x6c>
 8003d36:	4621      	mov	r1, r4
 8003d38:	4628      	mov	r0, r5
 8003d3a:	f000 f927 	bl	8003f8c <_fflush_r>
 8003d3e:	b988      	cbnz	r0, 8003d64 <__swbuf_r+0x90>
 8003d40:	4638      	mov	r0, r7
 8003d42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003d44:	4b0a      	ldr	r3, [pc, #40]	; (8003d70 <__swbuf_r+0x9c>)
 8003d46:	429c      	cmp	r4, r3
 8003d48:	d101      	bne.n	8003d4e <__swbuf_r+0x7a>
 8003d4a:	68ac      	ldr	r4, [r5, #8]
 8003d4c:	e7cf      	b.n	8003cee <__swbuf_r+0x1a>
 8003d4e:	4b09      	ldr	r3, [pc, #36]	; (8003d74 <__swbuf_r+0xa0>)
 8003d50:	429c      	cmp	r4, r3
 8003d52:	bf08      	it	eq
 8003d54:	68ec      	ldreq	r4, [r5, #12]
 8003d56:	e7ca      	b.n	8003cee <__swbuf_r+0x1a>
 8003d58:	4621      	mov	r1, r4
 8003d5a:	4628      	mov	r0, r5
 8003d5c:	f000 f81a 	bl	8003d94 <__swsetup_r>
 8003d60:	2800      	cmp	r0, #0
 8003d62:	d0cb      	beq.n	8003cfc <__swbuf_r+0x28>
 8003d64:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8003d68:	e7ea      	b.n	8003d40 <__swbuf_r+0x6c>
 8003d6a:	bf00      	nop
 8003d6c:	0800486c 	.word	0x0800486c
 8003d70:	0800488c 	.word	0x0800488c
 8003d74:	0800484c 	.word	0x0800484c

08003d78 <__ascii_wctomb>:
 8003d78:	b149      	cbz	r1, 8003d8e <__ascii_wctomb+0x16>
 8003d7a:	2aff      	cmp	r2, #255	; 0xff
 8003d7c:	bf85      	ittet	hi
 8003d7e:	238a      	movhi	r3, #138	; 0x8a
 8003d80:	6003      	strhi	r3, [r0, #0]
 8003d82:	700a      	strbls	r2, [r1, #0]
 8003d84:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8003d88:	bf98      	it	ls
 8003d8a:	2001      	movls	r0, #1
 8003d8c:	4770      	bx	lr
 8003d8e:	4608      	mov	r0, r1
 8003d90:	4770      	bx	lr
	...

08003d94 <__swsetup_r>:
 8003d94:	4b32      	ldr	r3, [pc, #200]	; (8003e60 <__swsetup_r+0xcc>)
 8003d96:	b570      	push	{r4, r5, r6, lr}
 8003d98:	681d      	ldr	r5, [r3, #0]
 8003d9a:	4606      	mov	r6, r0
 8003d9c:	460c      	mov	r4, r1
 8003d9e:	b125      	cbz	r5, 8003daa <__swsetup_r+0x16>
 8003da0:	69ab      	ldr	r3, [r5, #24]
 8003da2:	b913      	cbnz	r3, 8003daa <__swsetup_r+0x16>
 8003da4:	4628      	mov	r0, r5
 8003da6:	f000 f985 	bl	80040b4 <__sinit>
 8003daa:	4b2e      	ldr	r3, [pc, #184]	; (8003e64 <__swsetup_r+0xd0>)
 8003dac:	429c      	cmp	r4, r3
 8003dae:	d10f      	bne.n	8003dd0 <__swsetup_r+0x3c>
 8003db0:	686c      	ldr	r4, [r5, #4]
 8003db2:	89a3      	ldrh	r3, [r4, #12]
 8003db4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003db8:	0719      	lsls	r1, r3, #28
 8003dba:	d42c      	bmi.n	8003e16 <__swsetup_r+0x82>
 8003dbc:	06dd      	lsls	r5, r3, #27
 8003dbe:	d411      	bmi.n	8003de4 <__swsetup_r+0x50>
 8003dc0:	2309      	movs	r3, #9
 8003dc2:	6033      	str	r3, [r6, #0]
 8003dc4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003dc8:	81a3      	strh	r3, [r4, #12]
 8003dca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003dce:	e03e      	b.n	8003e4e <__swsetup_r+0xba>
 8003dd0:	4b25      	ldr	r3, [pc, #148]	; (8003e68 <__swsetup_r+0xd4>)
 8003dd2:	429c      	cmp	r4, r3
 8003dd4:	d101      	bne.n	8003dda <__swsetup_r+0x46>
 8003dd6:	68ac      	ldr	r4, [r5, #8]
 8003dd8:	e7eb      	b.n	8003db2 <__swsetup_r+0x1e>
 8003dda:	4b24      	ldr	r3, [pc, #144]	; (8003e6c <__swsetup_r+0xd8>)
 8003ddc:	429c      	cmp	r4, r3
 8003dde:	bf08      	it	eq
 8003de0:	68ec      	ldreq	r4, [r5, #12]
 8003de2:	e7e6      	b.n	8003db2 <__swsetup_r+0x1e>
 8003de4:	0758      	lsls	r0, r3, #29
 8003de6:	d512      	bpl.n	8003e0e <__swsetup_r+0x7a>
 8003de8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003dea:	b141      	cbz	r1, 8003dfe <__swsetup_r+0x6a>
 8003dec:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003df0:	4299      	cmp	r1, r3
 8003df2:	d002      	beq.n	8003dfa <__swsetup_r+0x66>
 8003df4:	4630      	mov	r0, r6
 8003df6:	f7ff fd0b 	bl	8003810 <_free_r>
 8003dfa:	2300      	movs	r3, #0
 8003dfc:	6363      	str	r3, [r4, #52]	; 0x34
 8003dfe:	89a3      	ldrh	r3, [r4, #12]
 8003e00:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003e04:	81a3      	strh	r3, [r4, #12]
 8003e06:	2300      	movs	r3, #0
 8003e08:	6063      	str	r3, [r4, #4]
 8003e0a:	6923      	ldr	r3, [r4, #16]
 8003e0c:	6023      	str	r3, [r4, #0]
 8003e0e:	89a3      	ldrh	r3, [r4, #12]
 8003e10:	f043 0308 	orr.w	r3, r3, #8
 8003e14:	81a3      	strh	r3, [r4, #12]
 8003e16:	6923      	ldr	r3, [r4, #16]
 8003e18:	b94b      	cbnz	r3, 8003e2e <__swsetup_r+0x9a>
 8003e1a:	89a3      	ldrh	r3, [r4, #12]
 8003e1c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003e20:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003e24:	d003      	beq.n	8003e2e <__swsetup_r+0x9a>
 8003e26:	4621      	mov	r1, r4
 8003e28:	4630      	mov	r0, r6
 8003e2a:	f000 fa07 	bl	800423c <__smakebuf_r>
 8003e2e:	89a0      	ldrh	r0, [r4, #12]
 8003e30:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003e34:	f010 0301 	ands.w	r3, r0, #1
 8003e38:	d00a      	beq.n	8003e50 <__swsetup_r+0xbc>
 8003e3a:	2300      	movs	r3, #0
 8003e3c:	60a3      	str	r3, [r4, #8]
 8003e3e:	6963      	ldr	r3, [r4, #20]
 8003e40:	425b      	negs	r3, r3
 8003e42:	61a3      	str	r3, [r4, #24]
 8003e44:	6923      	ldr	r3, [r4, #16]
 8003e46:	b943      	cbnz	r3, 8003e5a <__swsetup_r+0xc6>
 8003e48:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003e4c:	d1ba      	bne.n	8003dc4 <__swsetup_r+0x30>
 8003e4e:	bd70      	pop	{r4, r5, r6, pc}
 8003e50:	0781      	lsls	r1, r0, #30
 8003e52:	bf58      	it	pl
 8003e54:	6963      	ldrpl	r3, [r4, #20]
 8003e56:	60a3      	str	r3, [r4, #8]
 8003e58:	e7f4      	b.n	8003e44 <__swsetup_r+0xb0>
 8003e5a:	2000      	movs	r0, #0
 8003e5c:	e7f7      	b.n	8003e4e <__swsetup_r+0xba>
 8003e5e:	bf00      	nop
 8003e60:	2000000c 	.word	0x2000000c
 8003e64:	0800486c 	.word	0x0800486c
 8003e68:	0800488c 	.word	0x0800488c
 8003e6c:	0800484c 	.word	0x0800484c

08003e70 <abort>:
 8003e70:	b508      	push	{r3, lr}
 8003e72:	2006      	movs	r0, #6
 8003e74:	f000 fa4a 	bl	800430c <raise>
 8003e78:	2001      	movs	r0, #1
 8003e7a:	f7fd f8f1 	bl	8001060 <_exit>
	...

08003e80 <__sflush_r>:
 8003e80:	898a      	ldrh	r2, [r1, #12]
 8003e82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e86:	4605      	mov	r5, r0
 8003e88:	0710      	lsls	r0, r2, #28
 8003e8a:	460c      	mov	r4, r1
 8003e8c:	d458      	bmi.n	8003f40 <__sflush_r+0xc0>
 8003e8e:	684b      	ldr	r3, [r1, #4]
 8003e90:	2b00      	cmp	r3, #0
 8003e92:	dc05      	bgt.n	8003ea0 <__sflush_r+0x20>
 8003e94:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003e96:	2b00      	cmp	r3, #0
 8003e98:	dc02      	bgt.n	8003ea0 <__sflush_r+0x20>
 8003e9a:	2000      	movs	r0, #0
 8003e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003ea0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003ea2:	2e00      	cmp	r6, #0
 8003ea4:	d0f9      	beq.n	8003e9a <__sflush_r+0x1a>
 8003ea6:	2300      	movs	r3, #0
 8003ea8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003eac:	682f      	ldr	r7, [r5, #0]
 8003eae:	602b      	str	r3, [r5, #0]
 8003eb0:	d032      	beq.n	8003f18 <__sflush_r+0x98>
 8003eb2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003eb4:	89a3      	ldrh	r3, [r4, #12]
 8003eb6:	075a      	lsls	r2, r3, #29
 8003eb8:	d505      	bpl.n	8003ec6 <__sflush_r+0x46>
 8003eba:	6863      	ldr	r3, [r4, #4]
 8003ebc:	1ac0      	subs	r0, r0, r3
 8003ebe:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003ec0:	b10b      	cbz	r3, 8003ec6 <__sflush_r+0x46>
 8003ec2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003ec4:	1ac0      	subs	r0, r0, r3
 8003ec6:	2300      	movs	r3, #0
 8003ec8:	4602      	mov	r2, r0
 8003eca:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003ecc:	6a21      	ldr	r1, [r4, #32]
 8003ece:	4628      	mov	r0, r5
 8003ed0:	47b0      	blx	r6
 8003ed2:	1c43      	adds	r3, r0, #1
 8003ed4:	89a3      	ldrh	r3, [r4, #12]
 8003ed6:	d106      	bne.n	8003ee6 <__sflush_r+0x66>
 8003ed8:	6829      	ldr	r1, [r5, #0]
 8003eda:	291d      	cmp	r1, #29
 8003edc:	d82c      	bhi.n	8003f38 <__sflush_r+0xb8>
 8003ede:	4a2a      	ldr	r2, [pc, #168]	; (8003f88 <__sflush_r+0x108>)
 8003ee0:	40ca      	lsrs	r2, r1
 8003ee2:	07d6      	lsls	r6, r2, #31
 8003ee4:	d528      	bpl.n	8003f38 <__sflush_r+0xb8>
 8003ee6:	2200      	movs	r2, #0
 8003ee8:	6062      	str	r2, [r4, #4]
 8003eea:	04d9      	lsls	r1, r3, #19
 8003eec:	6922      	ldr	r2, [r4, #16]
 8003eee:	6022      	str	r2, [r4, #0]
 8003ef0:	d504      	bpl.n	8003efc <__sflush_r+0x7c>
 8003ef2:	1c42      	adds	r2, r0, #1
 8003ef4:	d101      	bne.n	8003efa <__sflush_r+0x7a>
 8003ef6:	682b      	ldr	r3, [r5, #0]
 8003ef8:	b903      	cbnz	r3, 8003efc <__sflush_r+0x7c>
 8003efa:	6560      	str	r0, [r4, #84]	; 0x54
 8003efc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003efe:	602f      	str	r7, [r5, #0]
 8003f00:	2900      	cmp	r1, #0
 8003f02:	d0ca      	beq.n	8003e9a <__sflush_r+0x1a>
 8003f04:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003f08:	4299      	cmp	r1, r3
 8003f0a:	d002      	beq.n	8003f12 <__sflush_r+0x92>
 8003f0c:	4628      	mov	r0, r5
 8003f0e:	f7ff fc7f 	bl	8003810 <_free_r>
 8003f12:	2000      	movs	r0, #0
 8003f14:	6360      	str	r0, [r4, #52]	; 0x34
 8003f16:	e7c1      	b.n	8003e9c <__sflush_r+0x1c>
 8003f18:	6a21      	ldr	r1, [r4, #32]
 8003f1a:	2301      	movs	r3, #1
 8003f1c:	4628      	mov	r0, r5
 8003f1e:	47b0      	blx	r6
 8003f20:	1c41      	adds	r1, r0, #1
 8003f22:	d1c7      	bne.n	8003eb4 <__sflush_r+0x34>
 8003f24:	682b      	ldr	r3, [r5, #0]
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	d0c4      	beq.n	8003eb4 <__sflush_r+0x34>
 8003f2a:	2b1d      	cmp	r3, #29
 8003f2c:	d001      	beq.n	8003f32 <__sflush_r+0xb2>
 8003f2e:	2b16      	cmp	r3, #22
 8003f30:	d101      	bne.n	8003f36 <__sflush_r+0xb6>
 8003f32:	602f      	str	r7, [r5, #0]
 8003f34:	e7b1      	b.n	8003e9a <__sflush_r+0x1a>
 8003f36:	89a3      	ldrh	r3, [r4, #12]
 8003f38:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003f3c:	81a3      	strh	r3, [r4, #12]
 8003f3e:	e7ad      	b.n	8003e9c <__sflush_r+0x1c>
 8003f40:	690f      	ldr	r7, [r1, #16]
 8003f42:	2f00      	cmp	r7, #0
 8003f44:	d0a9      	beq.n	8003e9a <__sflush_r+0x1a>
 8003f46:	0793      	lsls	r3, r2, #30
 8003f48:	680e      	ldr	r6, [r1, #0]
 8003f4a:	bf08      	it	eq
 8003f4c:	694b      	ldreq	r3, [r1, #20]
 8003f4e:	600f      	str	r7, [r1, #0]
 8003f50:	bf18      	it	ne
 8003f52:	2300      	movne	r3, #0
 8003f54:	eba6 0807 	sub.w	r8, r6, r7
 8003f58:	608b      	str	r3, [r1, #8]
 8003f5a:	f1b8 0f00 	cmp.w	r8, #0
 8003f5e:	dd9c      	ble.n	8003e9a <__sflush_r+0x1a>
 8003f60:	6a21      	ldr	r1, [r4, #32]
 8003f62:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003f64:	4643      	mov	r3, r8
 8003f66:	463a      	mov	r2, r7
 8003f68:	4628      	mov	r0, r5
 8003f6a:	47b0      	blx	r6
 8003f6c:	2800      	cmp	r0, #0
 8003f6e:	dc06      	bgt.n	8003f7e <__sflush_r+0xfe>
 8003f70:	89a3      	ldrh	r3, [r4, #12]
 8003f72:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003f76:	81a3      	strh	r3, [r4, #12]
 8003f78:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003f7c:	e78e      	b.n	8003e9c <__sflush_r+0x1c>
 8003f7e:	4407      	add	r7, r0
 8003f80:	eba8 0800 	sub.w	r8, r8, r0
 8003f84:	e7e9      	b.n	8003f5a <__sflush_r+0xda>
 8003f86:	bf00      	nop
 8003f88:	20400001 	.word	0x20400001

08003f8c <_fflush_r>:
 8003f8c:	b538      	push	{r3, r4, r5, lr}
 8003f8e:	690b      	ldr	r3, [r1, #16]
 8003f90:	4605      	mov	r5, r0
 8003f92:	460c      	mov	r4, r1
 8003f94:	b913      	cbnz	r3, 8003f9c <_fflush_r+0x10>
 8003f96:	2500      	movs	r5, #0
 8003f98:	4628      	mov	r0, r5
 8003f9a:	bd38      	pop	{r3, r4, r5, pc}
 8003f9c:	b118      	cbz	r0, 8003fa6 <_fflush_r+0x1a>
 8003f9e:	6983      	ldr	r3, [r0, #24]
 8003fa0:	b90b      	cbnz	r3, 8003fa6 <_fflush_r+0x1a>
 8003fa2:	f000 f887 	bl	80040b4 <__sinit>
 8003fa6:	4b14      	ldr	r3, [pc, #80]	; (8003ff8 <_fflush_r+0x6c>)
 8003fa8:	429c      	cmp	r4, r3
 8003faa:	d11b      	bne.n	8003fe4 <_fflush_r+0x58>
 8003fac:	686c      	ldr	r4, [r5, #4]
 8003fae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003fb2:	2b00      	cmp	r3, #0
 8003fb4:	d0ef      	beq.n	8003f96 <_fflush_r+0xa>
 8003fb6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003fb8:	07d0      	lsls	r0, r2, #31
 8003fba:	d404      	bmi.n	8003fc6 <_fflush_r+0x3a>
 8003fbc:	0599      	lsls	r1, r3, #22
 8003fbe:	d402      	bmi.n	8003fc6 <_fflush_r+0x3a>
 8003fc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003fc2:	f000 f915 	bl	80041f0 <__retarget_lock_acquire_recursive>
 8003fc6:	4628      	mov	r0, r5
 8003fc8:	4621      	mov	r1, r4
 8003fca:	f7ff ff59 	bl	8003e80 <__sflush_r>
 8003fce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003fd0:	07da      	lsls	r2, r3, #31
 8003fd2:	4605      	mov	r5, r0
 8003fd4:	d4e0      	bmi.n	8003f98 <_fflush_r+0xc>
 8003fd6:	89a3      	ldrh	r3, [r4, #12]
 8003fd8:	059b      	lsls	r3, r3, #22
 8003fda:	d4dd      	bmi.n	8003f98 <_fflush_r+0xc>
 8003fdc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003fde:	f000 f908 	bl	80041f2 <__retarget_lock_release_recursive>
 8003fe2:	e7d9      	b.n	8003f98 <_fflush_r+0xc>
 8003fe4:	4b05      	ldr	r3, [pc, #20]	; (8003ffc <_fflush_r+0x70>)
 8003fe6:	429c      	cmp	r4, r3
 8003fe8:	d101      	bne.n	8003fee <_fflush_r+0x62>
 8003fea:	68ac      	ldr	r4, [r5, #8]
 8003fec:	e7df      	b.n	8003fae <_fflush_r+0x22>
 8003fee:	4b04      	ldr	r3, [pc, #16]	; (8004000 <_fflush_r+0x74>)
 8003ff0:	429c      	cmp	r4, r3
 8003ff2:	bf08      	it	eq
 8003ff4:	68ec      	ldreq	r4, [r5, #12]
 8003ff6:	e7da      	b.n	8003fae <_fflush_r+0x22>
 8003ff8:	0800486c 	.word	0x0800486c
 8003ffc:	0800488c 	.word	0x0800488c
 8004000:	0800484c 	.word	0x0800484c

08004004 <std>:
 8004004:	2300      	movs	r3, #0
 8004006:	b510      	push	{r4, lr}
 8004008:	4604      	mov	r4, r0
 800400a:	e9c0 3300 	strd	r3, r3, [r0]
 800400e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004012:	6083      	str	r3, [r0, #8]
 8004014:	8181      	strh	r1, [r0, #12]
 8004016:	6643      	str	r3, [r0, #100]	; 0x64
 8004018:	81c2      	strh	r2, [r0, #14]
 800401a:	6183      	str	r3, [r0, #24]
 800401c:	4619      	mov	r1, r3
 800401e:	2208      	movs	r2, #8
 8004020:	305c      	adds	r0, #92	; 0x5c
 8004022:	f7fd fd63 	bl	8001aec <memset>
 8004026:	4b05      	ldr	r3, [pc, #20]	; (800403c <std+0x38>)
 8004028:	6263      	str	r3, [r4, #36]	; 0x24
 800402a:	4b05      	ldr	r3, [pc, #20]	; (8004040 <std+0x3c>)
 800402c:	62a3      	str	r3, [r4, #40]	; 0x28
 800402e:	4b05      	ldr	r3, [pc, #20]	; (8004044 <std+0x40>)
 8004030:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004032:	4b05      	ldr	r3, [pc, #20]	; (8004048 <std+0x44>)
 8004034:	6224      	str	r4, [r4, #32]
 8004036:	6323      	str	r3, [r4, #48]	; 0x30
 8004038:	bd10      	pop	{r4, pc}
 800403a:	bf00      	nop
 800403c:	08004345 	.word	0x08004345
 8004040:	08004367 	.word	0x08004367
 8004044:	0800439f 	.word	0x0800439f
 8004048:	080043c3 	.word	0x080043c3

0800404c <_cleanup_r>:
 800404c:	4901      	ldr	r1, [pc, #4]	; (8004054 <_cleanup_r+0x8>)
 800404e:	f000 b8af 	b.w	80041b0 <_fwalk_reent>
 8004052:	bf00      	nop
 8004054:	08003f8d 	.word	0x08003f8d

08004058 <__sfmoreglue>:
 8004058:	b570      	push	{r4, r5, r6, lr}
 800405a:	1e4a      	subs	r2, r1, #1
 800405c:	2568      	movs	r5, #104	; 0x68
 800405e:	4355      	muls	r5, r2
 8004060:	460e      	mov	r6, r1
 8004062:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004066:	f7ff fc23 	bl	80038b0 <_malloc_r>
 800406a:	4604      	mov	r4, r0
 800406c:	b140      	cbz	r0, 8004080 <__sfmoreglue+0x28>
 800406e:	2100      	movs	r1, #0
 8004070:	e9c0 1600 	strd	r1, r6, [r0]
 8004074:	300c      	adds	r0, #12
 8004076:	60a0      	str	r0, [r4, #8]
 8004078:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800407c:	f7fd fd36 	bl	8001aec <memset>
 8004080:	4620      	mov	r0, r4
 8004082:	bd70      	pop	{r4, r5, r6, pc}

08004084 <__sfp_lock_acquire>:
 8004084:	4801      	ldr	r0, [pc, #4]	; (800408c <__sfp_lock_acquire+0x8>)
 8004086:	f000 b8b3 	b.w	80041f0 <__retarget_lock_acquire_recursive>
 800408a:	bf00      	nop
 800408c:	20000214 	.word	0x20000214

08004090 <__sfp_lock_release>:
 8004090:	4801      	ldr	r0, [pc, #4]	; (8004098 <__sfp_lock_release+0x8>)
 8004092:	f000 b8ae 	b.w	80041f2 <__retarget_lock_release_recursive>
 8004096:	bf00      	nop
 8004098:	20000214 	.word	0x20000214

0800409c <__sinit_lock_acquire>:
 800409c:	4801      	ldr	r0, [pc, #4]	; (80040a4 <__sinit_lock_acquire+0x8>)
 800409e:	f000 b8a7 	b.w	80041f0 <__retarget_lock_acquire_recursive>
 80040a2:	bf00      	nop
 80040a4:	2000020f 	.word	0x2000020f

080040a8 <__sinit_lock_release>:
 80040a8:	4801      	ldr	r0, [pc, #4]	; (80040b0 <__sinit_lock_release+0x8>)
 80040aa:	f000 b8a2 	b.w	80041f2 <__retarget_lock_release_recursive>
 80040ae:	bf00      	nop
 80040b0:	2000020f 	.word	0x2000020f

080040b4 <__sinit>:
 80040b4:	b510      	push	{r4, lr}
 80040b6:	4604      	mov	r4, r0
 80040b8:	f7ff fff0 	bl	800409c <__sinit_lock_acquire>
 80040bc:	69a3      	ldr	r3, [r4, #24]
 80040be:	b11b      	cbz	r3, 80040c8 <__sinit+0x14>
 80040c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80040c4:	f7ff bff0 	b.w	80040a8 <__sinit_lock_release>
 80040c8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80040cc:	6523      	str	r3, [r4, #80]	; 0x50
 80040ce:	4b13      	ldr	r3, [pc, #76]	; (800411c <__sinit+0x68>)
 80040d0:	4a13      	ldr	r2, [pc, #76]	; (8004120 <__sinit+0x6c>)
 80040d2:	681b      	ldr	r3, [r3, #0]
 80040d4:	62a2      	str	r2, [r4, #40]	; 0x28
 80040d6:	42a3      	cmp	r3, r4
 80040d8:	bf04      	itt	eq
 80040da:	2301      	moveq	r3, #1
 80040dc:	61a3      	streq	r3, [r4, #24]
 80040de:	4620      	mov	r0, r4
 80040e0:	f000 f820 	bl	8004124 <__sfp>
 80040e4:	6060      	str	r0, [r4, #4]
 80040e6:	4620      	mov	r0, r4
 80040e8:	f000 f81c 	bl	8004124 <__sfp>
 80040ec:	60a0      	str	r0, [r4, #8]
 80040ee:	4620      	mov	r0, r4
 80040f0:	f000 f818 	bl	8004124 <__sfp>
 80040f4:	2200      	movs	r2, #0
 80040f6:	60e0      	str	r0, [r4, #12]
 80040f8:	2104      	movs	r1, #4
 80040fa:	6860      	ldr	r0, [r4, #4]
 80040fc:	f7ff ff82 	bl	8004004 <std>
 8004100:	68a0      	ldr	r0, [r4, #8]
 8004102:	2201      	movs	r2, #1
 8004104:	2109      	movs	r1, #9
 8004106:	f7ff ff7d 	bl	8004004 <std>
 800410a:	68e0      	ldr	r0, [r4, #12]
 800410c:	2202      	movs	r2, #2
 800410e:	2112      	movs	r1, #18
 8004110:	f7ff ff78 	bl	8004004 <std>
 8004114:	2301      	movs	r3, #1
 8004116:	61a3      	str	r3, [r4, #24]
 8004118:	e7d2      	b.n	80040c0 <__sinit+0xc>
 800411a:	bf00      	nop
 800411c:	080044c8 	.word	0x080044c8
 8004120:	0800404d 	.word	0x0800404d

08004124 <__sfp>:
 8004124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004126:	4607      	mov	r7, r0
 8004128:	f7ff ffac 	bl	8004084 <__sfp_lock_acquire>
 800412c:	4b1e      	ldr	r3, [pc, #120]	; (80041a8 <__sfp+0x84>)
 800412e:	681e      	ldr	r6, [r3, #0]
 8004130:	69b3      	ldr	r3, [r6, #24]
 8004132:	b913      	cbnz	r3, 800413a <__sfp+0x16>
 8004134:	4630      	mov	r0, r6
 8004136:	f7ff ffbd 	bl	80040b4 <__sinit>
 800413a:	3648      	adds	r6, #72	; 0x48
 800413c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8004140:	3b01      	subs	r3, #1
 8004142:	d503      	bpl.n	800414c <__sfp+0x28>
 8004144:	6833      	ldr	r3, [r6, #0]
 8004146:	b30b      	cbz	r3, 800418c <__sfp+0x68>
 8004148:	6836      	ldr	r6, [r6, #0]
 800414a:	e7f7      	b.n	800413c <__sfp+0x18>
 800414c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004150:	b9d5      	cbnz	r5, 8004188 <__sfp+0x64>
 8004152:	4b16      	ldr	r3, [pc, #88]	; (80041ac <__sfp+0x88>)
 8004154:	60e3      	str	r3, [r4, #12]
 8004156:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800415a:	6665      	str	r5, [r4, #100]	; 0x64
 800415c:	f000 f847 	bl	80041ee <__retarget_lock_init_recursive>
 8004160:	f7ff ff96 	bl	8004090 <__sfp_lock_release>
 8004164:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8004168:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800416c:	6025      	str	r5, [r4, #0]
 800416e:	61a5      	str	r5, [r4, #24]
 8004170:	2208      	movs	r2, #8
 8004172:	4629      	mov	r1, r5
 8004174:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004178:	f7fd fcb8 	bl	8001aec <memset>
 800417c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004180:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004184:	4620      	mov	r0, r4
 8004186:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004188:	3468      	adds	r4, #104	; 0x68
 800418a:	e7d9      	b.n	8004140 <__sfp+0x1c>
 800418c:	2104      	movs	r1, #4
 800418e:	4638      	mov	r0, r7
 8004190:	f7ff ff62 	bl	8004058 <__sfmoreglue>
 8004194:	4604      	mov	r4, r0
 8004196:	6030      	str	r0, [r6, #0]
 8004198:	2800      	cmp	r0, #0
 800419a:	d1d5      	bne.n	8004148 <__sfp+0x24>
 800419c:	f7ff ff78 	bl	8004090 <__sfp_lock_release>
 80041a0:	230c      	movs	r3, #12
 80041a2:	603b      	str	r3, [r7, #0]
 80041a4:	e7ee      	b.n	8004184 <__sfp+0x60>
 80041a6:	bf00      	nop
 80041a8:	080044c8 	.word	0x080044c8
 80041ac:	ffff0001 	.word	0xffff0001

080041b0 <_fwalk_reent>:
 80041b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80041b4:	4606      	mov	r6, r0
 80041b6:	4688      	mov	r8, r1
 80041b8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80041bc:	2700      	movs	r7, #0
 80041be:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80041c2:	f1b9 0901 	subs.w	r9, r9, #1
 80041c6:	d505      	bpl.n	80041d4 <_fwalk_reent+0x24>
 80041c8:	6824      	ldr	r4, [r4, #0]
 80041ca:	2c00      	cmp	r4, #0
 80041cc:	d1f7      	bne.n	80041be <_fwalk_reent+0xe>
 80041ce:	4638      	mov	r0, r7
 80041d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80041d4:	89ab      	ldrh	r3, [r5, #12]
 80041d6:	2b01      	cmp	r3, #1
 80041d8:	d907      	bls.n	80041ea <_fwalk_reent+0x3a>
 80041da:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80041de:	3301      	adds	r3, #1
 80041e0:	d003      	beq.n	80041ea <_fwalk_reent+0x3a>
 80041e2:	4629      	mov	r1, r5
 80041e4:	4630      	mov	r0, r6
 80041e6:	47c0      	blx	r8
 80041e8:	4307      	orrs	r7, r0
 80041ea:	3568      	adds	r5, #104	; 0x68
 80041ec:	e7e9      	b.n	80041c2 <_fwalk_reent+0x12>

080041ee <__retarget_lock_init_recursive>:
 80041ee:	4770      	bx	lr

080041f0 <__retarget_lock_acquire_recursive>:
 80041f0:	4770      	bx	lr

080041f2 <__retarget_lock_release_recursive>:
 80041f2:	4770      	bx	lr

080041f4 <__swhatbuf_r>:
 80041f4:	b570      	push	{r4, r5, r6, lr}
 80041f6:	460e      	mov	r6, r1
 80041f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80041fc:	2900      	cmp	r1, #0
 80041fe:	b096      	sub	sp, #88	; 0x58
 8004200:	4614      	mov	r4, r2
 8004202:	461d      	mov	r5, r3
 8004204:	da07      	bge.n	8004216 <__swhatbuf_r+0x22>
 8004206:	2300      	movs	r3, #0
 8004208:	602b      	str	r3, [r5, #0]
 800420a:	89b3      	ldrh	r3, [r6, #12]
 800420c:	061a      	lsls	r2, r3, #24
 800420e:	d410      	bmi.n	8004232 <__swhatbuf_r+0x3e>
 8004210:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004214:	e00e      	b.n	8004234 <__swhatbuf_r+0x40>
 8004216:	466a      	mov	r2, sp
 8004218:	f000 f8fa 	bl	8004410 <_fstat_r>
 800421c:	2800      	cmp	r0, #0
 800421e:	dbf2      	blt.n	8004206 <__swhatbuf_r+0x12>
 8004220:	9a01      	ldr	r2, [sp, #4]
 8004222:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004226:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800422a:	425a      	negs	r2, r3
 800422c:	415a      	adcs	r2, r3
 800422e:	602a      	str	r2, [r5, #0]
 8004230:	e7ee      	b.n	8004210 <__swhatbuf_r+0x1c>
 8004232:	2340      	movs	r3, #64	; 0x40
 8004234:	2000      	movs	r0, #0
 8004236:	6023      	str	r3, [r4, #0]
 8004238:	b016      	add	sp, #88	; 0x58
 800423a:	bd70      	pop	{r4, r5, r6, pc}

0800423c <__smakebuf_r>:
 800423c:	898b      	ldrh	r3, [r1, #12]
 800423e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004240:	079d      	lsls	r5, r3, #30
 8004242:	4606      	mov	r6, r0
 8004244:	460c      	mov	r4, r1
 8004246:	d507      	bpl.n	8004258 <__smakebuf_r+0x1c>
 8004248:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800424c:	6023      	str	r3, [r4, #0]
 800424e:	6123      	str	r3, [r4, #16]
 8004250:	2301      	movs	r3, #1
 8004252:	6163      	str	r3, [r4, #20]
 8004254:	b002      	add	sp, #8
 8004256:	bd70      	pop	{r4, r5, r6, pc}
 8004258:	ab01      	add	r3, sp, #4
 800425a:	466a      	mov	r2, sp
 800425c:	f7ff ffca 	bl	80041f4 <__swhatbuf_r>
 8004260:	9900      	ldr	r1, [sp, #0]
 8004262:	4605      	mov	r5, r0
 8004264:	4630      	mov	r0, r6
 8004266:	f7ff fb23 	bl	80038b0 <_malloc_r>
 800426a:	b948      	cbnz	r0, 8004280 <__smakebuf_r+0x44>
 800426c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004270:	059a      	lsls	r2, r3, #22
 8004272:	d4ef      	bmi.n	8004254 <__smakebuf_r+0x18>
 8004274:	f023 0303 	bic.w	r3, r3, #3
 8004278:	f043 0302 	orr.w	r3, r3, #2
 800427c:	81a3      	strh	r3, [r4, #12]
 800427e:	e7e3      	b.n	8004248 <__smakebuf_r+0xc>
 8004280:	4b0d      	ldr	r3, [pc, #52]	; (80042b8 <__smakebuf_r+0x7c>)
 8004282:	62b3      	str	r3, [r6, #40]	; 0x28
 8004284:	89a3      	ldrh	r3, [r4, #12]
 8004286:	6020      	str	r0, [r4, #0]
 8004288:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800428c:	81a3      	strh	r3, [r4, #12]
 800428e:	9b00      	ldr	r3, [sp, #0]
 8004290:	6163      	str	r3, [r4, #20]
 8004292:	9b01      	ldr	r3, [sp, #4]
 8004294:	6120      	str	r0, [r4, #16]
 8004296:	b15b      	cbz	r3, 80042b0 <__smakebuf_r+0x74>
 8004298:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800429c:	4630      	mov	r0, r6
 800429e:	f000 f8c9 	bl	8004434 <_isatty_r>
 80042a2:	b128      	cbz	r0, 80042b0 <__smakebuf_r+0x74>
 80042a4:	89a3      	ldrh	r3, [r4, #12]
 80042a6:	f023 0303 	bic.w	r3, r3, #3
 80042aa:	f043 0301 	orr.w	r3, r3, #1
 80042ae:	81a3      	strh	r3, [r4, #12]
 80042b0:	89a0      	ldrh	r0, [r4, #12]
 80042b2:	4305      	orrs	r5, r0
 80042b4:	81a5      	strh	r5, [r4, #12]
 80042b6:	e7cd      	b.n	8004254 <__smakebuf_r+0x18>
 80042b8:	0800404d 	.word	0x0800404d

080042bc <_raise_r>:
 80042bc:	291f      	cmp	r1, #31
 80042be:	b538      	push	{r3, r4, r5, lr}
 80042c0:	4604      	mov	r4, r0
 80042c2:	460d      	mov	r5, r1
 80042c4:	d904      	bls.n	80042d0 <_raise_r+0x14>
 80042c6:	2316      	movs	r3, #22
 80042c8:	6003      	str	r3, [r0, #0]
 80042ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80042ce:	bd38      	pop	{r3, r4, r5, pc}
 80042d0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80042d2:	b112      	cbz	r2, 80042da <_raise_r+0x1e>
 80042d4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80042d8:	b94b      	cbnz	r3, 80042ee <_raise_r+0x32>
 80042da:	4620      	mov	r0, r4
 80042dc:	f000 f830 	bl	8004340 <_getpid_r>
 80042e0:	462a      	mov	r2, r5
 80042e2:	4601      	mov	r1, r0
 80042e4:	4620      	mov	r0, r4
 80042e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80042ea:	f000 b817 	b.w	800431c <_kill_r>
 80042ee:	2b01      	cmp	r3, #1
 80042f0:	d00a      	beq.n	8004308 <_raise_r+0x4c>
 80042f2:	1c59      	adds	r1, r3, #1
 80042f4:	d103      	bne.n	80042fe <_raise_r+0x42>
 80042f6:	2316      	movs	r3, #22
 80042f8:	6003      	str	r3, [r0, #0]
 80042fa:	2001      	movs	r0, #1
 80042fc:	e7e7      	b.n	80042ce <_raise_r+0x12>
 80042fe:	2400      	movs	r4, #0
 8004300:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004304:	4628      	mov	r0, r5
 8004306:	4798      	blx	r3
 8004308:	2000      	movs	r0, #0
 800430a:	e7e0      	b.n	80042ce <_raise_r+0x12>

0800430c <raise>:
 800430c:	4b02      	ldr	r3, [pc, #8]	; (8004318 <raise+0xc>)
 800430e:	4601      	mov	r1, r0
 8004310:	6818      	ldr	r0, [r3, #0]
 8004312:	f7ff bfd3 	b.w	80042bc <_raise_r>
 8004316:	bf00      	nop
 8004318:	2000000c 	.word	0x2000000c

0800431c <_kill_r>:
 800431c:	b538      	push	{r3, r4, r5, lr}
 800431e:	4d07      	ldr	r5, [pc, #28]	; (800433c <_kill_r+0x20>)
 8004320:	2300      	movs	r3, #0
 8004322:	4604      	mov	r4, r0
 8004324:	4608      	mov	r0, r1
 8004326:	4611      	mov	r1, r2
 8004328:	602b      	str	r3, [r5, #0]
 800432a:	f7fc fe91 	bl	8001050 <_kill>
 800432e:	1c43      	adds	r3, r0, #1
 8004330:	d102      	bne.n	8004338 <_kill_r+0x1c>
 8004332:	682b      	ldr	r3, [r5, #0]
 8004334:	b103      	cbz	r3, 8004338 <_kill_r+0x1c>
 8004336:	6023      	str	r3, [r4, #0]
 8004338:	bd38      	pop	{r3, r4, r5, pc}
 800433a:	bf00      	nop
 800433c:	20000208 	.word	0x20000208

08004340 <_getpid_r>:
 8004340:	f7fc be84 	b.w	800104c <_getpid>

08004344 <__sread>:
 8004344:	b510      	push	{r4, lr}
 8004346:	460c      	mov	r4, r1
 8004348:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800434c:	f000 f894 	bl	8004478 <_read_r>
 8004350:	2800      	cmp	r0, #0
 8004352:	bfab      	itete	ge
 8004354:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004356:	89a3      	ldrhlt	r3, [r4, #12]
 8004358:	181b      	addge	r3, r3, r0
 800435a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800435e:	bfac      	ite	ge
 8004360:	6563      	strge	r3, [r4, #84]	; 0x54
 8004362:	81a3      	strhlt	r3, [r4, #12]
 8004364:	bd10      	pop	{r4, pc}

08004366 <__swrite>:
 8004366:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800436a:	461f      	mov	r7, r3
 800436c:	898b      	ldrh	r3, [r1, #12]
 800436e:	05db      	lsls	r3, r3, #23
 8004370:	4605      	mov	r5, r0
 8004372:	460c      	mov	r4, r1
 8004374:	4616      	mov	r6, r2
 8004376:	d505      	bpl.n	8004384 <__swrite+0x1e>
 8004378:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800437c:	2302      	movs	r3, #2
 800437e:	2200      	movs	r2, #0
 8004380:	f000 f868 	bl	8004454 <_lseek_r>
 8004384:	89a3      	ldrh	r3, [r4, #12]
 8004386:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800438a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800438e:	81a3      	strh	r3, [r4, #12]
 8004390:	4632      	mov	r2, r6
 8004392:	463b      	mov	r3, r7
 8004394:	4628      	mov	r0, r5
 8004396:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800439a:	f000 b817 	b.w	80043cc <_write_r>

0800439e <__sseek>:
 800439e:	b510      	push	{r4, lr}
 80043a0:	460c      	mov	r4, r1
 80043a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80043a6:	f000 f855 	bl	8004454 <_lseek_r>
 80043aa:	1c43      	adds	r3, r0, #1
 80043ac:	89a3      	ldrh	r3, [r4, #12]
 80043ae:	bf15      	itete	ne
 80043b0:	6560      	strne	r0, [r4, #84]	; 0x54
 80043b2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80043b6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80043ba:	81a3      	strheq	r3, [r4, #12]
 80043bc:	bf18      	it	ne
 80043be:	81a3      	strhne	r3, [r4, #12]
 80043c0:	bd10      	pop	{r4, pc}

080043c2 <__sclose>:
 80043c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80043c6:	f000 b813 	b.w	80043f0 <_close_r>
	...

080043cc <_write_r>:
 80043cc:	b538      	push	{r3, r4, r5, lr}
 80043ce:	4d07      	ldr	r5, [pc, #28]	; (80043ec <_write_r+0x20>)
 80043d0:	4604      	mov	r4, r0
 80043d2:	4608      	mov	r0, r1
 80043d4:	4611      	mov	r1, r2
 80043d6:	2200      	movs	r2, #0
 80043d8:	602a      	str	r2, [r5, #0]
 80043da:	461a      	mov	r2, r3
 80043dc:	f7fc fe54 	bl	8001088 <_write>
 80043e0:	1c43      	adds	r3, r0, #1
 80043e2:	d102      	bne.n	80043ea <_write_r+0x1e>
 80043e4:	682b      	ldr	r3, [r5, #0]
 80043e6:	b103      	cbz	r3, 80043ea <_write_r+0x1e>
 80043e8:	6023      	str	r3, [r4, #0]
 80043ea:	bd38      	pop	{r3, r4, r5, pc}
 80043ec:	20000208 	.word	0x20000208

080043f0 <_close_r>:
 80043f0:	b538      	push	{r3, r4, r5, lr}
 80043f2:	4d06      	ldr	r5, [pc, #24]	; (800440c <_close_r+0x1c>)
 80043f4:	2300      	movs	r3, #0
 80043f6:	4604      	mov	r4, r0
 80043f8:	4608      	mov	r0, r1
 80043fa:	602b      	str	r3, [r5, #0]
 80043fc:	f7fc fe52 	bl	80010a4 <_close>
 8004400:	1c43      	adds	r3, r0, #1
 8004402:	d102      	bne.n	800440a <_close_r+0x1a>
 8004404:	682b      	ldr	r3, [r5, #0]
 8004406:	b103      	cbz	r3, 800440a <_close_r+0x1a>
 8004408:	6023      	str	r3, [r4, #0]
 800440a:	bd38      	pop	{r3, r4, r5, pc}
 800440c:	20000208 	.word	0x20000208

08004410 <_fstat_r>:
 8004410:	b538      	push	{r3, r4, r5, lr}
 8004412:	4d07      	ldr	r5, [pc, #28]	; (8004430 <_fstat_r+0x20>)
 8004414:	2300      	movs	r3, #0
 8004416:	4604      	mov	r4, r0
 8004418:	4608      	mov	r0, r1
 800441a:	4611      	mov	r1, r2
 800441c:	602b      	str	r3, [r5, #0]
 800441e:	f7fc fe45 	bl	80010ac <_fstat>
 8004422:	1c43      	adds	r3, r0, #1
 8004424:	d102      	bne.n	800442c <_fstat_r+0x1c>
 8004426:	682b      	ldr	r3, [r5, #0]
 8004428:	b103      	cbz	r3, 800442c <_fstat_r+0x1c>
 800442a:	6023      	str	r3, [r4, #0]
 800442c:	bd38      	pop	{r3, r4, r5, pc}
 800442e:	bf00      	nop
 8004430:	20000208 	.word	0x20000208

08004434 <_isatty_r>:
 8004434:	b538      	push	{r3, r4, r5, lr}
 8004436:	4d06      	ldr	r5, [pc, #24]	; (8004450 <_isatty_r+0x1c>)
 8004438:	2300      	movs	r3, #0
 800443a:	4604      	mov	r4, r0
 800443c:	4608      	mov	r0, r1
 800443e:	602b      	str	r3, [r5, #0]
 8004440:	f7fc fe3a 	bl	80010b8 <_isatty>
 8004444:	1c43      	adds	r3, r0, #1
 8004446:	d102      	bne.n	800444e <_isatty_r+0x1a>
 8004448:	682b      	ldr	r3, [r5, #0]
 800444a:	b103      	cbz	r3, 800444e <_isatty_r+0x1a>
 800444c:	6023      	str	r3, [r4, #0]
 800444e:	bd38      	pop	{r3, r4, r5, pc}
 8004450:	20000208 	.word	0x20000208

08004454 <_lseek_r>:
 8004454:	b538      	push	{r3, r4, r5, lr}
 8004456:	4d07      	ldr	r5, [pc, #28]	; (8004474 <_lseek_r+0x20>)
 8004458:	4604      	mov	r4, r0
 800445a:	4608      	mov	r0, r1
 800445c:	4611      	mov	r1, r2
 800445e:	2200      	movs	r2, #0
 8004460:	602a      	str	r2, [r5, #0]
 8004462:	461a      	mov	r2, r3
 8004464:	f7fc fe2a 	bl	80010bc <_lseek>
 8004468:	1c43      	adds	r3, r0, #1
 800446a:	d102      	bne.n	8004472 <_lseek_r+0x1e>
 800446c:	682b      	ldr	r3, [r5, #0]
 800446e:	b103      	cbz	r3, 8004472 <_lseek_r+0x1e>
 8004470:	6023      	str	r3, [r4, #0]
 8004472:	bd38      	pop	{r3, r4, r5, pc}
 8004474:	20000208 	.word	0x20000208

08004478 <_read_r>:
 8004478:	b538      	push	{r3, r4, r5, lr}
 800447a:	4d07      	ldr	r5, [pc, #28]	; (8004498 <_read_r+0x20>)
 800447c:	4604      	mov	r4, r0
 800447e:	4608      	mov	r0, r1
 8004480:	4611      	mov	r1, r2
 8004482:	2200      	movs	r2, #0
 8004484:	602a      	str	r2, [r5, #0]
 8004486:	461a      	mov	r2, r3
 8004488:	f7fc fdf0 	bl	800106c <_read>
 800448c:	1c43      	adds	r3, r0, #1
 800448e:	d102      	bne.n	8004496 <_read_r+0x1e>
 8004490:	682b      	ldr	r3, [r5, #0]
 8004492:	b103      	cbz	r3, 8004496 <_read_r+0x1e>
 8004494:	6023      	str	r3, [r4, #0]
 8004496:	bd38      	pop	{r3, r4, r5, pc}
 8004498:	20000208 	.word	0x20000208

0800449c <_init>:
 800449c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800449e:	bf00      	nop
 80044a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80044a2:	bc08      	pop	{r3}
 80044a4:	469e      	mov	lr, r3
 80044a6:	4770      	bx	lr

080044a8 <_fini>:
 80044a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044aa:	bf00      	nop
 80044ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80044ae:	bc08      	pop	{r3}
 80044b0:	469e      	mov	lr, r3
 80044b2:	4770      	bx	lr
